name: "Verify Release"

on:
  workflow_dispatch:
    inputs:
      providerVersion:
        description: "The version of the provider to verify"
        required: true
        type: string
      enableMacRunner:
        description: "Enable the MacOS runner in addition to Linux and Windows. Defaults to 'false'."
        required: false
        type: boolean
      skipGoSdk:
        description: "Skip the Go SDK verification. Defaults to 'false'. Enable this when verifying a pre-release for which we don't publish the Go SDK (for PRs and the default branch)."
        required: false
        type: boolean
        default: false
      pythonVersion:
        description: "Optional python SDK version to verify. Defaults to inputs.providerVersion."
        type: string
        required: false
  workflow_call:
    inputs:
      providerVersion:
        description: "The version of the provider to verify"
        required: true
        type: string
      skipGoSdk:
        description: "Skip the Go SDK verification. Defaults to 'false'. This is used when we're not publishing a Go SDK on the default branch build."
        required: false
        type: boolean
        default: false
      pythonVersion:
        description: "Optional python SDK version to verify. Defaults to inputs.providerVersion."
        type: string
        required: false

env:
  ARM_CLIENT_ID: d3b6ec3a-36fe-46c9-b3d9-5856a2e0e73c
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET_CI }}
  ARM_ENVIRONMENT: public
  ARM_SUBSCRIPTION_ID: 0282681f-7a9e-424b-80b2-96babd57a8a1
  ARM_TENANT_ID: 9605c22c-e585-4ea3-9b83-e90339719f8a
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  RUN_OIDC_TESTS: ${{ github.event_name == 'pull_request' && 'true' || '' }}
  TF_APPEND_USER_AGENT: pulumi

jobs:
  verify-release:
    name: verify-release
    strategy:
      matrix:
        runner: ["ubuntu-latest", "windows-latest", "macos-latest"]
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Configure Git to checkout files with long names
        run: git config --global core.longpaths true
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: pulumicli, nodejs, python, dotnet, go, java
      - name: Verify nodejs release
        uses: pulumi/verify-provider-release@679d5e6838ac4f68696bfa1bf9e2c5da94509dd6 # v1.3.1
        with:
          runtime: nodejs
          directory: examples/release-verification/ts/user
          provider: azuread
          providerVersion: ${{ inputs.providerVersion }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Verify python release
        uses: pulumi/verify-provider-release@679d5e6838ac4f68696bfa1bf9e2c5da94509dd6 # v1.3.1
        with:
          runtime: python
          directory: examples/release-verification/py/user
          provider: azuread
          providerVersion: ${{ inputs.providerVersion }}
          packageVersion: ${{ inputs.pythonVersion || inputs.providerVersion }}
      - name: Verify dotnet release
        uses: pulumi/verify-provider-release@679d5e6838ac4f68696bfa1bf9e2c5da94509dd6 # v1.3.1
        with:
          runtime: dotnet
          directory: examples/release-verification/cs/user
          provider: azuread
          providerVersion: ${{ inputs.providerVersion }}
      - name: Verify go release
        uses: pulumi/verify-provider-release@679d5e6838ac4f68696bfa1bf9e2c5da94509dd6 # v1.3.1
        if: inputs.skipGoSdk == false
        with:
          runtime: go
          directory: examples/release-verification/go/user
          provider: azuread
          providerVersion: ${{ inputs.providerVersion }}
