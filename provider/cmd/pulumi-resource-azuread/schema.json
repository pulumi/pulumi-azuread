{
    "name": "azuread",
    "description": "A Pulumi package for creating and managing azuread cloud resources.",
    "keywords": [
        "pulumi",
        "azuread"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`azuread` Terraform Provider](https://github.com/hashicorp/terraform-provider-azuread).",
    "repository": "https://github.com/pulumi/pulumi-azuread",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "clientCertificate": {
                "type": "string",
                "description": "Base64 encoded PKCS#12 certificate bundle to use when authenticating as a Service Principal using a Client Certificate\n"
            },
            "clientCertificatePassword": {
                "type": "string",
                "description": "The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used for service principal authentication\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The application password to use when authenticating as a Service Principal using a Client Secret\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "Disable the Terraform Partner ID, which is used if a custom `partner_id` isn't specified\n"
            },
            "environment": {
                "type": "string",
                "description": "The cloud environment which should be used. Possible values are: `global` (also `public`), `usgovernmentl4` (also\n`usgovernment`), `usgovernmentl5` (also `dod`), `germany` (also `german`), and `china`. Defaults to `global`\n",
                "default": "public",
                "defaultInfo": {
                    "environment": [
                        "ARM_ENVIRONMENT"
                    ]
                }
            },
            "msiEndpoint": {
                "type": "string",
                "description": "The path to a custom endpoint for Managed Identity - in most circumstances this should be detected automatically\n",
                "defaultInfo": {
                    "environment": [
                        "ARM_MSI_ENDPOINT"
                    ]
                }
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used. Works with all authentication methods except Managed Identity\n"
            },
            "useCli": {
                "type": "boolean",
                "description": "Allow Azure CLI to be used for Authentication\n"
            },
            "useMsi": {
                "type": "boolean",
                "description": "Allow Managed Identity to be used for Authentication\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "ARM_USE_MSI"
                    ]
                }
            }
        },
        "defaults": [
            "environment"
        ]
    },
    "types": {
        "azuread:index/ApplicationApi:ApplicationApi": {
            "properties": {
                "knownClientApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mappedClaimsEnabled": {
                    "type": "boolean",
                    "description": "Allows an application to use claims mapping without specifying a custom signing key. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationApiOauth2PermissionScope:ApplicationApiOauth2PermissionScope"
                    },
                    "description": "One or more `oauth2_permission_scope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestedAccessTokenVersion": {
                    "type": "integer",
                    "description": "The access token version expected by this resource. Must be one of `1` or `2`, and must be `2` when `sign_in_audience` is either `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount` Defaults to `1`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationApiOauth2PermissionScope:ApplicationApiOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the permission scope is enabled. Defaults to `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the delegated permission. Must be a valid UUID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "azuread:index/ApplicationAppRole:ApplicationAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled. Defaults to `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the app role. Must be a valid UUID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMemberTypes",
                "description",
                "displayName",
                "id"
            ]
        },
        "azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims": {
            "properties": {
                "accessTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaimsAccessToken:ApplicationOptionalClaimsAccessToken"
                    },
                    "description": "One or more `access_token` blocks as documented below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaimsIdToken:ApplicationOptionalClaimsIdToken"
                    },
                    "description": "One or more `id_token` blocks as documented below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saml2Tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaimsSaml2Token:ApplicationOptionalClaimsSaml2Token"
                    },
                    "description": "One or more `saml2_token` blocks as documented below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationOptionalClaimsAccessToken:ApplicationOptionalClaimsAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/ApplicationOptionalClaimsIdToken:ApplicationOptionalClaimsIdToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/ApplicationOptionalClaimsSaml2Token:ApplicationOptionalClaimsSaml2Token": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/ApplicationPublicClient:ApplicationPublicClient": {
            "properties": {
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` or `ms-appx-web` URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess": {
            "properties": {
                "resourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccessResourceAccess:ApplicationRequiredResourceAccessResourceAccess"
                    },
                    "description": "A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceAppId": {
                    "type": "string",
                    "description": "The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceAccesses",
                "resourceAppId"
            ]
        },
        "azuread:index/ApplicationRequiredResourceAccessResourceAccess:ApplicationRequiredResourceAccessResourceAccess": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for an app role or OAuth2 permission scope published by the resource application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ]
        },
        "azuread:index/ApplicationSinglePageApplication:ApplicationSinglePageApplication": {
            "properties": {
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationWeb:ApplicationWeb": {
            "properties": {
                "homepageUrl": {
                    "type": "string",
                    "description": "Home page or landing page of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "implicitGrant": {
                    "$ref": "#/types/azuread:index/ApplicationWebImplicitGrant:ApplicationWebImplicitGrant",
                    "description": "An `implicit_grant` block as documented above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `http` URL or a URN.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationWebImplicitGrant:ApplicationWebImplicitGrant": {
            "properties": {
                "accessTokenIssuanceEnabled": {
                    "type": "boolean",
                    "description": "Whether this web application can request an access token using OAuth 2.0 implicit flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idTokenIssuanceEnabled": {
                    "type": "boolean",
                    "description": "Whether this web application can request an ID token using OAuth 2.0 implicit flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ConditionalAccessPolicyConditions:ConditionalAccessPolicyConditions": {
            "properties": {
                "applications": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditionsApplications:ConditionalAccessPolicyConditionsApplications",
                    "description": "An `applications` block as documented below, which specifies applications and user actions included in and excluded from the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientAppTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of client application types included in the policy. Possible values are: `all`, `browser`, `mobileAppsAndDesktopClients`, `exchangeActiveSync`, `easSupported` and `other`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "locations": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditionsLocations:ConditionalAccessPolicyConditionsLocations",
                    "description": "A `locations` block as documented below, which specifies locations included in and excluded from the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "platforms": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditionsPlatforms:ConditionalAccessPolicyConditionsPlatforms",
                    "description": "A `platforms` block as documented below, which specifies platforms included in and excluded from the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signInRiskLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of sign-in risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userRiskLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditionsUsers:ConditionalAccessPolicyConditionsUsers",
                    "description": "A `users` block as documented below, which specifies users, groups, and roles included in and excluded from the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applications",
                "clientAppTypes",
                "locations",
                "platforms",
                "users"
            ]
        },
        "azuread:index/ConditionalAccessPolicyConditionsApplications:ConditionalAccessPolicyConditionsApplications": {
            "properties": {
                "excludedApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of application IDs explicitly excluded from the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of application IDs the policy applies to, unless explicitly excluded (in `excluded_applications`). Can also be set to `All`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedUserActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user actions to include. Supported values are `urn:user:registersecurityinfo` and `urn:user:registerdevice`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "includedApplications"
            ]
        },
        "azuread:index/ConditionalAccessPolicyConditionsLocations:ConditionalAccessPolicyConditionsLocations": {
            "properties": {
                "excludedLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of location IDs excluded from scope of policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedLocations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of location IDs in scope of policy unless explicitly excluded. Can also be set to `All`, or `AllTrusted`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "includedLocations"
            ]
        },
        "azuread:index/ConditionalAccessPolicyConditionsPlatforms:ConditionalAccessPolicyConditionsPlatforms": {
            "properties": {
                "excludedPlatforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedPlatforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "includedPlatforms"
            ]
        },
        "azuread:index/ConditionalAccessPolicyConditionsUsers:ConditionalAccessPolicyConditionsUsers": {
            "properties": {
                "excludedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs excluded from scope of policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs excluded from scope of policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs excluded from scope of policy and/or `GuestsOrExternalUsers`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of group IDs in scope of policy unless explicitly excluded, or `All`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs in scope of policy unless explicitly excluded, or `All`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs in scope of policy unless explicitly excluded, or `None` or `All` or `GuestsOrExternalUsers`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ConditionalAccessPolicyGrantControls:ConditionalAccessPolicyGrantControls": {
            "properties": {
                "builtInControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customAuthenticationFactors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom controls IDs required by the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "termsOfUses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of terms of use IDs required by the policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "builtInControls",
                "operator"
            ]
        },
        "azuread:index/ConditionalAccessPolicySessionControls:ConditionalAccessPolicySessionControls": {
            "properties": {
                "applicationEnforcedRestrictionsEnabled": {
                    "type": "boolean",
                    "description": "Whether or not application enforced restrictions are enabled. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudAppSecurityPolicy": {
                    "type": "string",
                    "description": "Enables cloud app security and specifies the cloud app security policy to use. Possible values are: `blockDownloads`, `mcasConfigured`, `monitorOnly` or `unknownFutureValue`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signInFrequency": {
                    "type": "integer",
                    "description": "Number of days or hours to enforce sign-in frequency. Required when `sign_in_frequency_period` is specified. Due to an API issue, removing this property forces a new resource to be created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signInFrequencyPeriod": {
                    "type": "string",
                    "description": "The time period to enforce sign-in frequency. Possible values are: `hours` or `days`. Required when `sign_in_frequency_period` is specified. Due to an API issue, removing this property forces a new resource to be created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/InvitationMessage:InvitationMessage": {
            "properties": {
                "additionalRecipients": {
                    "type": "string",
                    "description": "Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "body": {
                    "type": "string",
                    "description": "Customized message body you want to send if you don't want to send the default message. Cannot be specified with `language`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "language": {
                    "type": "string",
                    "description": "The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to `en-US`. Cannot be specified with `body`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/NamedLocationCountry:NamedLocationCountry": {
            "properties": {
                "countriesAndRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of countries and/or regions in two-letter format specified by ISO 3166-2.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeUnknownCountriesAndRegions": {
                    "type": "boolean",
                    "description": "Whether IP addresses that don't map to a country or region should be included in the named location. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "countriesAndRegions"
            ]
        },
        "azuread:index/NamedLocationIp:NamedLocationIp": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trusted": {
                    "type": "boolean",
                    "description": "Whether the named location is trusted. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ]
        },
        "azuread:index/ServicePrincipalAppRole:ServicePrincipalAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: `User` and `Application`, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A description of the service principal provided for internal end-users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the delegated permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedMemberTypes",
                        "description",
                        "displayName",
                        "enabled",
                        "id",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/ServicePrincipalFeature:ServicePrincipalFeature": {
            "properties": {
                "customSingleSignOnApp": {
                    "type": "boolean",
                    "description": "Whether this service principal represents a custom SAML application. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enterpriseApplication": {
                    "type": "boolean",
                    "description": "Whether this service principal represents an Enterprise Application. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "galleryApplication": {
                    "type": "boolean",
                    "description": "Whether this service principal represents a gallery application. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visibleToUsers": {
                    "type": "boolean",
                    "description": "Whether this app is visible to users in My Apps and Office 365 Launcher. Defaults to `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the delegated permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminConsentDescription",
                        "adminConsentDisplayName",
                        "enabled",
                        "id",
                        "type",
                        "userConsentDescription",
                        "userConsentDisplayName",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/ServicePrincipalSamlSingleSignOn:ServicePrincipalSamlSingleSignOn": {
            "properties": {
                "relayState": {
                    "type": "string",
                    "description": "The relative URI the service provider would redirect to after completion of the single sign-on flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/getApplicationApi:getApplicationApi": {
            "properties": {
                "knownClientApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mappedClaimsEnabled": {
                    "type": "boolean",
                    "description": "Allows an application to use claims mapping without specifying a custom signing key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationApiOauth2PermissionScope:getApplicationApiOauth2PermissionScope"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestedAccessTokenVersion": {
                    "type": "integer",
                    "description": "The access token version expected by this resource. Possible values are `1` or `2`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "knownClientApplications",
                "mappedClaimsEnabled",
                "oauth2PermissionScopes",
                "requestedAccessTokenVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationApiOauth2PermissionScope:getApplicationApiOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for an app role or OAuth2 permission scope published by the resource application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "enabled",
                "id",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationAppRole:getApplicationAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are `User` or `Application`, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Specifies the display name of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for an app role or OAuth2 permission scope published by the resource application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMemberTypes",
                "description",
                "displayName",
                "enabled",
                "id",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationOptionalClaim:getApplicationOptionalClaim": {
            "properties": {
                "accessTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaimAccessToken:getApplicationOptionalClaimAccessToken"
                    },
                    "description": "One or more `access_token` blocks as documented below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaimIdToken:getApplicationOptionalClaimIdToken"
                    },
                    "description": "One or more `id_token` blocks as documented below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "saml2Tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaimSaml2Token:getApplicationOptionalClaimSaml2Token"
                    },
                    "description": "One or more `saml2_token` blocks as documented below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/getApplicationOptionalClaimAccessToken:getApplicationOptionalClaimAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationOptionalClaimIdToken:getApplicationOptionalClaimIdToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationOptionalClaimSaml2Token:getApplicationOptionalClaimSaml2Token": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationPublicClient:getApplicationPublicClient": {
            "properties": {
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "redirectUris"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationRequiredResourceAccess:getApplicationRequiredResourceAccess": {
            "properties": {
                "resourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationRequiredResourceAccessResourceAccess:getApplicationRequiredResourceAccessResourceAccess"
                    },
                    "description": "A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceAppId": {
                    "type": "string",
                    "description": "The unique identifier for the resource that the application requires access to. This is the Application ID of the target application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceAccesses",
                "resourceAppId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationRequiredResourceAccessResourceAccess:getApplicationRequiredResourceAccessResourceAccess": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for an app role or OAuth2 permission scope published by the resource application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationSinglePageApplication:getApplicationSinglePageApplication": {
            "properties": {
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "redirectUris"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationWeb:getApplicationWeb": {
            "properties": {
                "homepageUrl": {
                    "type": "string",
                    "description": "Home page or landing page of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "implicitGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationWebImplicitGrant:getApplicationWebImplicitGrant"
                    },
                    "description": "An `implicit_grant` block as documented above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "homepageUrl",
                "implicitGrants",
                "logoutUrl",
                "redirectUris"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationWebImplicitGrant:getApplicationWebImplicitGrant": {
            "properties": {
                "accessTokenIssuanceEnabled": {
                    "type": "boolean",
                    "description": "Whether this web application can request an access token using OAuth 2.0 implicit flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idTokenIssuanceEnabled": {
                    "type": "boolean",
                    "description": "Whether this web application can request an ID token using OAuth 2.0 implicit flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessTokenIssuanceEnabled",
                "idTokenIssuanceEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getDomainsDomain:getDomainsDomain": {
            "properties": {
                "adminManaged": {
                    "type": "boolean",
                    "description": "Set to `true` to only return domains whose DNS is managed by Microsoft 365. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authenticationType": {
                    "type": "string",
                    "description": "The authentication type of the domain. Possible values include `Managed` or `Federated`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether this is the default domain that is used for user creation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initial": {
                    "type": "boolean",
                    "description": "Whether this is the initial domain created by Azure Active Directory.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "root": {
                    "type": "boolean",
                    "description": "Whether the domain is a verified root domain (not a subdomain).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportedServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of capabilities / services supported by the domain. Possible values include `Email`, `Sharepoint`, `EmailInternalRelayOnly`, `OfficeCommunicationsOnline`, `SharePointDefaultDomain`, `FullRedelegation`, `SharePointPublic`, `OrgIdAuthentication`, `Yammer` and `Intune`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verified": {
                    "type": "boolean",
                    "description": "Whether the domain has completed domain ownership verification.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminManaged",
                "authenticationType",
                "default",
                "domainName",
                "initial",
                "root",
                "supportedServices",
                "verified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalAppRole:getServicePrincipalAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in daemon service scenarios). Possible values are: `User` and `Application`, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Permission help text that appears in the admin app assignment and consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the application associated with this service principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the delegated permission. Must be a valid UUID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMemberTypes",
                "description",
                "displayName",
                "enabled",
                "id",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalFeature:getServicePrincipalFeature": {
            "properties": {
                "customSingleSignOnApp": {
                    "type": "boolean",
                    "description": "Whether this service principal represents a custom SAML application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enterpriseApplication": {
                    "type": "boolean",
                    "description": "Whether this service principal represents an Enterprise Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "galleryApplication": {
                    "type": "boolean",
                    "description": "Whether this service principal represents a gallery application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visibleToUsers": {
                    "type": "boolean",
                    "description": "Whether this app is visible to users in My Apps and Office 365 Launcher.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "customSingleSignOnApp",
                "enterpriseApplication",
                "galleryApplication",
                "visibleToUsers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalOauth2PermissionScope:getServicePrincipalOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the delegated permission. Must be a valid UUID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "enabled",
                "id",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalSamlSingleSignOn:getServicePrincipalSamlSingleSignOn": {
            "properties": {
                "relayState": {
                    "type": "string",
                    "description": "The relative URI the service provider would redirect to after completion of the single sign-on flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "relayState"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalsServicePrincipal:getServicePrincipalsServicePrincipal": {
            "properties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the service principal account is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appRoleAssignmentRequired": {
                    "type": "boolean",
                    "description": "Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application ID (client ID) of the application associated with this service principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "applicationTenantId": {
                    "type": "string",
                    "description": "The tenant ID where the associated application is registered.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the application associated with this service principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredSingleSignOnMode": {
                    "type": "string",
                    "description": "The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "The URL where the service exposes SAML metadata for federation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicePrincipalNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of identifier URI(s), copied over from the associated application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signInAudience": {
                    "type": "string",
                    "description": "The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to the service principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Identifies whether the service principal represents an application or a managed identity. Possible values include `Application` or `ManagedIdentity`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountEnabled",
                "appRoleAssignmentRequired",
                "applicationId",
                "applicationTenantId",
                "displayName",
                "preferredSingleSignOnMode",
                "samlMetadataUrl",
                "servicePrincipalNames",
                "signInAudience",
                "tags",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getUsersUser:getUsersUser": {
            "properties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the account is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mail": {
                    "type": "string",
                    "description": "The primary email address of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The email alias of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectId": {
                    "type": "string",
                    "description": "The object ID of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onpremisesImmutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premises Active Directory user account with their Azure AD user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onpremisesSamAccountName": {
                    "type": "string",
                    "description": "The on-premise SAM account name of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onpremisesUserPrincipalName": {
                    "type": "string",
                    "description": "The on-premise user principal name of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usageLocation": {
                    "type": "string",
                    "description": "The usage location of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "The user principal name (UPN) of the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountEnabled",
                "displayName",
                "mail",
                "mailNickname",
                "objectId",
                "onpremisesImmutableId",
                "onpremisesSamAccountName",
                "onpremisesUserPrincipalName",
                "usageLocation",
                "userPrincipalName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the azuread package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientCertificate": {
                "type": "string",
                "description": "Base64 encoded PKCS#12 certificate bundle to use when authenticating as a Service Principal using a Client Certificate\n"
            },
            "clientCertificatePassword": {
                "type": "string",
                "description": "The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used for service principal authentication\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The application password to use when authenticating as a Service Principal using a Client Secret\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "Disable the Terraform Partner ID, which is used if a custom `partner_id` isn't specified\n"
            },
            "environment": {
                "type": "string",
                "description": "The cloud environment which should be used. Possible values are: `global` (also `public`), `usgovernmentl4` (also\n`usgovernment`), `usgovernmentl5` (also `dod`), `germany` (also `german`), and `china`. Defaults to `global`\n"
            },
            "msiEndpoint": {
                "type": "string",
                "description": "The path to a custom endpoint for Managed Identity - in most circumstances this should be detected automatically\n"
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used. Works with all authentication methods except Managed Identity\n"
            },
            "useCli": {
                "type": "boolean",
                "description": "Allow Azure CLI to be used for Authentication\n"
            },
            "useMsi": {
                "type": "boolean",
                "description": "Allow Managed Identity to be used for Authentication\n"
            }
        },
        "inputProperties": {
            "clientCertificate": {
                "type": "string",
                "description": "Base64 encoded PKCS#12 certificate bundle to use when authenticating as a Service Principal using a Client Certificate\n"
            },
            "clientCertificatePassword": {
                "type": "string",
                "description": "The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used for service principal authentication\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The application password to use when authenticating as a Service Principal using a Client Secret\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "Disable the Terraform Partner ID, which is used if a custom `partner_id` isn't specified\n"
            },
            "environment": {
                "type": "string",
                "description": "The cloud environment which should be used. Possible values are: `global` (also `public`), `usgovernmentl4` (also\n`usgovernment`), `usgovernmentl5` (also `dod`), `germany` (also `german`), and `china`. Defaults to `global`\n",
                "default": "public",
                "defaultInfo": {
                    "environment": [
                        "ARM_ENVIRONMENT"
                    ]
                }
            },
            "msiEndpoint": {
                "type": "string",
                "description": "The path to a custom endpoint for Managed Identity - in most circumstances this should be detected automatically\n",
                "defaultInfo": {
                    "environment": [
                        "ARM_MSI_ENDPOINT"
                    ]
                }
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used. Works with all authentication methods except Managed Identity\n"
            },
            "useCli": {
                "type": "boolean",
                "description": "Allow Azure CLI to be used for Authentication\n"
            },
            "useMsi": {
                "type": "boolean",
                "description": "Allow Managed Identity to be used for Authentication\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "ARM_USE_MSI"
                    ]
                }
            }
        }
    },
    "resources": {
        "azuread:index/appRoleAssignment:AppRoleAssignment": {
            "description": "Manages an app role assignment for a group, user or service principal. Can be used to grant admin consent for application permissions.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `AppRoleAssignment.ReadWrite.All` and `Application.Read.All`, or `AppRoleAssignment.ReadWrite.All` and `Directory.Read.All`, or `Application.ReadWrite.All`, or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*App role assignment for accessing Microsoft Graph*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst wellKnown = azuread.getApplicationPublishedAppIds({});\nconst msgraph = new azuread.ServicePrincipal(\"msgraph\", {\n    applicationId: wellKnown.then(wellKnown =\u003e wellKnown.result?.MicrosoftGraph),\n    useExisting: true,\n});\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {\n    displayName: \"example\",\n    requiredResourceAccesses: [{\n        resourceAppId: wellKnown.then(wellKnown =\u003e wellKnown.result?.MicrosoftGraph),\n        resourceAccesses: [\n            {\n                id: msgraph.appRoleIds[\"User.Read.All\"],\n                type: \"Role\",\n            },\n            {\n                id: msgraph.oauth2PermissionScopeIds[\"User.ReadWrite\"],\n                type: \"Scope\",\n            },\n        ],\n    }],\n});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {applicationId: exampleApplication.applicationId});\nconst exampleAppRoleAssignment = new azuread.AppRoleAssignment(\"exampleAppRoleAssignment\", {\n    appRoleId: msgraph.appRoleIds[\"User.Read.All\"],\n    principalObjectId: exampleServicePrincipal.objectId,\n    resourceObjectId: msgraph.objectId,\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nwell_known = azuread.get_application_published_app_ids()\nmsgraph = azuread.ServicePrincipal(\"msgraph\",\n    application_id=well_known.result[\"MicrosoftGraph\"],\n    use_existing=True)\nexample_application = azuread.Application(\"exampleApplication\",\n    display_name=\"example\",\n    required_resource_accesses=[azuread.ApplicationRequiredResourceAccessArgs(\n        resource_app_id=well_known.result[\"MicrosoftGraph\"],\n        resource_accesses=[\n            azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                id=msgraph.app_role_ids[\"User.Read.All\"],\n                type=\"Role\",\n            ),\n            azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                id=msgraph.oauth2_permission_scope_ids[\"User.ReadWrite\"],\n                type=\"Scope\",\n            ),\n        ],\n    )])\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\", application_id=example_application.application_id)\nexample_app_role_assignment = azuread.AppRoleAssignment(\"exampleAppRoleAssignment\",\n    app_role_id=msgraph.app_role_ids[\"User.Read.All\"],\n    principal_object_id=example_service_principal.object_id,\n    resource_object_id=msgraph.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var wellKnown = Output.Create(AzureAD.GetApplicationPublishedAppIds.InvokeAsync());\n        var msgraph = new AzureAD.ServicePrincipal(\"msgraph\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = wellKnown.Apply(wellKnown =\u003e wellKnown.Result?.MicrosoftGraph),\n            UseExisting = true,\n        });\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            RequiredResourceAccesses = \n            {\n                new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs\n                {\n                    ResourceAppId = wellKnown.Apply(wellKnown =\u003e wellKnown.Result?.MicrosoftGraph),\n                    ResourceAccesses = \n                    {\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = msgraph.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.User_Read_All),\n                            Type = \"Role\",\n                        },\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = msgraph.Oauth2PermissionScopeIds.Apply(oauth2PermissionScopeIds =\u003e oauth2PermissionScopeIds.User_ReadWrite),\n                            Type = \"Scope\",\n                        },\n                    },\n                },\n            },\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n        });\n        var exampleAppRoleAssignment = new AzureAD.AppRoleAssignment(\"exampleAppRoleAssignment\", new AzureAD.AppRoleAssignmentArgs\n        {\n            AppRoleId = msgraph.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.User_Read_All),\n            PrincipalObjectId = exampleServicePrincipal.ObjectId,\n            ResourceObjectId = msgraph.ObjectId,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\twellKnown, err := azuread.GetApplicationPublishedAppIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmsgraph, err := azuread.NewServicePrincipal(ctx, \"msgraph\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: pulumi.String(wellKnown.Result.MicrosoftGraph),\n\t\t\tUseExisting:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tRequiredResourceAccesses: ApplicationRequiredResourceAccessArray{\n\t\t\t\t\u0026ApplicationRequiredResourceAccessArgs{\n\t\t\t\t\tResourceAppId: pulumi.String(wellKnown.Result.MicrosoftGraph),\n\t\t\t\t\tResourceAccesses: ApplicationRequiredResourceAccessResourceAccessArray{\n\t\t\t\t\t\t\u0026ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId: msgraph.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\t\t\t\t\treturn appRoleIds.User.Read.All, nil\n\t\t\t\t\t\t\t}).(pulumi.StringOutput),\n\t\t\t\t\t\t\tType: pulumi.String(\"Role\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId: msgraph.Oauth2PermissionScopeIds.ApplyT(func(oauth2PermissionScopeIds map[string]string) (string, error) {\n\t\t\t\t\t\t\t\treturn oauth2PermissionScopeIds.User.ReadWrite, nil\n\t\t\t\t\t\t\t}).(pulumi.StringOutput),\n\t\t\t\t\t\t\tType: pulumi.String(\"Scope\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleServicePrincipal, err := azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: exampleApplication.ApplicationId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewAppRoleAssignment(ctx, \"exampleAppRoleAssignment\", \u0026azuread.AppRoleAssignmentArgs{\n\t\t\tAppRoleId: msgraph.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\treturn appRoleIds.User.Read.All, nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tPrincipalObjectId: exampleServicePrincipal.ObjectId,\n\t\t\tResourceObjectId:  msgraph.ObjectId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*App role assignment for internal application*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst internalApplication = new azuread.Application(\"internalApplication\", {\n    displayName: \"internal\",\n    appRoles: [{\n        allowedMemberTypes: [\"Application\"],\n        description: \"Apps can query the database\",\n        displayName: \"Query\",\n        enabled: true,\n        id: \"00000000-0000-0000-0000-111111111111\",\n        value: \"Query.All\",\n    }],\n});\nconst internalServicePrincipal = new azuread.ServicePrincipal(\"internalServicePrincipal\", {applicationId: internalApplication.applicationId});\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {\n    displayName: \"example\",\n    requiredResourceAccesses: [{\n        resourceAppId: internalApplication.applicationId,\n        resourceAccesses: [{\n            id: internalServicePrincipal.appRoleIds[\"Query.All\"],\n            type: \"Role\",\n        }],\n    }],\n});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {applicationId: exampleApplication.applicationId});\nconst exampleAppRoleAssignment = new azuread.AppRoleAssignment(\"exampleAppRoleAssignment\", {\n    appRoleId: internalServicePrincipal.appRoleIds[\"Query.All\"],\n    principalObjectId: exampleServicePrincipal.objectId,\n    resourceObjectId: internalServicePrincipal.objectId,\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ninternal_application = azuread.Application(\"internalApplication\",\n    display_name=\"internal\",\n    app_roles=[azuread.ApplicationAppRoleArgs(\n        allowed_member_types=[\"Application\"],\n        description=\"Apps can query the database\",\n        display_name=\"Query\",\n        enabled=True,\n        id=\"00000000-0000-0000-0000-111111111111\",\n        value=\"Query.All\",\n    )])\ninternal_service_principal = azuread.ServicePrincipal(\"internalServicePrincipal\", application_id=internal_application.application_id)\nexample_application = azuread.Application(\"exampleApplication\",\n    display_name=\"example\",\n    required_resource_accesses=[azuread.ApplicationRequiredResourceAccessArgs(\n        resource_app_id=internal_application.application_id,\n        resource_accesses=[azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n            id=internal_service_principal.app_role_ids[\"Query.All\"],\n            type=\"Role\",\n        )],\n    )])\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\", application_id=example_application.application_id)\nexample_app_role_assignment = azuread.AppRoleAssignment(\"exampleAppRoleAssignment\",\n    app_role_id=internal_service_principal.app_role_ids[\"Query.All\"],\n    principal_object_id=example_service_principal.object_id,\n    resource_object_id=internal_service_principal.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var internalApplication = new AzureAD.Application(\"internalApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"internal\",\n            AppRoles = \n            {\n                new AzureAD.Inputs.ApplicationAppRoleArgs\n                {\n                    AllowedMemberTypes = \n                    {\n                        \"Application\",\n                    },\n                    Description = \"Apps can query the database\",\n                    DisplayName = \"Query\",\n                    Enabled = true,\n                    Id = \"00000000-0000-0000-0000-111111111111\",\n                    Value = \"Query.All\",\n                },\n            },\n        });\n        var internalServicePrincipal = new AzureAD.ServicePrincipal(\"internalServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = internalApplication.ApplicationId,\n        });\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            RequiredResourceAccesses = \n            {\n                new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs\n                {\n                    ResourceAppId = internalApplication.ApplicationId,\n                    ResourceAccesses = \n                    {\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = internalServicePrincipal.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.Query_All),\n                            Type = \"Role\",\n                        },\n                    },\n                },\n            },\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n        });\n        var exampleAppRoleAssignment = new AzureAD.AppRoleAssignment(\"exampleAppRoleAssignment\", new AzureAD.AppRoleAssignmentArgs\n        {\n            AppRoleId = internalServicePrincipal.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.Query_All),\n            PrincipalObjectId = exampleServicePrincipal.ObjectId,\n            ResourceObjectId = internalServicePrincipal.ObjectId,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinternalApplication, err := azuread.NewApplication(ctx, \"internalApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"internal\"),\n\t\t\tAppRoles: ApplicationAppRoleArray{\n\t\t\t\t\u0026ApplicationAppRoleArgs{\n\t\t\t\t\tAllowedMemberTypes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"Application\"),\n\t\t\t\t\t},\n\t\t\t\t\tDescription: pulumi.String(\"Apps can query the database\"),\n\t\t\t\t\tDisplayName: pulumi.String(\"Query\"),\n\t\t\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\t\t\tId:          pulumi.String(\"00000000-0000-0000-0000-111111111111\"),\n\t\t\t\t\tValue:       pulumi.String(\"Query.All\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinternalServicePrincipal, err := azuread.NewServicePrincipal(ctx, \"internalServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: internalApplication.ApplicationId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tRequiredResourceAccesses: ApplicationRequiredResourceAccessArray{\n\t\t\t\t\u0026ApplicationRequiredResourceAccessArgs{\n\t\t\t\t\tResourceAppId: internalApplication.ApplicationId,\n\t\t\t\t\tResourceAccesses: ApplicationRequiredResourceAccessResourceAccessArray{\n\t\t\t\t\t\t\u0026ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId: internalServicePrincipal.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\t\t\t\t\treturn appRoleIds.Query.All, nil\n\t\t\t\t\t\t\t}).(pulumi.StringOutput),\n\t\t\t\t\t\t\tType: pulumi.String(\"Role\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleServicePrincipal, err := azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: exampleApplication.ApplicationId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewAppRoleAssignment(ctx, \"exampleAppRoleAssignment\", \u0026azuread.AppRoleAssignmentArgs{\n\t\t\tAppRoleId: internalServicePrincipal.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\treturn appRoleIds.Query.All, nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tPrincipalObjectId: exampleServicePrincipal.ObjectId,\n\t\t\tResourceObjectId:  internalServicePrincipal.ObjectId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Assign a user and group to an internal application*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleDomains = azuread.getDomains({\n    onlyInitial: true,\n});\nconst internalApplication = new azuread.Application(\"internalApplication\", {\n    displayName: \"internal\",\n    appRoles: [{\n        allowedMemberTypes: [\n            \"Application\",\n            \"User\",\n        ],\n        description: \"Admins can perform all task actions\",\n        displayName: \"Admin\",\n        enabled: true,\n        id: \"00000000-0000-0000-0000-222222222222\",\n        value: \"Admin.All\",\n    }],\n});\nconst internalServicePrincipal = new azuread.ServicePrincipal(\"internalServicePrincipal\", {applicationId: internalApplication.applicationId});\nconst exampleGroup = new azuread.Group(\"exampleGroup\", {\n    displayName: \"example\",\n    securityEnabled: true,\n});\nconst exampleAppRoleAssignment = new azuread.AppRoleAssignment(\"exampleAppRoleAssignment\", {\n    appRoleId: internalServicePrincipal.appRoleIds[\"Admin.All\"],\n    principalObjectId: exampleGroup.objectId,\n    resourceObjectId: internalServicePrincipal.objectId,\n});\nconst exampleUser = new azuread.User(\"exampleUser\", {\n    displayName: \"D. Duck\",\n    password: \"SecretP@sswd99!\",\n    userPrincipalName: exampleDomains.then(exampleDomains =\u003e `d.duck@${exampleDomains.domains?[0]?.domainName}`),\n});\nconst exampleIndex_appRoleAssignmentAppRoleAssignment = new azuread.AppRoleAssignment(\"exampleIndex/appRoleAssignmentAppRoleAssignment\", {\n    appRoleId: internalServicePrincipal.appRoleIds[\"Admin.All\"],\n    principalObjectId: exampleUser.objectId,\n    resourceObjectId: internalServicePrincipal.objectId,\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_domains = azuread.get_domains(only_initial=True)\ninternal_application = azuread.Application(\"internalApplication\",\n    display_name=\"internal\",\n    app_roles=[azuread.ApplicationAppRoleArgs(\n        allowed_member_types=[\n            \"Application\",\n            \"User\",\n        ],\n        description=\"Admins can perform all task actions\",\n        display_name=\"Admin\",\n        enabled=True,\n        id=\"00000000-0000-0000-0000-222222222222\",\n        value=\"Admin.All\",\n    )])\ninternal_service_principal = azuread.ServicePrincipal(\"internalServicePrincipal\", application_id=internal_application.application_id)\nexample_group = azuread.Group(\"exampleGroup\",\n    display_name=\"example\",\n    security_enabled=True)\nexample_app_role_assignment = azuread.AppRoleAssignment(\"exampleAppRoleAssignment\",\n    app_role_id=internal_service_principal.app_role_ids[\"Admin.All\"],\n    principal_object_id=example_group.object_id,\n    resource_object_id=internal_service_principal.object_id)\nexample_user = azuread.User(\"exampleUser\",\n    display_name=\"D. Duck\",\n    password=\"SecretP@sswd99!\",\n    user_principal_name=f\"d.duck@{example_domains.domains[0].domain_name}\")\nexample_index_app_role_assignment_app_role_assignment = azuread.AppRoleAssignment(\"exampleIndex/appRoleAssignmentAppRoleAssignment\",\n    app_role_id=internal_service_principal.app_role_ids[\"Admin.All\"],\n    principal_object_id=example_user.object_id,\n    resource_object_id=internal_service_principal.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleDomains = Output.Create(AzureAD.GetDomains.InvokeAsync(new AzureAD.GetDomainsArgs\n        {\n            OnlyInitial = true,\n        }));\n        var internalApplication = new AzureAD.Application(\"internalApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"internal\",\n            AppRoles = \n            {\n                new AzureAD.Inputs.ApplicationAppRoleArgs\n                {\n                    AllowedMemberTypes = \n                    {\n                        \"Application\",\n                        \"User\",\n                    },\n                    Description = \"Admins can perform all task actions\",\n                    DisplayName = \"Admin\",\n                    Enabled = true,\n                    Id = \"00000000-0000-0000-0000-222222222222\",\n                    Value = \"Admin.All\",\n                },\n            },\n        });\n        var internalServicePrincipal = new AzureAD.ServicePrincipal(\"internalServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = internalApplication.ApplicationId,\n        });\n        var exampleGroup = new AzureAD.Group(\"exampleGroup\", new AzureAD.GroupArgs\n        {\n            DisplayName = \"example\",\n            SecurityEnabled = true,\n        });\n        var exampleAppRoleAssignment = new AzureAD.AppRoleAssignment(\"exampleAppRoleAssignment\", new AzureAD.AppRoleAssignmentArgs\n        {\n            AppRoleId = internalServicePrincipal.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.Admin_All),\n            PrincipalObjectId = exampleGroup.ObjectId,\n            ResourceObjectId = internalServicePrincipal.ObjectId,\n        });\n        var exampleUser = new AzureAD.User(\"exampleUser\", new AzureAD.UserArgs\n        {\n            DisplayName = \"D. Duck\",\n            Password = \"SecretP@sswd99!\",\n            UserPrincipalName = exampleDomains.Apply(exampleDomains =\u003e $\"d.duck@{exampleDomains.Domains?[0]?.DomainName}\"),\n        });\n        var exampleIndex_appRoleAssignmentAppRoleAssignment = new AzureAD.AppRoleAssignment(\"exampleIndex/appRoleAssignmentAppRoleAssignment\", new AzureAD.AppRoleAssignmentArgs\n        {\n            AppRoleId = internalServicePrincipal.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.Admin_All),\n            PrincipalObjectId = exampleUser.ObjectId,\n            ResourceObjectId = internalServicePrincipal.ObjectId,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := true\n\t\texampleDomains, err := azuread.GetDomains(ctx, \u0026GetDomainsArgs{\n\t\t\tOnlyInitial: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinternalApplication, err := azuread.NewApplication(ctx, \"internalApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"internal\"),\n\t\t\tAppRoles: ApplicationAppRoleArray{\n\t\t\t\t\u0026ApplicationAppRoleArgs{\n\t\t\t\t\tAllowedMemberTypes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"Application\"),\n\t\t\t\t\t\tpulumi.String(\"User\"),\n\t\t\t\t\t},\n\t\t\t\t\tDescription: pulumi.String(\"Admins can perform all task actions\"),\n\t\t\t\t\tDisplayName: pulumi.String(\"Admin\"),\n\t\t\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\t\t\tId:          pulumi.String(\"00000000-0000-0000-0000-222222222222\"),\n\t\t\t\t\tValue:       pulumi.String(\"Admin.All\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinternalServicePrincipal, err := azuread.NewServicePrincipal(ctx, \"internalServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: internalApplication.ApplicationId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleGroup, err := azuread.NewGroup(ctx, \"exampleGroup\", \u0026azuread.GroupArgs{\n\t\t\tDisplayName:     pulumi.String(\"example\"),\n\t\t\tSecurityEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewAppRoleAssignment(ctx, \"exampleAppRoleAssignment\", \u0026azuread.AppRoleAssignmentArgs{\n\t\t\tAppRoleId: internalServicePrincipal.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\treturn appRoleIds.Admin.All, nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tPrincipalObjectId: exampleGroup.ObjectId,\n\t\t\tResourceObjectId:  internalServicePrincipal.ObjectId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleUser, err := azuread.NewUser(ctx, \"exampleUser\", \u0026azuread.UserArgs{\n\t\t\tDisplayName:       pulumi.String(\"D. Duck\"),\n\t\t\tPassword:          pulumi.String(\"SecretP@sswd99!\"),\n\t\t\tUserPrincipalName: pulumi.String(fmt.Sprintf(\"%v%v\", \"d.duck@\", exampleDomains.Domains[0].DomainName)),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewAppRoleAssignment(ctx, \"exampleIndex_appRoleAssignmentAppRoleAssignment\", \u0026azuread.AppRoleAssignmentArgs{\n\t\t\tAppRoleId: internalServicePrincipal.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\treturn appRoleIds.Admin.All, nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tPrincipalObjectId: exampleUser.ObjectId,\n\t\t\tResourceObjectId:  internalServicePrincipal.ObjectId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp role assignments can be imported using the object ID of the service principal representing the resource and the ID of the app role assignment (note_not_ the ID of the app role), e.g.\n\n```sh\n $ pulumi import azuread:index/appRoleAssignment:AppRoleAssignment example 00000000-0000-0000-0000-000000000000/appRoleAssignment/aaBBcDDeFG6h5JKLMN2PQrrssTTUUvWWxxxxxyyyzzz\n```\n\n -\u003e This ID format is unique to Terraform and is composed of the Resource Service Principal Object ID and the ID of the App Role Assignment in the format `{ResourcePrincipalID}/appRoleAssignment/{AppRoleAssignmentID}`. ",
            "properties": {
                "appRoleId": {
                    "type": "string",
                    "description": "The ID of the app role to be assigned. Changing this forces a new resource to be created.\n"
                },
                "principalDisplayName": {
                    "type": "string",
                    "description": "The display name of the principal to which the app role is assigned.\n"
                },
                "principalObjectId": {
                    "type": "string",
                    "description": "The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                },
                "principalType": {
                    "type": "string",
                    "description": "The object type of the principal to which the app role is assigned.\n"
                },
                "resourceDisplayName": {
                    "type": "string",
                    "description": "The display name of the application representing the resource.\n"
                },
                "resourceObjectId": {
                    "type": "string",
                    "description": "The object ID of the service principal representing the resource. Changing this forces a new resource to be created.\n"
                }
            },
            "required": [
                "appRoleId",
                "principalDisplayName",
                "principalObjectId",
                "principalType",
                "resourceDisplayName",
                "resourceObjectId"
            ],
            "inputProperties": {
                "appRoleId": {
                    "type": "string",
                    "description": "The ID of the app role to be assigned. Changing this forces a new resource to be created.\n"
                },
                "principalObjectId": {
                    "type": "string",
                    "description": "The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                },
                "resourceObjectId": {
                    "type": "string",
                    "description": "The object ID of the service principal representing the resource. Changing this forces a new resource to be created.\n"
                }
            },
            "requiredInputs": [
                "appRoleId",
                "principalObjectId",
                "resourceObjectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppRoleAssignment resources.\n",
                "properties": {
                    "appRoleId": {
                        "type": "string",
                        "description": "The ID of the app role to be assigned. Changing this forces a new resource to be created.\n"
                    },
                    "principalDisplayName": {
                        "type": "string",
                        "description": "The display name of the principal to which the app role is assigned.\n"
                    },
                    "principalObjectId": {
                        "type": "string",
                        "description": "The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                    },
                    "principalType": {
                        "type": "string",
                        "description": "The object type of the principal to which the app role is assigned.\n"
                    },
                    "resourceDisplayName": {
                        "type": "string",
                        "description": "The display name of the application representing the resource.\n"
                    },
                    "resourceObjectId": {
                        "type": "string",
                        "description": "The object ID of the service principal representing the resource. Changing this forces a new resource to be created.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/application:Application": {
            "description": "\n\n\n## Import\n\nApplications can be imported using their object ID, e.g.\n\n```sh\n $ pulumi import azuread:index/application:Application test 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "api": {
                    "$ref": "#/types/azuread:index/ApplicationApi:ApplicationApi",
                    "description": "An `api` block as documented below, which configures API related settings for this application.\n"
                },
                "appRoleIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.\n"
                },
                "appRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationAppRole:ApplicationAppRole"
                    },
                    "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The Application ID (also called Client ID).\n"
                },
                "deviceOnlyAuthEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether this application supports device authentication without a user. Defaults to `false`.\n"
                },
                "disabledByMicrosoft": {
                    "type": "string",
                    "description": "Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. `DisabledDueToViolationOfServicesAgreement`\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the application.\n"
                },
                "fallbackPublicClientEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a redirect URI. Defaults to `false`.\n"
                },
                "groupMembershipClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.\n"
                },
                "identifierUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                },
                "logoImage": {
                    "type": "string",
                    "description": "A logo image to upload for the application, as a raw base64-encoded string. The image should be in gif, jpeg or png format. Note that once an image has been uploaded, it is not possible to remove it without replacing it with another image.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "CDN URL to the application's logo, as uploaded with the `logo_image` property.\n"
                },
                "marketingUrl": {
                    "type": "string",
                    "description": "URL of the application's marketing page.\n"
                },
                "oauth2PermissionScopeIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.\n"
                },
                "oauth2PostResponseRequired": {
                    "type": "boolean",
                    "description": "Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. Defaults to `false`, which specifies that only GET requests are allowed.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The application's object ID.\n"
                },
                "optionalClaims": {
                    "$ref": "#/types/azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims",
                    "description": "An `optional_claims` block as documented below.\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of object IDs of principals that will be granted ownership of the application. Supported object types are users or service principals. By default, no owners are assigned.\n"
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error if an existing application is found with the same name. Defaults to `false`.\n"
                },
                "privacyStatementUrl": {
                    "type": "string",
                    "description": "URL of the application's privacy statement.\n"
                },
                "publicClient": {
                    "$ref": "#/types/azuread:index/ApplicationPublicClient:ApplicationPublicClient",
                    "description": "A `public_client` block as documented below, which configures non-web app or non-web API application settings, for example mobile or other public clients such as an installed application running on a desktop device.\n"
                },
                "publisherDomain": {
                    "type": "string",
                    "description": "The verified publisher domain for the application.\n"
                },
                "requiredResourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess"
                    },
                    "description": "A collection of `required_resource_access` blocks as documented below.\n"
                },
                "signInAudience": {
                    "type": "string",
                    "description": "The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`. Defaults to `AzureADMyOrg`.\n"
                },
                "singlePageApplication": {
                    "$ref": "#/types/azuread:index/ApplicationSinglePageApplication:ApplicationSinglePageApplication",
                    "description": "A `single_page_application` block as documented below, which configures single-page application (SPA) related settings for this application.\n"
                },
                "supportUrl": {
                    "type": "string",
                    "description": "URL of the application's support page.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.\n"
                },
                "termsOfServiceUrl": {
                    "type": "string",
                    "description": "URL of the application's terms of service statement.\n"
                },
                "web": {
                    "$ref": "#/types/azuread:index/ApplicationWeb:ApplicationWeb",
                    "description": "A `web` block as documented below, which configures web related settings for this application.\n"
                }
            },
            "required": [
                "appRoleIds",
                "applicationId",
                "disabledByMicrosoft",
                "displayName",
                "logoUrl",
                "oauth2PermissionScopeIds",
                "objectId",
                "publisherDomain",
                "templateId"
            ],
            "inputProperties": {
                "api": {
                    "$ref": "#/types/azuread:index/ApplicationApi:ApplicationApi",
                    "description": "An `api` block as documented below, which configures API related settings for this application.\n"
                },
                "appRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationAppRole:ApplicationAppRole"
                    },
                    "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                },
                "deviceOnlyAuthEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether this application supports device authentication without a user. Defaults to `false`.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the application.\n"
                },
                "fallbackPublicClientEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a redirect URI. Defaults to `false`.\n"
                },
                "groupMembershipClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.\n"
                },
                "identifierUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                },
                "logoImage": {
                    "type": "string",
                    "description": "A logo image to upload for the application, as a raw base64-encoded string. The image should be in gif, jpeg or png format. Note that once an image has been uploaded, it is not possible to remove it without replacing it with another image.\n"
                },
                "marketingUrl": {
                    "type": "string",
                    "description": "URL of the application's marketing page.\n"
                },
                "oauth2PostResponseRequired": {
                    "type": "boolean",
                    "description": "Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. Defaults to `false`, which specifies that only GET requests are allowed.\n"
                },
                "optionalClaims": {
                    "$ref": "#/types/azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims",
                    "description": "An `optional_claims` block as documented below.\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of object IDs of principals that will be granted ownership of the application. Supported object types are users or service principals. By default, no owners are assigned.\n"
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error if an existing application is found with the same name. Defaults to `false`.\n"
                },
                "privacyStatementUrl": {
                    "type": "string",
                    "description": "URL of the application's privacy statement.\n"
                },
                "publicClient": {
                    "$ref": "#/types/azuread:index/ApplicationPublicClient:ApplicationPublicClient",
                    "description": "A `public_client` block as documented below, which configures non-web app or non-web API application settings, for example mobile or other public clients such as an installed application running on a desktop device.\n"
                },
                "requiredResourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess"
                    },
                    "description": "A collection of `required_resource_access` blocks as documented below.\n"
                },
                "signInAudience": {
                    "type": "string",
                    "description": "The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`. Defaults to `AzureADMyOrg`.\n"
                },
                "singlePageApplication": {
                    "$ref": "#/types/azuread:index/ApplicationSinglePageApplication:ApplicationSinglePageApplication",
                    "description": "A `single_page_application` block as documented below, which configures single-page application (SPA) related settings for this application.\n"
                },
                "supportUrl": {
                    "type": "string",
                    "description": "URL of the application's support page.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.\n"
                },
                "termsOfServiceUrl": {
                    "type": "string",
                    "description": "URL of the application's terms of service statement.\n"
                },
                "web": {
                    "$ref": "#/types/azuread:index/ApplicationWeb:ApplicationWeb",
                    "description": "A `web` block as documented below, which configures web related settings for this application.\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "api": {
                        "$ref": "#/types/azuread:index/ApplicationApi:ApplicationApi",
                        "description": "An `api` block as documented below, which configures API related settings for this application.\n"
                    },
                    "appRoleIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ApplicationAppRole:ApplicationAppRole"
                        },
                        "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The Application ID (also called Client ID).\n"
                    },
                    "deviceOnlyAuthEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether this application supports device authentication without a user. Defaults to `false`.\n"
                    },
                    "disabledByMicrosoft": {
                        "type": "string",
                        "description": "Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. `DisabledDueToViolationOfServicesAgreement`\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the application.\n"
                    },
                    "fallbackPublicClientEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a redirect URI. Defaults to `false`.\n"
                    },
                    "groupMembershipClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.\n"
                    },
                    "identifierUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                    },
                    "logoImage": {
                        "type": "string",
                        "description": "A logo image to upload for the application, as a raw base64-encoded string. The image should be in gif, jpeg or png format. Note that once an image has been uploaded, it is not possible to remove it without replacing it with another image.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "CDN URL to the application's logo, as uploaded with the `logo_image` property.\n"
                    },
                    "marketingUrl": {
                        "type": "string",
                        "description": "URL of the application's marketing page.\n"
                    },
                    "oauth2PermissionScopeIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.\n"
                    },
                    "oauth2PostResponseRequired": {
                        "type": "boolean",
                        "description": "Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. Defaults to `false`, which specifies that only GET requests are allowed.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The application's object ID.\n"
                    },
                    "optionalClaims": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims",
                        "description": "An `optional_claims` block as documented below.\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of object IDs of principals that will be granted ownership of the application. Supported object types are users or service principals. By default, no owners are assigned.\n"
                    },
                    "preventDuplicateNames": {
                        "type": "boolean",
                        "description": "If `true`, will return an error if an existing application is found with the same name. Defaults to `false`.\n"
                    },
                    "privacyStatementUrl": {
                        "type": "string",
                        "description": "URL of the application's privacy statement.\n"
                    },
                    "publicClient": {
                        "$ref": "#/types/azuread:index/ApplicationPublicClient:ApplicationPublicClient",
                        "description": "A `public_client` block as documented below, which configures non-web app or non-web API application settings, for example mobile or other public clients such as an installed application running on a desktop device.\n"
                    },
                    "publisherDomain": {
                        "type": "string",
                        "description": "The verified publisher domain for the application.\n"
                    },
                    "requiredResourceAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess"
                        },
                        "description": "A collection of `required_resource_access` blocks as documented below.\n"
                    },
                    "signInAudience": {
                        "type": "string",
                        "description": "The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`. Defaults to `AzureADMyOrg`.\n"
                    },
                    "singlePageApplication": {
                        "$ref": "#/types/azuread:index/ApplicationSinglePageApplication:ApplicationSinglePageApplication",
                        "description": "A `single_page_application` block as documented below, which configures single-page application (SPA) related settings for this application.\n"
                    },
                    "supportUrl": {
                        "type": "string",
                        "description": "URL of the application's support page.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.\n"
                    },
                    "termsOfServiceUrl": {
                        "type": "string",
                        "description": "URL of the application's terms of service statement.\n"
                    },
                    "web": {
                        "$ref": "#/types/azuread:index/ApplicationWeb:ApplicationWeb",
                        "description": "A `web` block as documented below, which configures web related settings for this application.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationCertificate:ApplicationCertificate": {
            "description": "\n\n\n## Import\n\nCertificates can be imported using the object ID of the associated application and the key ID of the certificate credential, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationCertificate:ApplicationCertificate test 00000000-0000-0000-0000-000000000000/certificate/11111111-1111-1111-1111-111111111111\n```\n\n -\u003e This ID format is unique to Terraform and is composed of the application's object ID, the string \"certificate\" and the certificate's key ID in the format `{ObjectId}/certificate/{CertificateKeyId}`. ",
            "properties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The object ID of the application for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If omitted, the API will decide a suitable expiry date, which is typically around 2 years from the start date. Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the certificate is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A UUID used to uniquely identify this certificate. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date and time are used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "required": [
                "applicationObjectId",
                "endDate",
                "keyId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The object ID of the application for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If omitted, the API will decide a suitable expiry date, which is typically around 2 years from the start date. Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the certificate is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A UUID used to uniquely identify this certificate. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date and time are used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "requiredInputs": [
                "applicationObjectId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationCertificate resources.\n",
                "properties": {
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The object ID of the application for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If omitted, the API will decide a suitable expiry date, which is typically around 2 years from the start date. Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the certificate is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A UUID used to uniquely identify this certificate. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date and time are used.  Changing this field forces a new resource to be created.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationPassword:ApplicationPassword": {
            "description": "\n\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The object ID of the application for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "A display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A UUID used to uniquely identify this password credential.\n"
                },
                "rotateWhenChanged": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The password for this application, which is generated by Azure Active Directory.\n"
                }
            },
            "required": [
                "applicationObjectId",
                "displayName",
                "endDate",
                "keyId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The object ID of the application for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "A display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "rotateWhenChanged": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                }
            },
            "requiredInputs": [
                "applicationObjectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationPassword resources.\n",
                "properties": {
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The object ID of the application for which this password should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "A display name for the password.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A UUID used to uniquely identify this password credential.\n"
                    },
                    "rotateWhenChanged": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The password for this application, which is generated by Azure Active Directory.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationPreAuthorized:ApplicationPreAuthorized": {
            "description": "\n\n\n## Import\n\nPre-authorized applications can be imported using the object ID of the authorizing application and the application ID of the application being authorized, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationPreAuthorized:ApplicationPreAuthorized example 00000000-0000-0000-0000-000000000000/preAuthorizedApplication/11111111-1111-1111-1111-111111111111\n```\n\n -\u003e This ID format is unique to Terraform and is composed of the authorizing application's object ID, the string \"preAuthorizedApplication\" and the authorized application's application ID (client ID) in the format `{ObjectId}/preAuthorizedApplication/{ApplicationId}`. ",
            "properties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.\n"
                },
                "authorizedAppId": {
                    "type": "string",
                    "description": "The application ID of the pre-authorized application\n"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of permission scope IDs required by the authorized application.\n"
                }
            },
            "required": [
                "applicationObjectId",
                "authorizedAppId",
                "permissionIds"
            ],
            "inputProperties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.\n"
                },
                "authorizedAppId": {
                    "type": "string",
                    "description": "The application ID of the pre-authorized application\n"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of permission scope IDs required by the authorized application.\n"
                }
            },
            "requiredInputs": [
                "applicationObjectId",
                "authorizedAppId",
                "permissionIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationPreAuthorized resources.\n",
                "properties": {
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.\n"
                    },
                    "authorizedAppId": {
                        "type": "string",
                        "description": "The application ID of the pre-authorized application\n"
                    },
                    "permissionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of permission scope IDs required by the authorized application.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/conditionalAccessPolicy:ConditionalAccessPolicy": {
            "description": "Manages a Conditional Access Policy within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires the following application roles: `Policy.ReadWrite.ConditionalAccess` and `Policy.Read.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Conditional Access Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.ConditionalAccessPolicy(\"example\", {\n    conditions: {\n        applications: {\n            excludedApplications: [\"00000004-0000-0ff1-ce00-000000000000\"],\n            includedApplications: [\"All\"],\n        },\n        clientAppTypes: [\"all\"],\n        locations: {\n            excludedLocations: [\"AllTrusted\"],\n            includedLocations: [\"All\"],\n        },\n        platforms: {\n            excludedPlatforms: [\"iOS\"],\n            includedPlatforms: [\"android\"],\n        },\n        signInRiskLevels: [\"medium\"],\n        userRiskLevels: [\"medium\"],\n        users: {\n            excludedUsers: [\"GuestsOrExternalUsers\"],\n            includedUsers: [\"All\"],\n        },\n    },\n    displayName: \"example policy\",\n    grantControls: {\n        builtInControls: [\"mfa\"],\n        operator: \"OR\",\n    },\n    sessionControls: {\n        applicationEnforcedRestrictions: [{\n            enabled: true,\n        }],\n        cloudAppSecurity: [{\n            cloudAppSecurityType: \"monitorOnly\",\n            enabled: true,\n        }],\n        signInFrequency: [{\n            enabled: true,\n            type: \"hours\",\n            value: 10,\n        }],\n    },\n    state: \"disabled\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.ConditionalAccessPolicy(\"example\",\n    conditions=azuread.ConditionalAccessPolicyConditionsArgs(\n        applications=azuread.ConditionalAccessPolicyConditionsApplicationsArgs(\n            excluded_applications=[\"00000004-0000-0ff1-ce00-000000000000\"],\n            included_applications=[\"All\"],\n        ),\n        client_app_types=[\"all\"],\n        locations=azuread.ConditionalAccessPolicyConditionsLocationsArgs(\n            excluded_locations=[\"AllTrusted\"],\n            included_locations=[\"All\"],\n        ),\n        platforms=azuread.ConditionalAccessPolicyConditionsPlatformsArgs(\n            excluded_platforms=[\"iOS\"],\n            included_platforms=[\"android\"],\n        ),\n        sign_in_risk_levels=[\"medium\"],\n        user_risk_levels=[\"medium\"],\n        users=azuread.ConditionalAccessPolicyConditionsUsersArgs(\n            excluded_users=[\"GuestsOrExternalUsers\"],\n            included_users=[\"All\"],\n        ),\n    ),\n    display_name=\"example policy\",\n    grant_controls=azuread.ConditionalAccessPolicyGrantControlsArgs(\n        built_in_controls=[\"mfa\"],\n        operator=\"OR\",\n    ),\n    session_controls=azuread.ConditionalAccessPolicySessionControlsArgs(\n        application_enforced_restrictions=[{\n            \"enabled\": True,\n        }],\n        cloud_app_security=[{\n            \"cloudAppSecurityType\": \"monitorOnly\",\n            \"enabled\": True,\n        }],\n        sign_in_frequency=[{\n            \"enabled\": True,\n            \"type\": \"hours\",\n            \"value\": 10,\n        }],\n    ),\n    state=\"disabled\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.ConditionalAccessPolicy(\"example\", new AzureAD.ConditionalAccessPolicyArgs\n        {\n            Conditions = new AzureAD.Inputs.ConditionalAccessPolicyConditionsArgs\n            {\n                Applications = new AzureAD.Inputs.ConditionalAccessPolicyConditionsApplicationsArgs\n                {\n                    ExcludedApplications = \n                    {\n                        \"00000004-0000-0ff1-ce00-000000000000\",\n                    },\n                    IncludedApplications = \n                    {\n                        \"All\",\n                    },\n                },\n                ClientAppTypes = \n                {\n                    \"all\",\n                },\n                Locations = new AzureAD.Inputs.ConditionalAccessPolicyConditionsLocationsArgs\n                {\n                    ExcludedLocations = \n                    {\n                        \"AllTrusted\",\n                    },\n                    IncludedLocations = \n                    {\n                        \"All\",\n                    },\n                },\n                Platforms = new AzureAD.Inputs.ConditionalAccessPolicyConditionsPlatformsArgs\n                {\n                    ExcludedPlatforms = \n                    {\n                        \"iOS\",\n                    },\n                    IncludedPlatforms = \n                    {\n                        \"android\",\n                    },\n                },\n                SignInRiskLevels = \n                {\n                    \"medium\",\n                },\n                UserRiskLevels = \n                {\n                    \"medium\",\n                },\n                Users = new AzureAD.Inputs.ConditionalAccessPolicyConditionsUsersArgs\n                {\n                    ExcludedUsers = \n                    {\n                        \"GuestsOrExternalUsers\",\n                    },\n                    IncludedUsers = \n                    {\n                        \"All\",\n                    },\n                },\n            },\n            DisplayName = \"example policy\",\n            GrantControls = new AzureAD.Inputs.ConditionalAccessPolicyGrantControlsArgs\n            {\n                BuiltInControls = \n                {\n                    \"mfa\",\n                },\n                Operator = \"OR\",\n            },\n            SessionControls = new AzureAD.Inputs.ConditionalAccessPolicySessionControlsArgs\n            {\n                ApplicationEnforcedRestrictions = \n                {\n                    \n                    {\n                        { \"enabled\", true },\n                    },\n                },\n                CloudAppSecurity = \n                {\n                    \n                    {\n                        { \"cloudAppSecurityType\", \"monitorOnly\" },\n                        { \"enabled\", true },\n                    },\n                },\n                SignInFrequency = \n                {\n                    \n                    {\n                        { \"enabled\", true },\n                        { \"type\", \"hours\" },\n                        { \"value\", 10 },\n                    },\n                },\n            },\n            State = \"disabled\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewConditionalAccessPolicy(ctx, \"example\", \u0026azuread.ConditionalAccessPolicyArgs{\n\t\t\tConditions: \u0026ConditionalAccessPolicyConditionsArgs{\n\t\t\t\tApplications: \u0026ConditionalAccessPolicyConditionsApplicationsArgs{\n\t\t\t\t\tExcludedApplications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"00000004-0000-0ff1-ce00-000000000000\"),\n\t\t\t\t\t},\n\t\t\t\t\tIncludedApplications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"All\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tClientAppTypes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"all\"),\n\t\t\t\t},\n\t\t\t\tLocations: \u0026ConditionalAccessPolicyConditionsLocationsArgs{\n\t\t\t\t\tExcludedLocations: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AllTrusted\"),\n\t\t\t\t\t},\n\t\t\t\t\tIncludedLocations: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"All\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPlatforms: \u0026ConditionalAccessPolicyConditionsPlatformsArgs{\n\t\t\t\t\tExcludedPlatforms: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"iOS\"),\n\t\t\t\t\t},\n\t\t\t\t\tIncludedPlatforms: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"android\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tSignInRiskLevels: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"medium\"),\n\t\t\t\t},\n\t\t\t\tUserRiskLevels: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"medium\"),\n\t\t\t\t},\n\t\t\t\tUsers: \u0026ConditionalAccessPolicyConditionsUsersArgs{\n\t\t\t\t\tExcludedUsers: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"GuestsOrExternalUsers\"),\n\t\t\t\t\t},\n\t\t\t\t\tIncludedUsers: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"All\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"example policy\"),\n\t\t\tGrantControls: \u0026ConditionalAccessPolicyGrantControlsArgs{\n\t\t\t\tBuiltInControls: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"mfa\"),\n\t\t\t\t},\n\t\t\t\tOperator: pulumi.String(\"OR\"),\n\t\t\t},\n\t\t\tSessionControls: \u0026ConditionalAccessPolicySessionControlsArgs{\n\t\t\t\tApplicationEnforcedRestrictions: []map[string]interface{}{\n\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\"enabled\": true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tCloudAppSecurity: []map[string]interface{}{\n\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\"cloudAppSecurityType\": \"monitorOnly\",\n\t\t\t\t\t\t\"enabled\":              true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tSignInFrequency: pulumi.Int{\n\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\"enabled\": true,\n\t\t\t\t\t\t\"type\":    \"hours\",\n\t\t\t\t\t\t\"value\":   10,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tState: pulumi.String(\"disabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nConditional Access Policies can be imported using the `id`, e.g.\n\n```sh\n $ pulumi import azuread:index/conditionalAccessPolicy:ConditionalAccessPolicy my_location 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "conditions": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditions:ConditionalAccessPolicyConditions",
                    "description": "A `conditions` block as documented below, which specifies the rules that must be met for the policy to apply.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name for this Conditional Access Policy.\n"
                },
                "grantControls": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyGrantControls:ConditionalAccessPolicyGrantControls",
                    "description": "A `grant_controls` block as documented below, which specifies the grant controls that must be fulfilled to pass the policy.\n"
                },
                "sessionControls": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicySessionControls:ConditionalAccessPolicySessionControls",
                    "description": "A `session_controls` block as documented below, which specifies the session controls that are enforced after sign-in.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Specifies the state of the policy object. Possible values are: `enabled`, `disabled` and `enabledForReportingButNotEnforced`\n"
                }
            },
            "required": [
                "conditions",
                "displayName",
                "grantControls",
                "state"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditions:ConditionalAccessPolicyConditions",
                    "description": "A `conditions` block as documented below, which specifies the rules that must be met for the policy to apply.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name for this Conditional Access Policy.\n"
                },
                "grantControls": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicyGrantControls:ConditionalAccessPolicyGrantControls",
                    "description": "A `grant_controls` block as documented below, which specifies the grant controls that must be fulfilled to pass the policy.\n"
                },
                "sessionControls": {
                    "$ref": "#/types/azuread:index/ConditionalAccessPolicySessionControls:ConditionalAccessPolicySessionControls",
                    "description": "A `session_controls` block as documented below, which specifies the session controls that are enforced after sign-in.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Specifies the state of the policy object. Possible values are: `enabled`, `disabled` and `enabledForReportingButNotEnforced`\n"
                }
            },
            "requiredInputs": [
                "conditions",
                "displayName",
                "grantControls",
                "state"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConditionalAccessPolicy resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/azuread:index/ConditionalAccessPolicyConditions:ConditionalAccessPolicyConditions",
                        "description": "A `conditions` block as documented below, which specifies the rules that must be met for the policy to apply.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The friendly name for this Conditional Access Policy.\n"
                    },
                    "grantControls": {
                        "$ref": "#/types/azuread:index/ConditionalAccessPolicyGrantControls:ConditionalAccessPolicyGrantControls",
                        "description": "A `grant_controls` block as documented below, which specifies the grant controls that must be fulfilled to pass the policy.\n"
                    },
                    "sessionControls": {
                        "$ref": "#/types/azuread:index/ConditionalAccessPolicySessionControls:ConditionalAccessPolicySessionControls",
                        "description": "A `session_controls` block as documented below, which specifies the session controls that are enforced after sign-in.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Specifies the state of the policy object. Possible values are: `enabled`, `disabled` and `enabledForReportingButNotEnforced`\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/directoryRole:DirectoryRole": {
            "description": "Manages a Directory Role within Azure Active Directory. Directory Roles are also known as Administrator Roles.\n\nDirectory Roles are built-in to Azure Active Directory and are immutable. However, by default they are not activated in a tenant (except for the Global Administrator role). This resource ensures a directory role is activated from its associated role template, and exports the object ID of the role, so that role assignments can be made for it.\n\nOnce activated, directory roles cannot be deactivated and so this resource does not perform any actions on destroy.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `RoleManagement.ReadWrite.Directory` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Privileged Role Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Activate a directory role by its template ID*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.DirectoryRole(\"example\", {\n    templateId: \"00000000-0000-0000-0000-000000000000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.DirectoryRole(\"example\", template_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.DirectoryRole(\"example\", new AzureAD.DirectoryRoleArgs\n        {\n            TemplateId = \"00000000-0000-0000-0000-000000000000\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewDirectoryRole(ctx, \"example\", \u0026azuread.DirectoryRoleArgs{\n\t\t\tTemplateId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Activate a directory role by display name*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.DirectoryRole(\"example\", {\n    displayName: \"Printer administrator\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.DirectoryRole(\"example\", display_name=\"Printer administrator\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.DirectoryRole(\"example\", new AzureAD.DirectoryRoleArgs\n        {\n            DisplayName = \"Printer administrator\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewDirectoryRole(ctx, \"example\", \u0026azuread.DirectoryRoleArgs{\n\t\t\tDisplayName: pulumi.String(\"Printer administrator\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the directory role.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the directory role to activate. Changing this forces a new resource to be created.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The object ID of the directory role.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The object ID of the role template from which to activate the directory role. Changing this forces a new resource to be created.\n"
                }
            },
            "required": [
                "description",
                "displayName",
                "objectId",
                "templateId"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name of the directory role to activate. Changing this forces a new resource to be created.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The object ID of the role template from which to activate the directory role. Changing this forces a new resource to be created.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectoryRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the directory role.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the directory role to activate. Changing this forces a new resource to be created.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the directory role.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The object ID of the role template from which to activate the directory role. Changing this forces a new resource to be created.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/directoryRoleMember:DirectoryRoleMember": {
            "description": "Manages a single directory role membership (assignment) within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `RoleManagement.ReadWrite.Directory` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Privileged Role Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleUser = azuread.getUser({\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\nconst exampleDirectoryRole = new azuread.DirectoryRole(\"exampleDirectoryRole\", {displayName: \"Security administrator\"});\nconst exampleDirectoryRoleMember = new azuread.DirectoryRoleMember(\"exampleDirectoryRoleMember\", {\n    roleObjectId: exampleDirectoryRole.objectId,\n    memberObjectId: exampleUser.then(exampleUser =\u003e exampleUser.objectId),\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_user = azuread.get_user(user_principal_name=\"jdoe@hashicorp.com\")\nexample_directory_role = azuread.DirectoryRole(\"exampleDirectoryRole\", display_name=\"Security administrator\")\nexample_directory_role_member = azuread.DirectoryRoleMember(\"exampleDirectoryRoleMember\",\n    role_object_id=example_directory_role.object_id,\n    member_object_id=example_user.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleUser = Output.Create(AzureAD.GetUser.InvokeAsync(new AzureAD.GetUserArgs\n        {\n            UserPrincipalName = \"jdoe@hashicorp.com\",\n        }));\n        var exampleDirectoryRole = new AzureAD.DirectoryRole(\"exampleDirectoryRole\", new AzureAD.DirectoryRoleArgs\n        {\n            DisplayName = \"Security administrator\",\n        });\n        var exampleDirectoryRoleMember = new AzureAD.DirectoryRoleMember(\"exampleDirectoryRoleMember\", new AzureAD.DirectoryRoleMemberArgs\n        {\n            RoleObjectId = exampleDirectoryRole.ObjectId,\n            MemberObjectId = exampleUser.Apply(exampleUser =\u003e exampleUser.ObjectId),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"jdoe@hashicorp.com\"\n\t\texampleUser, err := azuread.LookupUser(ctx, \u0026GetUserArgs{\n\t\t\tUserPrincipalName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleDirectoryRole, err := azuread.NewDirectoryRole(ctx, \"exampleDirectoryRole\", \u0026azuread.DirectoryRoleArgs{\n\t\t\tDisplayName: pulumi.String(\"Security administrator\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewDirectoryRoleMember(ctx, \"exampleDirectoryRoleMember\", \u0026azuread.DirectoryRoleMemberArgs{\n\t\t\tRoleObjectId:   exampleDirectoryRole.ObjectId,\n\t\t\tMemberObjectId: pulumi.String(exampleUser.ObjectId),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDirectory role members can be imported using the object ID of the role and the object ID of the member, e.g.\n\n```sh\n $ pulumi import azuread:index/directoryRoleMember:DirectoryRoleMember test 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111\n```\n\n -\u003e This ID format is unique to Terraform and is composed of the Directory Role Object ID and the target Member Object ID in the format `{RoleObjectID}/member/{MemberObjectID}`. ",
            "properties": {
                "memberObjectId": {
                    "type": "string",
                    "description": "The object ID of the principal you want to add as a member to the directory role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                },
                "roleObjectId": {
                    "type": "string",
                    "description": "The object ID of the directory role you want to add the member to. Changing this forces a new resource to be created.\n"
                }
            },
            "inputProperties": {
                "memberObjectId": {
                    "type": "string",
                    "description": "The object ID of the principal you want to add as a member to the directory role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                },
                "roleObjectId": {
                    "type": "string",
                    "description": "The object ID of the directory role you want to add the member to. Changing this forces a new resource to be created.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectoryRoleMember resources.\n",
                "properties": {
                    "memberObjectId": {
                        "type": "string",
                        "description": "The object ID of the principal you want to add as a member to the directory role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                    },
                    "roleObjectId": {
                        "type": "string",
                        "description": "The object ID of the directory role you want to add the member to. Changing this forces a new resource to be created.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/group:Group": {
            "description": "Manages a group within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `Group.ReadWrite.All` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Groups Administrator`, `User Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Basic example*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nconst example = new azuread.Group(\"example\", {\n    displayName: \"example\",\n    owners: [current.then(current =\u003e current.objectId)],\n    securityEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\nexample = azuread.Group(\"example\",\n    display_name=\"example\",\n    owners=[current.object_id],\n    security_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        var example = new AzureAD.Group(\"example\", new AzureAD.GroupArgs\n        {\n            DisplayName = \"example\",\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n            },\n            SecurityEnabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewGroup(ctx, \"example\", \u0026azuread.GroupArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t},\n\t\t\tSecurityEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Microsoft 365 group*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nconst groupOwner = new azuread.User(\"groupOwner\", {\n    userPrincipalName: \"example-group-owner@hashicorp.com\",\n    displayName: \"Group Owner\",\n    mailNickname: \"example-group-owner\",\n    password: \"SecretP@sswd99!\",\n});\nconst example = new azuread.Group(\"example\", {\n    displayName: \"example\",\n    mailEnabled: true,\n    mailNickname: \"ExampleGroup\",\n    securityEnabled: true,\n    types: [\"Unified\"],\n    owners: [\n        current.then(current =\u003e current.objectId),\n        groupOwner.objectId,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\ngroup_owner = azuread.User(\"groupOwner\",\n    user_principal_name=\"example-group-owner@hashicorp.com\",\n    display_name=\"Group Owner\",\n    mail_nickname=\"example-group-owner\",\n    password=\"SecretP@sswd99!\")\nexample = azuread.Group(\"example\",\n    display_name=\"example\",\n    mail_enabled=True,\n    mail_nickname=\"ExampleGroup\",\n    security_enabled=True,\n    types=[\"Unified\"],\n    owners=[\n        current.object_id,\n        group_owner.object_id,\n    ])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        var groupOwner = new AzureAD.User(\"groupOwner\", new AzureAD.UserArgs\n        {\n            UserPrincipalName = \"example-group-owner@hashicorp.com\",\n            DisplayName = \"Group Owner\",\n            MailNickname = \"example-group-owner\",\n            Password = \"SecretP@sswd99!\",\n        });\n        var example = new AzureAD.Group(\"example\", new AzureAD.GroupArgs\n        {\n            DisplayName = \"example\",\n            MailEnabled = true,\n            MailNickname = \"ExampleGroup\",\n            SecurityEnabled = true,\n            Types = \n            {\n                \"Unified\",\n            },\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n                groupOwner.ObjectId,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tgroupOwner, err := azuread.NewUser(ctx, \"groupOwner\", \u0026azuread.UserArgs{\n\t\t\tUserPrincipalName: pulumi.String(\"example-group-owner@hashicorp.com\"),\n\t\t\tDisplayName:       pulumi.String(\"Group Owner\"),\n\t\t\tMailNickname:      pulumi.String(\"example-group-owner\"),\n\t\t\tPassword:          pulumi.String(\"SecretP@sswd99!\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewGroup(ctx, \"example\", \u0026azuread.GroupArgs{\n\t\t\tDisplayName:     pulumi.String(\"example\"),\n\t\t\tMailEnabled:     pulumi.Bool(true),\n\t\t\tMailNickname:    pulumi.String(\"ExampleGroup\"),\n\t\t\tSecurityEnabled: pulumi.Bool(true),\n\t\t\tTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Unified\"),\n\t\t\t},\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t\tgroupOwner.ObjectId,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Group with members*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nconst exampleUser = new azuread.User(\"exampleUser\", {\n    displayName: \"J Doe\",\n    owners: [current.then(current =\u003e current.objectId)],\n    password: \"notSecure123\",\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\nconst exampleGroup = new azuread.Group(\"exampleGroup\", {\n    displayName: \"MyGroup\",\n    owners: [current.then(current =\u003e current.objectId)],\n    securityEnabled: true,\n    members: [exampleUser.objectId],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nGroups can be imported using their object ID, e.g.\n\n```sh\n $ pulumi import azuread:index/group:Group my_group 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "assignableToRole": {
                    "type": "boolean",
                    "description": "Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the group.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the group.\n"
                },
                "mail": {
                    "type": "string",
                    "description": "The SMTP address for the group.\n"
                },
                "mailEnabled": {
                    "type": "boolean",
                    "description": "Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).\n"
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The object ID of the group.\n"
                },
                "onpremisesDomainName": {
                    "type": "string",
                    "description": "The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesNetbiosName": {
                    "type": "string",
                    "description": "The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesSamAccountName": {
                    "type": "string",
                    "description": "The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesSecurityIdentifier": {
                    "type": "string",
                    "description": "The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesSyncEnabled": {
                    "type": "boolean",
                    "description": "Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of owners who own this group. Supported object types are Users or Service Principals\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "The preferred language for a Microsoft 365 group, in ISO 639-1 notation.\n"
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.\n"
                },
                "provisioningOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.\n"
                },
                "proxyAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses for the group that direct to the same group mailbox.\n"
                },
                "securityEnabled": {
                    "type": "boolean",
                    "description": "Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).\n"
                },
                "theme": {
                    "type": "string",
                    "description": "The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.\n"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of group types to configure for the group. The only supported type is `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.\n"
                }
            },
            "required": [
                "displayName",
                "mail",
                "mailNickname",
                "members",
                "objectId",
                "onpremisesDomainName",
                "onpremisesNetbiosName",
                "onpremisesSamAccountName",
                "onpremisesSecurityIdentifier",
                "onpremisesSyncEnabled",
                "owners",
                "preferredLanguage",
                "proxyAddresses",
                "visibility"
            ],
            "inputProperties": {
                "assignableToRole": {
                    "type": "boolean",
                    "description": "Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.\n"
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the group.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the group.\n"
                },
                "mailEnabled": {
                    "type": "boolean",
                    "description": "Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).\n"
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals.\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of owners who own this group. Supported object types are Users or Service Principals\n"
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.\n"
                },
                "provisioningOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.\n"
                },
                "securityEnabled": {
                    "type": "boolean",
                    "description": "Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).\n"
                },
                "theme": {
                    "type": "string",
                    "description": "The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.\n"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of group types to configure for the group. The only supported type is `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "assignableToRole": {
                        "type": "boolean",
                        "description": "Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.\n"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description for the group.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the group.\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "The SMTP address for the group.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).\n"
                    },
                    "mailNickname": {
                        "type": "string",
                        "description": "The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the group.\n"
                    },
                    "onpremisesDomainName": {
                        "type": "string",
                        "description": "The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesNetbiosName": {
                        "type": "string",
                        "description": "The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSamAccountName": {
                        "type": "string",
                        "description": "The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSecurityIdentifier": {
                        "type": "string",
                        "description": "The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSyncEnabled": {
                        "type": "boolean",
                        "description": "Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of owners who own this group. Supported object types are Users or Service Principals\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "The preferred language for a Microsoft 365 group, in ISO 639-1 notation.\n"
                    },
                    "preventDuplicateNames": {
                        "type": "boolean",
                        "description": "If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.\n"
                    },
                    "provisioningOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.\n"
                    },
                    "proxyAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses for the group that direct to the same group mailbox.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).\n"
                    },
                    "theme": {
                        "type": "string",
                        "description": "The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.\n"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of group types to configure for the group. The only supported type is `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.\n"
                    },
                    "visibility": {
                        "type": "string",
                        "description": "The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/groupMember:GroupMember": {
            "description": "Manages a single group membership within Azure Active Directory.\n\n\u003e **Warning** Do not use this resource at the same time as the `members` property of the `azuread.Group` resource for the same group. Doing so will cause a conflict and group members will be removed.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `Group.ReadWrite.All` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Groups Administrator`, `User Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleUser = azuread.getUser({\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\nconst exampleGroup = new azuread.Group(\"exampleGroup\", {\n    displayName: \"my_group\",\n    securityEnabled: true,\n});\nconst exampleGroupMember = new azuread.GroupMember(\"exampleGroupMember\", {\n    groupObjectId: exampleGroup.id,\n    memberObjectId: exampleUser.then(exampleUser =\u003e exampleUser.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_user = azuread.get_user(user_principal_name=\"jdoe@hashicorp.com\")\nexample_group = azuread.Group(\"exampleGroup\",\n    display_name=\"my_group\",\n    security_enabled=True)\nexample_group_member = azuread.GroupMember(\"exampleGroupMember\",\n    group_object_id=example_group.id,\n    member_object_id=example_user.id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleUser = Output.Create(AzureAD.GetUser.InvokeAsync(new AzureAD.GetUserArgs\n        {\n            UserPrincipalName = \"jdoe@hashicorp.com\",\n        }));\n        var exampleGroup = new AzureAD.Group(\"exampleGroup\", new AzureAD.GroupArgs\n        {\n            DisplayName = \"my_group\",\n            SecurityEnabled = true,\n        });\n        var exampleGroupMember = new AzureAD.GroupMember(\"exampleGroupMember\", new AzureAD.GroupMemberArgs\n        {\n            GroupObjectId = exampleGroup.Id,\n            MemberObjectId = exampleUser.Apply(exampleUser =\u003e exampleUser.Id),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"jdoe@hashicorp.com\"\n\t\texampleUser, err := azuread.LookupUser(ctx, \u0026GetUserArgs{\n\t\t\tUserPrincipalName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleGroup, err := azuread.NewGroup(ctx, \"exampleGroup\", \u0026azuread.GroupArgs{\n\t\t\tDisplayName:     pulumi.String(\"my_group\"),\n\t\t\tSecurityEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewGroupMember(ctx, \"exampleGroupMember\", \u0026azuread.GroupMemberArgs{\n\t\t\tGroupObjectId:  exampleGroup.ID(),\n\t\t\tMemberObjectId: pulumi.String(exampleUser.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nGroup members can be imported using the object ID of the group and the object ID of the member, e.g.\n\n```sh\n $ pulumi import azuread:index/groupMember:GroupMember test 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111\n```\n\n -\u003e This ID format is unique to Terraform and is composed of the Azure AD Group Object ID and the target Member Object ID in the format `{GroupObjectID}/member/{MemberObjectID}`. ",
            "properties": {
                "groupObjectId": {
                    "type": "string",
                    "description": "The object ID of the group you want to add the member to. Changing this forces a new resource to be created.\n"
                },
                "memberObjectId": {
                    "type": "string",
                    "description": "The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                }
            },
            "required": [
                "groupObjectId",
                "memberObjectId"
            ],
            "inputProperties": {
                "groupObjectId": {
                    "type": "string",
                    "description": "The object ID of the group you want to add the member to. Changing this forces a new resource to be created.\n"
                },
                "memberObjectId": {
                    "type": "string",
                    "description": "The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                }
            },
            "requiredInputs": [
                "groupObjectId",
                "memberObjectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupMember resources.\n",
                "properties": {
                    "groupObjectId": {
                        "type": "string",
                        "description": "The object ID of the group you want to add the member to. Changing this forces a new resource to be created.\n"
                    },
                    "memberObjectId": {
                        "type": "string",
                        "description": "The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/invitation:Invitation": {
            "description": "Manages an invitation of a guest user within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `User.Invite.All`, `User.ReadWrite.All` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Guest Inviter`, `User Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Basic example*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.Invitation(\"example\", {\n    redirectUrl: \"https://portal.azure.com\",\n    userEmailAddress: \"jdoe@hashicorp.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.Invitation(\"example\",\n    redirect_url=\"https://portal.azure.com\",\n    user_email_address=\"jdoe@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.Invitation(\"example\", new AzureAD.InvitationArgs\n        {\n            RedirectUrl = \"https://portal.azure.com\",\n            UserEmailAddress = \"jdoe@hashicorp.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewInvitation(ctx, \"example\", \u0026azuread.InvitationArgs{\n\t\t\tRedirectUrl:      pulumi.String(\"https://portal.azure.com\"),\n\t\t\tUserEmailAddress: pulumi.String(\"jdoe@hashicorp.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Invitation with standard message*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.Invitation(\"example\", {\n    message: {\n        language: \"en-US\",\n    },\n    redirectUrl: \"https://portal.azure.com\",\n    userEmailAddress: \"jdoe@hashicorp.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.Invitation(\"example\",\n    message=azuread.InvitationMessageArgs(\n        language=\"en-US\",\n    ),\n    redirect_url=\"https://portal.azure.com\",\n    user_email_address=\"jdoe@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.Invitation(\"example\", new AzureAD.InvitationArgs\n        {\n            Message = new AzureAD.Inputs.InvitationMessageArgs\n            {\n                Language = \"en-US\",\n            },\n            RedirectUrl = \"https://portal.azure.com\",\n            UserEmailAddress = \"jdoe@hashicorp.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewInvitation(ctx, \"example\", \u0026azuread.InvitationArgs{\n\t\t\tMessage: \u0026InvitationMessageArgs{\n\t\t\t\tLanguage: pulumi.String(\"en-US\"),\n\t\t\t},\n\t\t\tRedirectUrl:      pulumi.String(\"https://portal.azure.com\"),\n\t\t\tUserEmailAddress: pulumi.String(\"jdoe@hashicorp.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Invitation with custom message body and an additional recipient*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.Invitation(\"example\", {\n    message: {\n        additionalRecipients: \"aaliceberg@hashicorp.com\",\n        body: \"Hello there! You are invited to join my Azure tenant!\",\n    },\n    redirectUrl: \"https://portal.azure.com\",\n    userDisplayName: \"Bob Bobson\",\n    userEmailAddress: \"bbobson@hashicorp.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.Invitation(\"example\",\n    message=azuread.InvitationMessageArgs(\n        additional_recipients=\"aaliceberg@hashicorp.com\",\n        body=\"Hello there! You are invited to join my Azure tenant!\",\n    ),\n    redirect_url=\"https://portal.azure.com\",\n    user_display_name=\"Bob Bobson\",\n    user_email_address=\"bbobson@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.Invitation(\"example\", new AzureAD.InvitationArgs\n        {\n            Message = new AzureAD.Inputs.InvitationMessageArgs\n            {\n                AdditionalRecipients = \"aaliceberg@hashicorp.com\",\n                Body = \"Hello there! You are invited to join my Azure tenant!\",\n            },\n            RedirectUrl = \"https://portal.azure.com\",\n            UserDisplayName = \"Bob Bobson\",\n            UserEmailAddress = \"bbobson@hashicorp.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewInvitation(ctx, \"example\", \u0026azuread.InvitationArgs{\n\t\t\tMessage: \u0026InvitationMessageArgs{\n\t\t\t\tAdditionalRecipients: pulumi.String(\"aaliceberg@hashicorp.com\"),\n\t\t\t\tBody:                 pulumi.String(\"Hello there! You are invited to join my Azure tenant!\"),\n\t\t\t},\n\t\t\tRedirectUrl:      pulumi.String(\"https://portal.azure.com\"),\n\t\t\tUserDisplayName:  pulumi.String(\"Bob Bobson\"),\n\t\t\tUserEmailAddress: pulumi.String(\"bbobson@hashicorp.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "message": {
                    "$ref": "#/types/azuread:index/InvitationMessage:InvitationMessage",
                    "description": "A `message` block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.\n"
                },
                "redeemUrl": {
                    "type": "string",
                    "description": "The URL the user can use to redeem their invitation.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL that the user should be redirected to once the invitation is redeemed.\n"
                },
                "userDisplayName": {
                    "type": "string",
                    "description": "The display name of the user being invited.\n"
                },
                "userEmailAddress": {
                    "type": "string",
                    "description": "The email address of the user being invited.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Object ID of the invited user.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "The user type of the user being invited. Must be one of `Guest` or `Member`. Only Global Administrators can invite users as members. Defaults to `Guest`.\n"
                }
            },
            "required": [
                "redeemUrl",
                "redirectUrl",
                "userEmailAddress",
                "userId"
            ],
            "inputProperties": {
                "message": {
                    "$ref": "#/types/azuread:index/InvitationMessage:InvitationMessage",
                    "description": "A `message` block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL that the user should be redirected to once the invitation is redeemed.\n"
                },
                "userDisplayName": {
                    "type": "string",
                    "description": "The display name of the user being invited.\n"
                },
                "userEmailAddress": {
                    "type": "string",
                    "description": "The email address of the user being invited.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "The user type of the user being invited. Must be one of `Guest` or `Member`. Only Global Administrators can invite users as members. Defaults to `Guest`.\n"
                }
            },
            "requiredInputs": [
                "redirectUrl",
                "userEmailAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Invitation resources.\n",
                "properties": {
                    "message": {
                        "$ref": "#/types/azuread:index/InvitationMessage:InvitationMessage",
                        "description": "A `message` block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.\n"
                    },
                    "redeemUrl": {
                        "type": "string",
                        "description": "The URL the user can use to redeem their invitation.\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "The URL that the user should be redirected to once the invitation is redeemed.\n"
                    },
                    "userDisplayName": {
                        "type": "string",
                        "description": "The display name of the user being invited.\n"
                    },
                    "userEmailAddress": {
                        "type": "string",
                        "description": "The email address of the user being invited.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Object ID of the invited user.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "The user type of the user being invited. Must be one of `Guest` or `Member`. Only Global Administrators can invite users as members. Defaults to `Guest`.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/namedLocation:NamedLocation": {
            "description": "Manages a Named Location within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires the following application roles: `Policy.ReadWrite.ConditionalAccess` and `Policy.Read.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Conditional Access Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example_ip = new azuread.NamedLocation(\"example-ip\", {\n    displayName: \"IP Named Location\",\n    ip: {\n        ipRanges: [\n            \"1.1.1.1/32\",\n            \"2.2.2.2/32\",\n        ],\n        trusted: true,\n    },\n});\nconst example_country = new azuread.NamedLocation(\"example-country\", {\n    country: {\n        countriesAndRegions: [\n            \"GB\",\n            \"US\",\n        ],\n        includeUnknownCountriesAndRegions: false,\n    },\n    displayName: \"Country Named Location\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_ip = azuread.NamedLocation(\"example-ip\",\n    display_name=\"IP Named Location\",\n    ip=azuread.NamedLocationIpArgs(\n        ip_ranges=[\n            \"1.1.1.1/32\",\n            \"2.2.2.2/32\",\n        ],\n        trusted=True,\n    ))\nexample_country = azuread.NamedLocation(\"example-country\",\n    country=azuread.NamedLocationCountryArgs(\n        countries_and_regions=[\n            \"GB\",\n            \"US\",\n        ],\n        include_unknown_countries_and_regions=False,\n    ),\n    display_name=\"Country Named Location\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example_ip = new AzureAD.NamedLocation(\"example-ip\", new AzureAD.NamedLocationArgs\n        {\n            DisplayName = \"IP Named Location\",\n            Ip = new AzureAD.Inputs.NamedLocationIpArgs\n            {\n                IpRanges = \n                {\n                    \"1.1.1.1/32\",\n                    \"2.2.2.2/32\",\n                },\n                Trusted = true,\n            },\n        });\n        var example_country = new AzureAD.NamedLocation(\"example-country\", new AzureAD.NamedLocationArgs\n        {\n            Country = new AzureAD.Inputs.NamedLocationCountryArgs\n            {\n                CountriesAndRegions = \n                {\n                    \"GB\",\n                    \"US\",\n                },\n                IncludeUnknownCountriesAndRegions = false,\n            },\n            DisplayName = \"Country Named Location\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewNamedLocation(ctx, \"example_ip\", \u0026azuread.NamedLocationArgs{\n\t\t\tDisplayName: pulumi.String(\"IP Named Location\"),\n\t\t\tIp: \u0026NamedLocationIpArgs{\n\t\t\t\tIpRanges: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"1.1.1.1/32\"),\n\t\t\t\t\tpulumi.String(\"2.2.2.2/32\"),\n\t\t\t\t},\n\t\t\t\tTrusted: pulumi.Bool(true),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewNamedLocation(ctx, \"example_country\", \u0026azuread.NamedLocationArgs{\n\t\t\tCountry: \u0026NamedLocationCountryArgs{\n\t\t\t\tCountriesAndRegions: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"GB\"),\n\t\t\t\t\tpulumi.String(\"US\"),\n\t\t\t\t},\n\t\t\t\tIncludeUnknownCountriesAndRegions: pulumi.Bool(false),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Country Named Location\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nNamed Locations can be imported using the `id`, e.g.\n\n```sh\n $ pulumi import azuread:index/namedLocation:NamedLocation my_location 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "country": {
                    "$ref": "#/types/azuread:index/NamedLocationCountry:NamedLocationCountry",
                    "description": "A `country` block as documented below, which configures a country-based named location.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name for this named location.\n"
                },
                "ip": {
                    "$ref": "#/types/azuread:index/NamedLocationIp:NamedLocationIp",
                    "description": "An `ip` block as documented below, which configures an IP-based named location.\n"
                }
            },
            "required": [
                "displayName"
            ],
            "inputProperties": {
                "country": {
                    "$ref": "#/types/azuread:index/NamedLocationCountry:NamedLocationCountry",
                    "description": "A `country` block as documented below, which configures a country-based named location.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name for this named location.\n"
                },
                "ip": {
                    "$ref": "#/types/azuread:index/NamedLocationIp:NamedLocationIp",
                    "description": "An `ip` block as documented below, which configures an IP-based named location.\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NamedLocation resources.\n",
                "properties": {
                    "country": {
                        "$ref": "#/types/azuread:index/NamedLocationCountry:NamedLocationCountry",
                        "description": "A `country` block as documented below, which configures a country-based named location.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The friendly name for this named location.\n"
                    },
                    "ip": {
                        "$ref": "#/types/azuread:index/NamedLocationIp:NamedLocationIp",
                        "description": "An `ip` block as documented below, which configures an IP-based named location.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/servicePrincipal:ServicePrincipal": {
            "description": "Manages a service principal associated with an application within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `Application.ReadWrite.All` or `Directory.ReadWrite.All`\n\nIt is not currently possible to manage service principals whilst having only the `Application.ReadWrite.OwnedBy` role granted.\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Create a service principal for an application*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {\n    displayName: \"example\",\n    owners: [current.then(current =\u003e current.objectId)],\n});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {\n    applicationId: exampleApplication.applicationId,\n    appRoleAssignmentRequired: false,\n    owners: [current.then(current =\u003e current.objectId)],\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\nexample_application = azuread.Application(\"exampleApplication\",\n    display_name=\"example\",\n    owners=[current.object_id])\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\",\n    application_id=example_application.application_id,\n    app_role_assignment_required=False,\n    owners=[current.object_id])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n            },\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n            AppRoleAssignmentRequired = false,\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId:             exampleApplication.ApplicationId,\n\t\t\tAppRoleAssignmentRequired: pulumi.Bool(false),\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Create a service principal for an enterprise application*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {\n    displayName: \"example\",\n    owners: [current.then(current =\u003e current.objectId)],\n});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {\n    applicationId: exampleApplication.applicationId,\n    appRoleAssignmentRequired: false,\n    owners: [current.then(current =\u003e current.objectId)],\n    features: [{\n        enterpriseApplication: true,\n        galleryApplication: true,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\nexample_application = azuread.Application(\"exampleApplication\",\n    display_name=\"example\",\n    owners=[current.object_id])\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\",\n    application_id=example_application.application_id,\n    app_role_assignment_required=False,\n    owners=[current.object_id],\n    features=[azuread.ServicePrincipalFeatureArgs(\n        enterprise_application=True,\n        gallery_application=True,\n    )])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n            },\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n            AppRoleAssignmentRequired = false,\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n            },\n            Features = \n            {\n                new AzureAD.Inputs.ServicePrincipalFeatureArgs\n                {\n                    EnterpriseApplication = true,\n                    GalleryApplication = true,\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId:             exampleApplication.ApplicationId,\n\t\t\tAppRoleAssignmentRequired: pulumi.Bool(false),\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t},\n\t\t\tFeatures: ServicePrincipalFeatureArray{\n\t\t\t\t\u0026ServicePrincipalFeatureArgs{\n\t\t\t\t\tEnterpriseApplication: pulumi.Bool(true),\n\t\t\t\t\tGalleryApplication:    pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Manage a service principal for a first-party Microsoft application*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst wellKnown = azuread.getApplicationPublishedAppIds({});\nconst msgraph = new azuread.ServicePrincipal(\"msgraph\", {\n    applicationId: wellKnown.then(wellKnown =\u003e wellKnown.result?.MicrosoftGraph),\n    useExisting: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nwell_known = azuread.get_application_published_app_ids()\nmsgraph = azuread.ServicePrincipal(\"msgraph\",\n    application_id=well_known.result[\"MicrosoftGraph\"],\n    use_existing=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var wellKnown = Output.Create(AzureAD.GetApplicationPublishedAppIds.InvokeAsync());\n        var msgraph = new AzureAD.ServicePrincipal(\"msgraph\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = wellKnown.Apply(wellKnown =\u003e wellKnown.Result?.MicrosoftGraph),\n            UseExisting = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\twellKnown, err := azuread.GetApplicationPublishedAppIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewServicePrincipal(ctx, \"msgraph\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: pulumi.String(wellKnown.Result.MicrosoftGraph),\n\t\t\tUseExisting:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Create a service principal for an application created from a gallery template*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplicationTemplate = azuread.getApplicationTemplate({\n    displayName: \"Marketo\",\n});\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {\n    displayName: \"example\",\n    templateId: exampleApplicationTemplate.then(exampleApplicationTemplate =\u003e exampleApplicationTemplate.templateId),\n});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {\n    applicationId: exampleApplication.applicationId,\n    useExisting: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application_template = azuread.get_application_template(display_name=\"Marketo\")\nexample_application = azuread.Application(\"exampleApplication\",\n    display_name=\"example\",\n    template_id=example_application_template.template_id)\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\",\n    application_id=example_application.application_id,\n    use_existing=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplicationTemplate = Output.Create(AzureAD.GetApplicationTemplate.InvokeAsync(new AzureAD.GetApplicationTemplateArgs\n        {\n            DisplayName = \"Marketo\",\n        }));\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            TemplateId = exampleApplicationTemplate.Apply(exampleApplicationTemplate =\u003e exampleApplicationTemplate.TemplateId),\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n            UseExisting = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Marketo\"\n\t\texampleApplicationTemplate, err := azuread.GetApplicationTemplate(ctx, \u0026GetApplicationTemplateArgs{\n\t\t\tDisplayName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tTemplateId:  pulumi.String(exampleApplicationTemplate.TemplateId),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: exampleApplication.ApplicationId,\n\t\t\tUseExisting:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nService principals can be imported using their object ID, e.g.\n\n```sh\n $ pulumi import azuread:index/servicePrincipal:ServicePrincipal test 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the service principal account is enabled. Defaults to `true`.\n"
                },
                "alternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of alternative names, used to retrieve service principals by subscription, identify resource group and full resource ids for managed identities.\n"
                },
                "appRoleAssignmentRequired": {
                    "type": "boolean",
                    "description": "Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to `false`.\n"
                },
                "appRoleIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of app role values to app role IDs, as published by the associated application, intended to be useful when referencing app roles in other resources in your configuration.\n"
                },
                "appRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalAppRole:ServicePrincipalAppRole"
                    },
                    "description": "A list of app roles published by the associated application, as documented below. For more information [official documentation](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application ID (client ID) of the application for which to create a service principal.\n"
                },
                "applicationTenantId": {
                    "type": "string",
                    "description": "The tenant ID where the associated application is registered.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the service principal provided for internal end-users.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalFeature:ServicePrincipalFeature"
                    },
                    "description": "A `features` block as described below. Cannot be used together with the `tags` property.\n"
                },
                "homepageUrl": {
                    "type": "string",
                    "description": "Home page or landing page of the associated application.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "The URL where the service provider redirects the user to Azure AD to authenticate. Azure AD uses the URL to launch the application from Microsoft 365 or the Azure AD My Apps. When blank, Azure AD performs IdP-initiated sign-on for applications configured with SAML-based single sign-on.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL that will be used by Microsoft's authorization service to log out an user using OpenId Connect front-channel, back-channel or SAML logout protocols, taken from the associated application.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to capture information about the service principal, typically used for operational purposes.\n"
                },
                "notificationEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of email addresses where Azure AD sends a notification when the active certificate is near the expiration date. This is only for the certificates used to sign the SAML token issued for Azure AD Gallery applications.\n"
                },
                "oauth2PermissionScopeIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of OAuth2.0 permission scope values to scope IDs, as exposed by the associated application, intended to be useful when referencing permission scopes in other resources in your configuration.\n"
                },
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope"
                    },
                    "description": "A list of OAuth 2.0 delegated permission scopes exposed by the associated application, as documented below.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The object ID of the service principal.\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of object IDs of principals that will be granted ownership of the service principal. Supported object types are users or service principals. By default, no owners are assigned.\n"
                },
                "preferredSingleSignOnMode": {
                    "type": "string",
                    "description": "The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps. Supported values are `oidc`, `password`, `saml` or `notSupported`. Omit this property or specify a blank string to unset.\n"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs where user tokens are sent for sign-in with the associated application, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent for the associated application.\n"
                },
                "samlMetadataUrl": {
                    "type": "string",
                    "description": "The URL where the service exposes SAML metadata for federation.\n"
                },
                "samlSingleSignOn": {
                    "$ref": "#/types/azuread:index/ServicePrincipalSamlSingleSignOn:ServicePrincipalSamlSingleSignOn",
                    "description": "A `saml_single_sign_on` block as documented below.\n"
                },
                "servicePrincipalNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of identifier URI(s), copied over from the associated application.\n"
                },
                "signInAudience": {
                    "type": "string",
                    "description": "The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of tags to apply to the service principal. Cannot be used together with the `features` block.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.\n"
                },
                "useExisting": {
                    "type": "boolean",
                    "description": "When true, any existing service principal linked to the same application will be automatically imported. When false, an import error will be raised for any pre-existing service principal.\n"
                }
            },
            "required": [
                "appRoleIds",
                "appRoles",
                "applicationId",
                "applicationTenantId",
                "displayName",
                "features",
                "homepageUrl",
                "logoutUrl",
                "oauth2PermissionScopeIds",
                "oauth2PermissionScopes",
                "objectId",
                "redirectUris",
                "samlMetadataUrl",
                "servicePrincipalNames",
                "signInAudience",
                "tags",
                "type"
            ],
            "inputProperties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the service principal account is enabled. Defaults to `true`.\n"
                },
                "alternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of alternative names, used to retrieve service principals by subscription, identify resource group and full resource ids for managed identities.\n"
                },
                "appRoleAssignmentRequired": {
                    "type": "boolean",
                    "description": "Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to `false`.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application ID (client ID) of the application for which to create a service principal.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the service principal provided for internal end-users.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalFeature:ServicePrincipalFeature"
                    },
                    "description": "A `features` block as described below. Cannot be used together with the `tags` property.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "The URL where the service provider redirects the user to Azure AD to authenticate. Azure AD uses the URL to launch the application from Microsoft 365 or the Azure AD My Apps. When blank, Azure AD performs IdP-initiated sign-on for applications configured with SAML-based single sign-on.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A free text field to capture information about the service principal, typically used for operational purposes.\n"
                },
                "notificationEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of email addresses where Azure AD sends a notification when the active certificate is near the expiration date. This is only for the certificates used to sign the SAML token issued for Azure AD Gallery applications.\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of object IDs of principals that will be granted ownership of the service principal. Supported object types are users or service principals. By default, no owners are assigned.\n"
                },
                "preferredSingleSignOnMode": {
                    "type": "string",
                    "description": "The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps. Supported values are `oidc`, `password`, `saml` or `notSupported`. Omit this property or specify a blank string to unset.\n"
                },
                "samlSingleSignOn": {
                    "$ref": "#/types/azuread:index/ServicePrincipalSamlSingleSignOn:ServicePrincipalSamlSingleSignOn",
                    "description": "A `saml_single_sign_on` block as documented below.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of tags to apply to the service principal. Cannot be used together with the `features` block.\n"
                },
                "useExisting": {
                    "type": "boolean",
                    "description": "When true, any existing service principal linked to the same application will be automatically imported. When false, an import error will be raised for any pre-existing service principal.\n"
                }
            },
            "requiredInputs": [
                "applicationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServicePrincipal resources.\n",
                "properties": {
                    "accountEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the service principal account is enabled. Defaults to `true`.\n"
                    },
                    "alternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of alternative names, used to retrieve service principals by subscription, identify resource group and full resource ids for managed identities.\n"
                    },
                    "appRoleAssignmentRequired": {
                        "type": "boolean",
                        "description": "Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to `false`.\n"
                    },
                    "appRoleIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of app role values to app role IDs, as published by the associated application, intended to be useful when referencing app roles in other resources in your configuration.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ServicePrincipalAppRole:ServicePrincipalAppRole"
                        },
                        "description": "A list of app roles published by the associated application, as documented below. For more information [official documentation](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The application ID (client ID) of the application for which to create a service principal.\n"
                    },
                    "applicationTenantId": {
                        "type": "string",
                        "description": "The tenant ID where the associated application is registered.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the service principal provided for internal end-users.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ServicePrincipalFeature:ServicePrincipalFeature"
                        },
                        "description": "A `features` block as described below. Cannot be used together with the `tags` property.\n"
                    },
                    "homepageUrl": {
                        "type": "string",
                        "description": "Home page or landing page of the associated application.\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "The URL where the service provider redirects the user to Azure AD to authenticate. Azure AD uses the URL to launch the application from Microsoft 365 or the Azure AD My Apps. When blank, Azure AD performs IdP-initiated sign-on for applications configured with SAML-based single sign-on.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The URL that will be used by Microsoft's authorization service to log out an user using OpenId Connect front-channel, back-channel or SAML logout protocols, taken from the associated application.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to capture information about the service principal, typically used for operational purposes.\n"
                    },
                    "notificationEmailAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of email addresses where Azure AD sends a notification when the active certificate is near the expiration date. This is only for the certificates used to sign the SAML token issued for Azure AD Gallery applications.\n"
                    },
                    "oauth2PermissionScopeIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of OAuth2.0 permission scope values to scope IDs, as exposed by the associated application, intended to be useful when referencing permission scopes in other resources in your configuration.\n"
                    },
                    "oauth2PermissionScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope"
                        },
                        "description": "A list of OAuth 2.0 delegated permission scopes exposed by the associated application, as documented below.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the service principal.\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of object IDs of principals that will be granted ownership of the service principal. Supported object types are users or service principals. By default, no owners are assigned.\n"
                    },
                    "preferredSingleSignOnMode": {
                        "type": "string",
                        "description": "The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps. Supported values are `oidc`, `password`, `saml` or `notSupported`. Omit this property or specify a blank string to unset.\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of URLs where user tokens are sent for sign-in with the associated application, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent for the associated application.\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "The URL where the service exposes SAML metadata for federation.\n"
                    },
                    "samlSingleSignOn": {
                        "$ref": "#/types/azuread:index/ServicePrincipalSamlSingleSignOn:ServicePrincipalSamlSingleSignOn",
                        "description": "A `saml_single_sign_on` block as documented below.\n"
                    },
                    "servicePrincipalNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of identifier URI(s), copied over from the associated application.\n"
                    },
                    "signInAudience": {
                        "type": "string",
                        "description": "The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of tags to apply to the service principal. Cannot be used together with the `features` block.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.\n"
                    },
                    "useExisting": {
                        "type": "boolean",
                        "description": "When true, any existing service principal linked to the same application will be automatically imported. When false, an import error will be raised for any pre-existing service principal.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/servicePrincipalCertificate:ServicePrincipalCertificate": {
            "description": "Manages a certificate associated with a service principal within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `Application.ReadWrite.All` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`\n\n\n## Import\n\nCertificates can be imported using the object ID of the associated service principal and the key ID of the certificate credential, e.g.\n\n```sh\n $ pulumi import azuread:index/servicePrincipalCertificate:ServicePrincipalCertificate test 00000000-0000-0000-0000-000000000000/certificate/11111111-1111-1111-1111-111111111111\n```\n\n -\u003e This ID format is unique to Terraform and is composed of the service principal's object ID, the string \"certificate\" and the certificate's key ID in the format `{ServicePrincipalObjectId}/certificate/{CertificateKeyId}`. ",
            "properties": {
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the certificate is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A UUID used to uniquely identify this certificate. If not specified a UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The object ID of the service principal for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "required": [
                "endDate",
                "keyId",
                "servicePrincipalId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the certificate is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A UUID used to uniquely identify this certificate. If not specified a UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The object ID of the service principal for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "requiredInputs": [
                "servicePrincipalId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServicePrincipalCertificate resources.\n",
                "properties": {
                    "encoding": {
                        "type": "string",
                        "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the certificate is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A UUID used to uniquely identify this certificate. If not specified a UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                    },
                    "servicePrincipalId": {
                        "type": "string",
                        "description": "The object ID of the service principal for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/servicePrincipalPassword:ServicePrincipalPassword": {
            "description": "Manages a password credential associated with a service principal within Azure Active Directory. See also the azuread.ApplicationPassword resource.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `Application.ReadWrite.All` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`\n\n\n## Import\n\nThis resource does not support importing. ",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A UUID used to uniquely identify this password credential.\n"
                },
                "rotateWhenChanged": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The object ID of the service principal for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                },
                "value": {
                    "type": "string",
                    "description": "The password for this service principal, which is generated by Azure Active Directory.\n"
                }
            },
            "required": [
                "displayName",
                "endDate",
                "keyId",
                "servicePrincipalId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "rotateWhenChanged": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The object ID of the service principal for which this password should be created. Changing this field forces a new resource to be created.\n"
                }
            },
            "requiredInputs": [
                "servicePrincipalId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServicePrincipalPassword resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the password.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A UUID used to uniquely identify this password credential.\n"
                    },
                    "rotateWhenChanged": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.\n"
                    },
                    "servicePrincipalId": {
                        "type": "string",
                        "description": "The object ID of the service principal for which this password should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The password for this service principal, which is generated by Azure Active Directory.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/user:User": {
            "description": "Manages a user within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this resource.\n\nWhen authenticated with a service principal, this resource requires one of the following application roles: `User.ReadWrite.All` or `Directory.ReadWrite.All`\n\nWhen authenticated with a user principal, this resource requires one of the following directory roles: `User Administrator` or `Global Administrator`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.User(\"example\", {\n    displayName: \"J. Doe\",\n    mailNickname: \"jdoe\",\n    password: \"SecretP@sswd99!\",\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.User(\"example\",\n    display_name=\"J. Doe\",\n    mail_nickname=\"jdoe\",\n    password=\"SecretP@sswd99!\",\n    user_principal_name=\"jdoe@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.User(\"example\", new AzureAD.UserArgs\n        {\n            DisplayName = \"J. Doe\",\n            MailNickname = \"jdoe\",\n            Password = \"SecretP@sswd99!\",\n            UserPrincipalName = \"jdoe@hashicorp.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewUser(ctx, \"example\", \u0026azuread.UserArgs{\n\t\t\tDisplayName:       pulumi.String(\"J. Doe\"),\n\t\t\tMailNickname:      pulumi.String(\"jdoe\"),\n\t\t\tPassword:          pulumi.String(\"SecretP@sswd99!\"),\n\t\t\tUserPrincipalName: pulumi.String(\"jdoe@hashicorp.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported using their object ID, e.g.\n\n```sh\n $ pulumi import azuread:index/user:User my_user 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "aboutMe": {
                    "type": "string",
                    "description": "A freeform field for the user to describe themselves\n"
                },
                "accountEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the account should be enabled.\n"
                },
                "ageGroup": {
                    "type": "string",
                    "description": "The age group of the user. Supported values are `Adult`, `NotAdult` and `Minor`. Omit this property or specify a blank string to unset.\n"
                },
                "businessPhones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of telephone numbers for the user. Only one number can be set for this property. Read-only for users synced with Azure AD Connect.\n"
                },
                "city": {
                    "type": "string",
                    "description": "The city in which the user is located.\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                },
                "consentProvidedForMinor": {
                    "type": "string",
                    "description": "Whether consent has been obtained for minors. Supported values are `Granted`, `Denied` and `NotRequired`. Omit this property or specify a blank string to unset.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "The cost center associated with the user.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country/region in which the user is located, e.g. `US` or `UK`.\n"
                },
                "creationType": {
                    "type": "string",
                    "description": "Indicates whether the user account was created as a regular school or work account (`null`), an external account (`Invitation`), a local account for an Azure Active Directory B2C tenant (`LocalAccount`) or self-service sign-up using email verification (`EmailVerified`).\n"
                },
                "department": {
                    "type": "string",
                    "description": "The name for the department in which the user works.\n"
                },
                "disablePasswordExpiration": {
                    "type": "boolean",
                    "description": "Whether the user's password is exempt from expiring. Defaults to `false`.\n"
                },
                "disableStrongPassword": {
                    "type": "boolean",
                    "description": "Whether the user is allowed weaker passwords than the default policy to be specified. Defaults to `false`.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name to display in the address book for the user.\n"
                },
                "division": {
                    "type": "string",
                    "description": "The name of the division in which the user works.\n"
                },
                "employeeId": {
                    "type": "string",
                    "description": "The employee identifier assigned to the user by the organisation.\n"
                },
                "employeeType": {
                    "type": "string",
                    "description": "Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.\n"
                },
                "externalUserState": {
                    "type": "string",
                    "description": "For an external user invited to the tenant, this property represents the invited user's invitation status. Possible values are `PendingAcceptance` or `Accepted`.\n"
                },
                "faxNumber": {
                    "type": "string",
                    "description": "The fax number of the user.\n"
                },
                "forcePasswordChange": {
                    "type": "boolean",
                    "description": "Whether the user is forced to change the password during the next sign-in. Only takes effect when also changing the password. Defaults to `false`.\n"
                },
                "givenName": {
                    "type": "string",
                    "description": "The given name (first name) of the user.\n"
                },
                "imAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user.\n"
                },
                "jobTitle": {
                    "type": "string",
                    "description": "The user’s job title.\n"
                },
                "mail": {
                    "type": "string",
                    "description": "The SMTP address for the user. This property cannot be unset once specified.\n"
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The mail alias for the user. Defaults to the user name part of the user principal name (UPN).\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "The primary cellular telephone number for the user.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The object ID of the user.\n"
                },
                "officeLocation": {
                    "type": "string",
                    "description": "The office location in the user's place of business.\n"
                },
                "onpremisesDistinguishedName": {
                    "type": "string",
                    "description": "The on-premises distinguished name (DN) of the user, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesDomainName": {
                    "type": "string",
                    "description": "The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesImmutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's `user_principal_name` property when creating a new user account.\n"
                },
                "onpremisesSamAccountName": {
                    "type": "string",
                    "description": "The on-premise SAM account name of the user.\n"
                },
                "onpremisesSecurityIdentifier": {
                    "type": "string",
                    "description": "The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.\n"
                },
                "onpremisesSyncEnabled": {
                    "type": "boolean",
                    "description": "Whether this user is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).\n"
                },
                "onpremisesUserPrincipalName": {
                    "type": "string",
                    "description": "The on-premise user principal name of the user.\n"
                },
                "otherMails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of additional email addresses for the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters. This property is required when creating a new user.\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "The user's preferred language, in ISO 639-1 notation.\n"
                },
                "proxyAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses for the user that direct to the same mailbox.\n"
                },
                "showInAddressList": {
                    "type": "boolean",
                    "description": "Whether or not the Outlook global address list should include this user. Defaults to `true`.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state or province in the user's address.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "The street address of the user's place of business.\n"
                },
                "surname": {
                    "type": "string",
                    "description": "The user's surname (family name or last name).\n"
                },
                "usageLocation": {
                    "type": "string",
                    "description": "The usage location of the user. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set.\n"
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "The user principal name (UPN) of the user.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "The user type in the directory. Possible values are `Guest` or `Member`.\n"
                }
            },
            "required": [
                "aboutMe",
                "businessPhones",
                "creationType",
                "displayName",
                "externalUserState",
                "imAddresses",
                "mail",
                "mailNickname",
                "objectId",
                "onpremisesDistinguishedName",
                "onpremisesDomainName",
                "onpremisesImmutableId",
                "onpremisesSamAccountName",
                "onpremisesSecurityIdentifier",
                "onpremisesSyncEnabled",
                "onpremisesUserPrincipalName",
                "password",
                "proxyAddresses",
                "userPrincipalName",
                "userType"
            ],
            "inputProperties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the account should be enabled.\n"
                },
                "ageGroup": {
                    "type": "string",
                    "description": "The age group of the user. Supported values are `Adult`, `NotAdult` and `Minor`. Omit this property or specify a blank string to unset.\n"
                },
                "businessPhones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of telephone numbers for the user. Only one number can be set for this property. Read-only for users synced with Azure AD Connect.\n"
                },
                "city": {
                    "type": "string",
                    "description": "The city in which the user is located.\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                },
                "consentProvidedForMinor": {
                    "type": "string",
                    "description": "Whether consent has been obtained for minors. Supported values are `Granted`, `Denied` and `NotRequired`. Omit this property or specify a blank string to unset.\n"
                },
                "costCenter": {
                    "type": "string",
                    "description": "The cost center associated with the user.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country/region in which the user is located, e.g. `US` or `UK`.\n"
                },
                "department": {
                    "type": "string",
                    "description": "The name for the department in which the user works.\n"
                },
                "disablePasswordExpiration": {
                    "type": "boolean",
                    "description": "Whether the user's password is exempt from expiring. Defaults to `false`.\n"
                },
                "disableStrongPassword": {
                    "type": "boolean",
                    "description": "Whether the user is allowed weaker passwords than the default policy to be specified. Defaults to `false`.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name to display in the address book for the user.\n"
                },
                "division": {
                    "type": "string",
                    "description": "The name of the division in which the user works.\n"
                },
                "employeeId": {
                    "type": "string",
                    "description": "The employee identifier assigned to the user by the organisation.\n"
                },
                "employeeType": {
                    "type": "string",
                    "description": "Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.\n"
                },
                "faxNumber": {
                    "type": "string",
                    "description": "The fax number of the user.\n"
                },
                "forcePasswordChange": {
                    "type": "boolean",
                    "description": "Whether the user is forced to change the password during the next sign-in. Only takes effect when also changing the password. Defaults to `false`.\n"
                },
                "givenName": {
                    "type": "string",
                    "description": "The given name (first name) of the user.\n"
                },
                "jobTitle": {
                    "type": "string",
                    "description": "The user’s job title.\n"
                },
                "mail": {
                    "type": "string",
                    "description": "The SMTP address for the user. This property cannot be unset once specified.\n"
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The mail alias for the user. Defaults to the user name part of the user principal name (UPN).\n"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "The primary cellular telephone number for the user.\n"
                },
                "officeLocation": {
                    "type": "string",
                    "description": "The office location in the user's place of business.\n"
                },
                "onpremisesImmutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's `user_principal_name` property when creating a new user account.\n"
                },
                "otherMails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of additional email addresses for the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters. This property is required when creating a new user.\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "The user's preferred language, in ISO 639-1 notation.\n"
                },
                "showInAddressList": {
                    "type": "boolean",
                    "description": "Whether or not the Outlook global address list should include this user. Defaults to `true`.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state or province in the user's address.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "The street address of the user's place of business.\n"
                },
                "surname": {
                    "type": "string",
                    "description": "The user's surname (family name or last name).\n"
                },
                "usageLocation": {
                    "type": "string",
                    "description": "The usage location of the user. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set.\n"
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "The user principal name (UPN) of the user.\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "userPrincipalName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "aboutMe": {
                        "type": "string",
                        "description": "A freeform field for the user to describe themselves\n"
                    },
                    "accountEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the account should be enabled.\n"
                    },
                    "ageGroup": {
                        "type": "string",
                        "description": "The age group of the user. Supported values are `Adult`, `NotAdult` and `Minor`. Omit this property or specify a blank string to unset.\n"
                    },
                    "businessPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of telephone numbers for the user. Only one number can be set for this property. Read-only for users synced with Azure AD Connect.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city in which the user is located.\n"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                    },
                    "consentProvidedForMinor": {
                        "type": "string",
                        "description": "Whether consent has been obtained for minors. Supported values are `Granted`, `Denied` and `NotRequired`. Omit this property or specify a blank string to unset.\n"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "The cost center associated with the user.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country/region in which the user is located, e.g. `US` or `UK`.\n"
                    },
                    "creationType": {
                        "type": "string",
                        "description": "Indicates whether the user account was created as a regular school or work account (`null`), an external account (`Invitation`), a local account for an Azure Active Directory B2C tenant (`LocalAccount`) or self-service sign-up using email verification (`EmailVerified`).\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "The name for the department in which the user works.\n"
                    },
                    "disablePasswordExpiration": {
                        "type": "boolean",
                        "description": "Whether the user's password is exempt from expiring. Defaults to `false`.\n"
                    },
                    "disableStrongPassword": {
                        "type": "boolean",
                        "description": "Whether the user is allowed weaker passwords than the default policy to be specified. Defaults to `false`.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name to display in the address book for the user.\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "The name of the division in which the user works.\n"
                    },
                    "employeeId": {
                        "type": "string",
                        "description": "The employee identifier assigned to the user by the organisation.\n"
                    },
                    "employeeType": {
                        "type": "string",
                        "description": "Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.\n"
                    },
                    "externalUserState": {
                        "type": "string",
                        "description": "For an external user invited to the tenant, this property represents the invited user's invitation status. Possible values are `PendingAcceptance` or `Accepted`.\n"
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "The fax number of the user.\n"
                    },
                    "forcePasswordChange": {
                        "type": "boolean",
                        "description": "Whether the user is forced to change the password during the next sign-in. Only takes effect when also changing the password. Defaults to `false`.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name (first name) of the user.\n"
                    },
                    "imAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user.\n"
                    },
                    "jobTitle": {
                        "type": "string",
                        "description": "The user’s job title.\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "The SMTP address for the user. This property cannot be unset once specified.\n"
                    },
                    "mailNickname": {
                        "type": "string",
                        "description": "The mail alias for the user. Defaults to the user name part of the user principal name (UPN).\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "The primary cellular telephone number for the user.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the user.\n"
                    },
                    "officeLocation": {
                        "type": "string",
                        "description": "The office location in the user's place of business.\n"
                    },
                    "onpremisesDistinguishedName": {
                        "type": "string",
                        "description": "The on-premises distinguished name (DN) of the user, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesDomainName": {
                        "type": "string",
                        "description": "The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesImmutableId": {
                        "type": "string",
                        "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's `user_principal_name` property when creating a new user account.\n"
                    },
                    "onpremisesSamAccountName": {
                        "type": "string",
                        "description": "The on-premise SAM account name of the user.\n"
                    },
                    "onpremisesSecurityIdentifier": {
                        "type": "string",
                        "description": "The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSyncEnabled": {
                        "type": "boolean",
                        "description": "Whether this user is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).\n"
                    },
                    "onpremisesUserPrincipalName": {
                        "type": "string",
                        "description": "The on-premise user principal name of the user.\n"
                    },
                    "otherMails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of additional email addresses for the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the user. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters. This property is required when creating a new user.\n"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "The user's preferred language, in ISO 639-1 notation.\n"
                    },
                    "proxyAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses for the user that direct to the same mailbox.\n"
                    },
                    "showInAddressList": {
                        "type": "boolean",
                        "description": "Whether or not the Outlook global address list should include this user. Defaults to `true`.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state or province in the user's address.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "The street address of the user's place of business.\n"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The user's surname (family name or last name).\n"
                    },
                    "usageLocation": {
                        "type": "string",
                        "description": "The usage location of the user. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set.\n"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "description": "The user principal name (UPN) of the user.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "The user type in the directory. Possible values are `Guest` or `Member`.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "azuread:index/getApplication:getApplication": {
            "description": "Use this data source to access information about an existing Application within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `Application.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = azuread.getApplication({\n    displayName: \"My First AzureAD Application\",\n});\nexport const applicationObjectId = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_application(display_name=\"My First AzureAD Application\")\npulumi.export(\"applicationObjectId\", example.id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetApplication.InvokeAsync(new AzureAD.GetApplicationArgs\n        {\n            DisplayName = \"My First AzureAD Application\",\n        }));\n        this.ApplicationObjectId = example.Apply(example =\u003e example.Id);\n    }\n\n    [Output(\"applicationObjectId\")]\n    public Output\u003cstring\u003e ApplicationObjectId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"My First AzureAD Application\"\n\t\texample, err := azuread.LookupApplication(ctx, \u0026GetApplicationArgs{\n\t\t\tDisplayName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"applicationObjectId\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplication.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Specifies the Application ID (also called Client ID).\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Specifies the display name of the application.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the Object ID of the application.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApplication.\n",
                "properties": {
                    "apis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationApi:getApplicationApi"
                        },
                        "description": "An `api` block as documented below.\n"
                    },
                    "appRoleIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationAppRole:getApplicationAppRole"
                        },
                        "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The Application ID (also called Client ID).\n"
                    },
                    "deviceOnlyAuthEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether this application supports device authentication without a user.\n"
                    },
                    "disabledByMicrosoft": {
                        "type": "string",
                        "description": "Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. `DisabledDueToViolationOfServicesAgreement`\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                    },
                    "fallbackPublicClientEnabled": {
                        "type": "boolean",
                        "description": "The fallback application type as public client, such as an installed application running on a mobile device.\n"
                    },
                    "groupMembershipClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The `groups` claim issued in a user or OAuth 2.0 access token that the app expects.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "identifierUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "CDN URL to the application's logo.\n"
                    },
                    "marketingUrl": {
                        "type": "string",
                        "description": "URL of the application's marketing page.\n"
                    },
                    "oauth2PermissionScopeIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.\n"
                    },
                    "oauth2PostResponseRequired": {
                        "type": "boolean",
                        "description": "Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. When `false`, only GET requests are allowed.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The application's object ID.\n"
                    },
                    "optionalClaims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationOptionalClaim:getApplicationOptionalClaim"
                        },
                        "description": "An `optional_claims` block as documented below.\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of object IDs of principals that are assigned ownership of the application.\n"
                    },
                    "privacyStatementUrl": {
                        "type": "string",
                        "description": "URL of the application's privacy statement.\n"
                    },
                    "publicClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationPublicClient:getApplicationPublicClient"
                        },
                        "description": "A `public_client` block as documented below.\n"
                    },
                    "publisherDomain": {
                        "type": "string",
                        "description": "The verified publisher domain for the application.\n"
                    },
                    "requiredResourceAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationRequiredResourceAccess:getApplicationRequiredResourceAccess"
                        },
                        "description": "A collection of `required_resource_access` blocks as documented below.\n"
                    },
                    "signInAudience": {
                        "type": "string",
                        "description": "The Microsoft account types that are supported for the current application. One of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.\n"
                    },
                    "singlePageApplications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationSinglePageApplication:getApplicationSinglePageApplication"
                        },
                        "description": "A `single_page_application` block as documented below.\n"
                    },
                    "supportUrl": {
                        "type": "string",
                        "description": "URL of the application's support page.\n"
                    },
                    "termsOfServiceUrl": {
                        "type": "string",
                        "description": "URL of the application's terms of service statement.\n"
                    },
                    "webs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationWeb:getApplicationWeb"
                        },
                        "description": "A `web` block as documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "apis",
                    "appRoleIds",
                    "appRoles",
                    "applicationId",
                    "deviceOnlyAuthEnabled",
                    "disabledByMicrosoft",
                    "displayName",
                    "fallbackPublicClientEnabled",
                    "groupMembershipClaims",
                    "identifierUris",
                    "logoUrl",
                    "marketingUrl",
                    "oauth2PermissionScopeIds",
                    "oauth2PostResponseRequired",
                    "objectId",
                    "optionalClaims",
                    "owners",
                    "privacyStatementUrl",
                    "publicClients",
                    "publisherDomain",
                    "requiredResourceAccesses",
                    "signInAudience",
                    "singlePageApplications",
                    "supportUrl",
                    "termsOfServiceUrl",
                    "webs",
                    "id"
                ]
            }
        },
        "azuread:index/getApplicationPublishedAppIds:getApplicationPublishedAppIds": {
            "description": "Use this data source to discover application IDs for APIs published by Microsoft.\n\nThis data source uses an [unofficial source of application IDs](https://github.com/manicminer/hamilton/blob/main/environments/published.go), as there is currently no available official indexed source for applications or APIs published by Microsoft.\n\nThe app IDs returned by this data source are sourced from the Azure Global (Public) Cloud, however some of them are known to work in government and national clouds.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Listing well-known application IDs*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst wellKnown = azuread.getApplicationPublishedAppIds({});\nexport const publishedAppIds = wellKnown.then(wellKnown =\u003e wellKnown.result);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nwell_known = azuread.get_application_published_app_ids()\npulumi.export(\"publishedAppIds\", well_known.result)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var wellKnown = Output.Create(AzureAD.GetApplicationPublishedAppIds.InvokeAsync());\n        this.PublishedAppIds = wellKnown.Apply(wellKnown =\u003e wellKnown.Result);\n    }\n\n    [Output(\"publishedAppIds\")]\n    public Output\u003cstring\u003e PublishedAppIds { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\twellKnown, err := azuread.GetApplicationPublishedAppIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"publishedAppIds\", wellKnown.Result)\n\t\treturn nil\n\t})\n}\n```\n\n*Granting access to an application*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst wellKnown = azuread.getApplicationPublishedAppIds({});\nconst msgraph = new azuread.ServicePrincipal(\"msgraph\", {\n    applicationId: wellKnown.then(wellKnown =\u003e wellKnown.result?.MicrosoftGraph),\n    useExisting: true,\n});\nconst example = new azuread.Application(\"example\", {\n    displayName: \"example\",\n    requiredResourceAccesses: [{\n        resourceAppId: wellKnown.then(wellKnown =\u003e wellKnown.result?.MicrosoftGraph),\n        resourceAccesses: [\n            {\n                id: msgraph.appRoleIds[\"User.Read.All\"],\n                type: \"Role\",\n            },\n            {\n                id: msgraph.oauth2PermissionScopeIds[\"User.ReadWrite\"],\n                type: \"Scope\",\n            },\n        ],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nwell_known = azuread.get_application_published_app_ids()\nmsgraph = azuread.ServicePrincipal(\"msgraph\",\n    application_id=well_known.result[\"MicrosoftGraph\"],\n    use_existing=True)\nexample = azuread.Application(\"example\",\n    display_name=\"example\",\n    required_resource_accesses=[azuread.ApplicationRequiredResourceAccessArgs(\n        resource_app_id=well_known.result[\"MicrosoftGraph\"],\n        resource_accesses=[\n            azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                id=msgraph.app_role_ids[\"User.Read.All\"],\n                type=\"Role\",\n            ),\n            azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                id=msgraph.oauth2_permission_scope_ids[\"User.ReadWrite\"],\n                type=\"Scope\",\n            ),\n        ],\n    )])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var wellKnown = Output.Create(AzureAD.GetApplicationPublishedAppIds.InvokeAsync());\n        var msgraph = new AzureAD.ServicePrincipal(\"msgraph\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = wellKnown.Apply(wellKnown =\u003e wellKnown.Result?.MicrosoftGraph),\n            UseExisting = true,\n        });\n        var example = new AzureAD.Application(\"example\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            RequiredResourceAccesses = \n            {\n                new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs\n                {\n                    ResourceAppId = wellKnown.Apply(wellKnown =\u003e wellKnown.Result?.MicrosoftGraph),\n                    ResourceAccesses = \n                    {\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = msgraph.AppRoleIds.Apply(appRoleIds =\u003e appRoleIds.User_Read_All),\n                            Type = \"Role\",\n                        },\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = msgraph.Oauth2PermissionScopeIds.Apply(oauth2PermissionScopeIds =\u003e oauth2PermissionScopeIds.User_ReadWrite),\n                            Type = \"Scope\",\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\twellKnown, err := azuread.GetApplicationPublishedAppIds(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmsgraph, err := azuread.NewServicePrincipal(ctx, \"msgraph\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: pulumi.String(wellKnown.Result.MicrosoftGraph),\n\t\t\tUseExisting:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewApplication(ctx, \"example\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tRequiredResourceAccesses: ApplicationRequiredResourceAccessArray{\n\t\t\t\t\u0026ApplicationRequiredResourceAccessArgs{\n\t\t\t\t\tResourceAppId: pulumi.String(wellKnown.Result.MicrosoftGraph),\n\t\t\t\t\tResourceAccesses: ApplicationRequiredResourceAccessResourceAccessArray{\n\t\t\t\t\t\t\u0026ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId: msgraph.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {\n\t\t\t\t\t\t\t\treturn appRoleIds.User.Read.All, nil\n\t\t\t\t\t\t\t}).(pulumi.StringOutput),\n\t\t\t\t\t\t\tType: pulumi.String(\"Role\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId: msgraph.Oauth2PermissionScopeIds.ApplyT(func(oauth2PermissionScopeIds map[string]string) (string, error) {\n\t\t\t\t\t\t\t\treturn oauth2PermissionScopeIds.User.ReadWrite, nil\n\t\t\t\t\t\t\t}).(pulumi.StringOutput),\n\t\t\t\t\t\t\tType: pulumi.String(\"Scope\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getApplicationPublishedAppIds.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "result": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of application names to application IDs.\n"
                    }
                },
                "type": "object",
                "required": [
                    "result",
                    "id"
                ]
            }
        },
        "azuread:index/getApplicationTemplate:getApplicationTemplate": {
            "description": "Use this data source to access information about an Application Template from the [Azure AD App Gallery](https://azuremarketplace.microsoft.com/en-US/marketplace/apps/category/azure-active-directory-apps).\n\n## API Permissions\n\nThis data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = azuread.getApplicationTemplate({\n    displayName: \"Marketo\",\n});\nexport const applicationTemplateId = example.then(example =\u003e example.templateId);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_application_template(display_name=\"Marketo\")\npulumi.export(\"applicationTemplateId\", example.template_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetApplicationTemplate.InvokeAsync(new AzureAD.GetApplicationTemplateArgs\n        {\n            DisplayName = \"Marketo\",\n        }));\n        this.ApplicationTemplateId = example.Apply(example =\u003e example.TemplateId);\n    }\n\n    [Output(\"applicationTemplateId\")]\n    public Output\u003cstring\u003e ApplicationTemplateId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Marketo\"\n\t\texample, err := azuread.GetApplicationTemplate(ctx, \u0026GetApplicationTemplateArgs{\n\t\t\tDisplayName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"applicationTemplateId\", example.TemplateId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplicationTemplate.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Specifies the display name of the templated application.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "Specifies the ID of the templated application.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApplicationTemplate.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of categories for this templated application.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the templated application.\n"
                    },
                    "homepageUrl": {
                        "type": "string",
                        "description": "Home page URL of the templated application.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL to retrieve the logo for this templated application.\n"
                    },
                    "publisher": {
                        "type": "string",
                        "description": "Name of the publisher for this templated application.\n"
                    },
                    "supportedProvisioningTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of provisioning modes supported by this templated application.\n"
                    },
                    "supportedSingleSignOnModes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of single sign on modes supported by this templated application.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The ID of the templated application.\n"
                    }
                },
                "type": "object",
                "required": [
                    "categories",
                    "displayName",
                    "homepageUrl",
                    "logoUrl",
                    "publisher",
                    "supportedProvisioningTypes",
                    "supportedSingleSignOnModes",
                    "templateId",
                    "id"
                ]
            }
        },
        "azuread:index/getClientConfig:getClientConfig": {
            "description": "Use this data source to access the configuration of the AzureAD provider.\n\n## API Permissions\n\nNo additional roles are required to use this data source.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nexport const objectId = current.then(current =\u003e current.objectId);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\npulumi.export(\"objectId\", current.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        this.ObjectId = current.Apply(current =\u003e current.ObjectId);\n    }\n\n    [Output(\"objectId\")]\n    public Output\u003cstring\u003e ObjectId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"objectId\", current.ObjectId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getClientConfig.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The client ID (application ID) linked to the authenticated principal, or the application used for delegated authentication.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the authenticated principal.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of the authenticated principal.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientId",
                    "objectId",
                    "tenantId",
                    "id"
                ]
            }
        },
        "azuread:index/getDomains:getDomains": {
            "description": "Use this data source to access information about existing Domains within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `Domain.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst aadDomains = azuread.getDomains({});\nexport const domainNames = [aadDomains.then(aadDomains =\u003e aadDomains.domains)].map(__item =\u003e __item?.domainName);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\naad_domains = azuread.get_domains()\npulumi.export(\"domainNames\", [__item.domain_name for __item in [aad_domains.domains]])\n```\n```csharp\nusing System.Linq;\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var aadDomains = Output.Create(AzureAD.GetDomains.InvokeAsync());\n        this.DomainNames = \n        {\n            aadDomains.Apply(aadDomains =\u003e aadDomains.Domains),\n        }.Select(__item =\u003e __item?.DomainName).ToList();\n    }\n\n    [Output(\"domainNames\")]\n    public Output\u003cstring\u003e DomainNames { get; set; }\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDomains.\n",
                "properties": {
                    "adminManaged": {
                        "type": "boolean",
                        "description": "Set to `true` to only return domains whose DNS is managed by Microsoft 365. Defaults to `false`.\n"
                    },
                    "includeUnverified": {
                        "type": "boolean",
                        "description": "Set to `true` if unverified Azure AD domains should be included. Defaults to `false`.\n"
                    },
                    "onlyDefault": {
                        "type": "boolean",
                        "description": "Set to `true` to only return the default domain.\n"
                    },
                    "onlyInitial": {
                        "type": "boolean",
                        "description": "Set to `true` to only return the initial domain, which is your primary Azure Active Directory tenant domain. Defaults to `false`.\n"
                    },
                    "onlyRoot": {
                        "type": "boolean",
                        "description": "Set to `true` to only return verified root domains. Excludes subdomains and unverified domains.\n"
                    },
                    "supportsServices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of supported services that must be supported by a domain. Possible values include `Email`, `Sharepoint`, `EmailInternalRelayOnly`, `OfficeCommunicationsOnline`, `SharePointDefaultDomain`, `FullRedelegation`, `SharePointPublic`, `OrgIdAuthentication`, `Yammer` and `Intune`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomains.\n",
                "properties": {
                    "adminManaged": {
                        "type": "boolean",
                        "description": "Whether the DNS for the domain is managed by Microsoft 365.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getDomainsDomain:getDomainsDomain"
                        },
                        "description": "A list of tenant domains. Each `domain` object provides the attributes documented below.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeUnverified": {
                        "type": "boolean"
                    },
                    "onlyDefault": {
                        "type": "boolean"
                    },
                    "onlyInitial": {
                        "type": "boolean"
                    },
                    "onlyRoot": {
                        "type": "boolean"
                    },
                    "supportsServices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "domains",
                    "id"
                ]
            }
        },
        "azuread:index/getGroup:getGroup": {
            "description": "Gets information about an Azure Active Directory group.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `Group.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### By Group Display Name)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getGroup({\n    displayName: \"MyGroupName\",\n    securityEnabled: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_group(display_name=\"MyGroupName\",\n    security_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetGroup.InvokeAsync(new AzureAD.GetGroupArgs\n        {\n            DisplayName = \"MyGroupName\",\n            SecurityEnabled = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"MyGroupName\"\n\t\topt1 := true\n\t\t_, err := azuread.LookupGroup(ctx, \u0026GetGroupArgs{\n\t\t\tDisplayName:     \u0026opt0,\n\t\t\tSecurityEnabled: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the group.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is mail-enabled.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the object ID of the group.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a security group.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "assignableToRole": {
                        "type": "boolean",
                        "description": "Indicates whether this group can be assigned to an Azure Active Directory role.\n"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of behaviors for a Microsoft 365 group, such as `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description of the group.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "The SMTP address for the group.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is mail-enabled.\n"
                    },
                    "mailNickname": {
                        "type": "string",
                        "description": "The mail alias for the group, unique in the organisation.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of object IDs of the group members.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the group.\n"
                    },
                    "onpremisesDomainName": {
                        "type": "string",
                        "description": "The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesNetbiosName": {
                        "type": "string",
                        "description": "The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSamAccountName": {
                        "type": "string",
                        "description": "The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSecurityIdentifier": {
                        "type": "string",
                        "description": "The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSyncEnabled": {
                        "type": "boolean",
                        "description": "Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of object IDs of the group owners.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "The preferred language for a Microsoft 365 group, in ISO 639-1 notation.\n"
                    },
                    "provisioningOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of provisioning options for a Microsoft 365 group, such as `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details.\n"
                    },
                    "proxyAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses for the group that direct to the same group mailbox.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a security group.\n"
                    },
                    "theme": {
                        "type": "string",
                        "description": "The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. When no theme is set, the value is `null`.\n"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of group types configured for the group. The only supported type is `Unified`, which specifies a Microsoft 365 group.\n"
                    },
                    "visibility": {
                        "type": "string",
                        "description": "The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility.\n"
                    }
                },
                "type": "object",
                "required": [
                    "assignableToRole",
                    "behaviors",
                    "description",
                    "displayName",
                    "mail",
                    "mailEnabled",
                    "mailNickname",
                    "members",
                    "objectId",
                    "onpremisesDomainName",
                    "onpremisesNetbiosName",
                    "onpremisesSamAccountName",
                    "onpremisesSecurityIdentifier",
                    "onpremisesSyncEnabled",
                    "owners",
                    "preferredLanguage",
                    "provisioningOptions",
                    "proxyAddresses",
                    "securityEnabled",
                    "theme",
                    "types",
                    "visibility",
                    "id"
                ]
            }
        },
        "azuread:index/getGroups:getGroups": {
            "description": "Gets Object IDs or Display Names for multiple Azure Active Directory groups.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `Group.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Look up by group name*\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getGroups({\n    displayNames: [\n        \"group-a\",\n        \"group-b\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_groups(display_names=[\n    \"group-a\",\n    \"group-b\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetGroups.InvokeAsync(new AzureAD.GetGroupsArgs\n        {\n            DisplayNames = \n            {\n                \"group-a\",\n                \"group-b\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetGroups(ctx, \u0026GetGroupsArgs{\n\t\t\tDisplayNames: []string{\n\t\t\t\t\"group-a\",\n\t\t\t\t\"group-b\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up all groups*\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getGroups({\n    returnAll: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_groups(return_all=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetGroups.InvokeAsync(new AzureAD.GetGroupsArgs\n        {\n            ReturnAll = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := true\n\t\t_, err := azuread.GetGroups(ctx, \u0026GetGroupsArgs{\n\t\t\tReturnAll: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up all mail-enabled groups*\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getGroups({\n    mailEnabled: true,\n    returnAll: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_groups(mail_enabled=True,\n    return_all=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetGroups.InvokeAsync(new AzureAD.GetGroupsArgs\n        {\n            MailEnabled = true,\n            ReturnAll = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := true\n\t\topt1 := true\n\t\t_, err := azuread.GetGroups(ctx, \u0026GetGroupsArgs{\n\t\t\tMailEnabled: \u0026opt0,\n\t\t\tReturnAll:   \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up all security-enabled groups that are not mail-enabled*\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getGroups({\n    mailEnabled: false,\n    returnAll: true,\n    securityEnabled: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_groups(mail_enabled=False,\n    return_all=True,\n    security_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetGroups.InvokeAsync(new AzureAD.GetGroupsArgs\n        {\n            MailEnabled = false,\n            ReturnAll = true,\n            SecurityEnabled = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := false\n\t\topt1 := true\n\t\topt2 := true\n\t\t_, err := azuread.GetGroups(ctx, \u0026GetGroupsArgs{\n\t\t\tMailEnabled:     \u0026opt0,\n\t\t\tReturnAll:       \u0026opt1,\n\t\t\tSecurityEnabled: \u0026opt2,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "displayNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The display names of the groups.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.\n"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The object IDs of the groups.\n"
                    },
                    "returnAll": {
                        "type": "boolean",
                        "description": "A flag to denote if all groups should be fetched and returned.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "displayNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The display names of the groups.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The object IDs of the groups.\n"
                    },
                    "returnAll": {
                        "type": "boolean"
                    },
                    "securityEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "displayNames",
                    "mailEnabled",
                    "objectIds",
                    "securityEnabled",
                    "id"
                ]
            }
        },
        "azuread:index/getServicePrincipal:getServicePrincipal": {
            "description": "Gets information about an existing service principal associated with an application within Azure Active Directory.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `Application.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Look up by application display name*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipal({\n    displayName: \"my-awesome-application\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principal(display_name=\"my-awesome-application\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipal.InvokeAsync(new AzureAD.GetServicePrincipalArgs\n        {\n            DisplayName = \"my-awesome-application\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"my-awesome-application\"\n\t\t_, err := azuread.LookupServicePrincipal(ctx, \u0026GetServicePrincipalArgs{\n\t\t\tDisplayName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up by application ID (client ID)*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipal({\n    applicationId: \"00000000-0000-0000-0000-000000000000\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principal(application_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipal.InvokeAsync(new AzureAD.GetServicePrincipalArgs\n        {\n            ApplicationId = \"00000000-0000-0000-0000-000000000000\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"00000000-0000-0000-0000-000000000000\"\n\t\t_, err := azuread.LookupServicePrincipal(ctx, \u0026GetServicePrincipalArgs{\n\t\t\tApplicationId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up by service principal object ID*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipal({\n    objectId: \"00000000-0000-0000-0000-000000000000\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principal(object_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipal.InvokeAsync(new AzureAD.GetServicePrincipalArgs\n        {\n            ObjectId = \"00000000-0000-0000-0000-000000000000\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"00000000-0000-0000-0000-000000000000\"\n\t\t_, err := azuread.LookupServicePrincipal(ctx, \u0026GetServicePrincipalArgs{\n\t\t\tObjectId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServicePrincipal.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The application ID (client ID) of the application associated with this service principal.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the application associated with this service principal.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the service principal.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServicePrincipal.\n",
                "properties": {
                    "accountEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the service principal account is enabled.\n"
                    },
                    "alternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of alternative names, used to retrieve service principals by subscription, identify resource group and full resource ids for managed identities.\n"
                    },
                    "appRoleAssignmentRequired": {
                        "type": "boolean",
                        "description": "Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application.\n"
                    },
                    "appRoleIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of app role values to app role IDs, as published by the associated application, intended to be useful when referencing app roles in other resources in your configuration.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalAppRole:getServicePrincipalAppRole"
                        },
                        "description": "A list of app roles published by the associated application, as documented below. For more information [official documentation](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The application ID (client ID) of the application associated with this service principal.\n"
                    },
                    "applicationTenantId": {
                        "type": "string",
                        "description": "The tenant ID where the associated application is registered.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Permission help text that appears in the admin app assignment and consent experiences.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalFeature:getServicePrincipalFeature"
                        },
                        "description": "A `features` block as described below.\n"
                    },
                    "homepageUrl": {
                        "type": "string",
                        "description": "Home page or landing page of the associated application.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "The URL where the service provider redirects the user to Azure AD to authenticate. Azure AD uses the URL to launch the application from Microsoft 365 or the Azure AD My Apps.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The URL that will be used by Microsoft's authorization service to logout an user using OpenId Connect front-channel, back-channel or SAML logout protocols, taken from the associated application.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A free text field to capture information about the service principal, typically used for operational purposes.\n"
                    },
                    "notificationEmailAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of email addresses where Azure AD sends a notification when the active certificate is near the expiration date. This is only for the certificates used to sign the SAML token issued for Azure AD Gallery applications.\n"
                    },
                    "oauth2PermissionScopeIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of OAuth2.0 permission scope values to scope IDs, as exposed by the associated application, intended to be useful when referencing permission scopes in other resources in your configuration.\n"
                    },
                    "oauth2PermissionScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalOauth2PermissionScope:getServicePrincipalOauth2PermissionScope"
                        },
                        "description": "A collection of OAuth 2.0 delegated permissions exposed by the associated application. Each permission is covered by an `oauth2_permission_scopes` block as documented below.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the service principal.\n"
                    },
                    "preferredSingleSignOnMode": {
                        "type": "string",
                        "description": "The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps.\n"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of URLs where user tokens are sent for sign-in with the associated application, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent for the associated application.\n"
                    },
                    "samlMetadataUrl": {
                        "type": "string",
                        "description": "The URL where the service exposes SAML metadata for federation.\n"
                    },
                    "samlSingleSignOns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalSamlSingleSignOn:getServicePrincipalSamlSingleSignOn"
                        },
                        "description": "A `saml_single_sign_on` block as documented below.\n"
                    },
                    "servicePrincipalNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of identifier URI(s), copied over from the associated application.\n"
                    },
                    "signInAudience": {
                        "type": "string",
                        "description": "The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags applied to the service principal.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountEnabled",
                    "alternativeNames",
                    "appRoleAssignmentRequired",
                    "appRoleIds",
                    "appRoles",
                    "applicationId",
                    "applicationTenantId",
                    "description",
                    "displayName",
                    "features",
                    "homepageUrl",
                    "loginUrl",
                    "logoutUrl",
                    "notes",
                    "notificationEmailAddresses",
                    "oauth2PermissionScopeIds",
                    "oauth2PermissionScopes",
                    "objectId",
                    "preferredSingleSignOnMode",
                    "redirectUris",
                    "samlMetadataUrl",
                    "samlSingleSignOns",
                    "servicePrincipalNames",
                    "signInAudience",
                    "tags",
                    "type",
                    "id"
                ]
            }
        },
        "azuread:index/getServicePrincipals:getServicePrincipals": {
            "description": "Gets basic information for multiple Azure Active Directory service principals.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `Application.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Look up by application display names*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipals({\n    displayNames: [\n        \"example-app\",\n        \"another-app\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principals(display_names=[\n    \"example-app\",\n    \"another-app\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipals.InvokeAsync(new AzureAD.GetServicePrincipalsArgs\n        {\n            DisplayNames = \n            {\n                \"example-app\",\n                \"another-app\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetServicePrincipals(ctx, \u0026GetServicePrincipalsArgs{\n\t\t\tDisplayNames: []string{\n\t\t\t\t\"example-app\",\n\t\t\t\t\"another-app\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up by application IDs (client IDs*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipals({\n    applicationIds: [\n        \"11111111-0000-0000-0000-000000000000\",\n        \"22222222-0000-0000-0000-000000000000\",\n        \"33333333-0000-0000-0000-000000000000\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principals(application_ids=[\n    \"11111111-0000-0000-0000-000000000000\",\n    \"22222222-0000-0000-0000-000000000000\",\n    \"33333333-0000-0000-0000-000000000000\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipals.InvokeAsync(new AzureAD.GetServicePrincipalsArgs\n        {\n            ApplicationIds = \n            {\n                \"11111111-0000-0000-0000-000000000000\",\n                \"22222222-0000-0000-0000-000000000000\",\n                \"33333333-0000-0000-0000-000000000000\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetServicePrincipals(ctx, \u0026GetServicePrincipalsArgs{\n\t\t\tApplicationIds: []string{\n\t\t\t\t\"11111111-0000-0000-0000-000000000000\",\n\t\t\t\t\"22222222-0000-0000-0000-000000000000\",\n\t\t\t\t\"33333333-0000-0000-0000-000000000000\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*Look up by service principal object IDs*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipals({\n    objectIds: [\n        \"00000000-0000-0000-0000-000000000000\",\n        \"00000000-0000-0000-0000-111111111111\",\n        \"00000000-0000-0000-0000-222222222222\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principals(object_ids=[\n    \"00000000-0000-0000-0000-000000000000\",\n    \"00000000-0000-0000-0000-111111111111\",\n    \"00000000-0000-0000-0000-222222222222\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipals.InvokeAsync(new AzureAD.GetServicePrincipalsArgs\n        {\n            ObjectIds = \n            {\n                \"00000000-0000-0000-0000-000000000000\",\n                \"00000000-0000-0000-0000-111111111111\",\n                \"00000000-0000-0000-0000-222222222222\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetServicePrincipals(ctx, \u0026GetServicePrincipalsArgs{\n\t\t\tObjectIds: []string{\n\t\t\t\t\"00000000-0000-0000-0000-000000000000\",\n\t\t\t\t\"00000000-0000-0000-0000-111111111111\",\n\t\t\t\t\"00000000-0000-0000-0000-222222222222\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServicePrincipals.\n",
                "properties": {
                    "applicationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of application IDs (client IDs) of the applications associated with the service principals.\n"
                    },
                    "displayNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of display names of the applications associated with the service principals.\n"
                    },
                    "ignoreMissing": {
                        "type": "boolean",
                        "description": "Ignore missing service principals and return all service principals that are found. The data source will still fail if no service principals are found. Defaults to false.\n"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The object IDs of the service principals.\n"
                    },
                    "returnAll": {
                        "type": "boolean",
                        "description": "When `true`, the data source will return all service principals. Cannot be used with `ignore_missing`. Defaults to false.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServicePrincipals.\n",
                "properties": {
                    "applicationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of application IDs (client IDs) of the applications associated with the service principals.\n"
                    },
                    "displayNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of display names of the applications associated with the service principals.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ignoreMissing": {
                        "type": "boolean"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The object IDs of the service principals.\n"
                    },
                    "returnAll": {
                        "type": "boolean"
                    },
                    "servicePrincipals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalsServicePrincipal:getServicePrincipalsServicePrincipal"
                        },
                        "description": "A list of service principals. Each `service_principal` object provides the attributes documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationIds",
                    "displayNames",
                    "objectIds",
                    "servicePrincipals",
                    "id"
                ]
            }
        },
        "azuread:index/getUser:getUser": {
            "description": "Gets information about an Azure Active Directory user.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `User.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getUser({\n    userPrincipalName: \"user@hashicorp.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_user(user_principal_name=\"user@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetUser.InvokeAsync(new AzureAD.GetUserArgs\n        {\n            UserPrincipalName = \"user@hashicorp.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"user@hashicorp.com\"\n\t\t_, err := azuread.LookupUser(ctx, \u0026GetUserArgs{\n\t\t\tUserPrincipalName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "mailNickname": {
                        "type": "string",
                        "description": "The email alias of the user.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the user.\n"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "description": "The user principal name (UPN) of the user.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "accountEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the account is enabled.\n"
                    },
                    "ageGroup": {
                        "type": "string",
                        "description": "The age group of the user. Supported values are `Adult`, `NotAdult` and `Minor`.\n"
                    },
                    "businessPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of telephone numbers for the user.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city in which the user is located.\n"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                    },
                    "consentProvidedForMinor": {
                        "type": "string",
                        "description": "Whether consent has been obtained for minors. Supported values are `Granted`, `Denied` and `NotRequired`.\n"
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "The cost center associated with the user.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country/region in which the user is located, e.g. `US` or `UK`.\n"
                    },
                    "creationType": {
                        "type": "string",
                        "description": "Indicates whether the user account was created as a regular school or work account (`null`), an external account (`Invitation`), a local account for an Azure Active Directory B2C tenant (`LocalAccount`) or self-service sign-up using email verification (`EmailVerified`).\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "The name for the department in which the user works.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the user.\n"
                    },
                    "division": {
                        "type": "string",
                        "description": "The name of the division in which the user works.\n"
                    },
                    "employeeId": {
                        "type": "string",
                        "description": "The employee identifier assigned to the user by the organisation.\n"
                    },
                    "employeeType": {
                        "type": "string",
                        "description": "Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.\n"
                    },
                    "externalUserState": {
                        "type": "string",
                        "description": "For an external user invited to the tenant, this property represents the invited user's invitation status. Possible values are `PendingAcceptance` or `Accepted`.\n"
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "The fax number of the user.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name (first name) of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user.\n"
                    },
                    "jobTitle": {
                        "type": "string",
                        "description": "The user’s job title.\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "The SMTP address for the user.\n"
                    },
                    "mailNickname": {
                        "type": "string",
                        "description": "The email alias of the user.\n"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "The primary cellular telephone number for the user.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The object ID of the user.\n"
                    },
                    "officeLocation": {
                        "type": "string",
                        "description": "The office location in the user's place of business.\n"
                    },
                    "onpremisesDistinguishedName": {
                        "type": "string",
                        "description": "The on-premises distinguished name (DN) of the user, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesDomainName": {
                        "type": "string",
                        "description": "The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesImmutableId": {
                        "type": "string",
                        "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object.\n"
                    },
                    "onpremisesSamAccountName": {
                        "type": "string",
                        "description": "The on-premise SAM account name of the user.\n"
                    },
                    "onpremisesSecurityIdentifier": {
                        "type": "string",
                        "description": "The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.\n"
                    },
                    "onpremisesSyncEnabled": {
                        "type": "boolean",
                        "description": "Whether this user is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).\n"
                    },
                    "onpremisesUserPrincipalName": {
                        "type": "string",
                        "description": "The on-premise user principal name of the user.\n"
                    },
                    "otherMails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of additional email addresses for the user.\n"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "The user's preferred language, in ISO 639-1 notation.\n"
                    },
                    "proxyAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses for the user that direct to the same mailbox.\n"
                    },
                    "showInAddressList": {
                        "type": "boolean",
                        "description": "Whether or not the Outlook global address list should include this user.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state or province in the user's address.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "The street address of the user's place of business.\n"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The user's surname (family name or last name).\n"
                    },
                    "usageLocation": {
                        "type": "string",
                        "description": "The usage location of the user.\n"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "description": "The user principal name (UPN) of the user.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "The user type in the directory. Possible values are `Guest` or `Member`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountEnabled",
                    "ageGroup",
                    "businessPhones",
                    "city",
                    "companyName",
                    "consentProvidedForMinor",
                    "costCenter",
                    "country",
                    "creationType",
                    "department",
                    "displayName",
                    "division",
                    "employeeId",
                    "employeeType",
                    "externalUserState",
                    "faxNumber",
                    "givenName",
                    "imAddresses",
                    "jobTitle",
                    "mail",
                    "mailNickname",
                    "mobilePhone",
                    "objectId",
                    "officeLocation",
                    "onpremisesDistinguishedName",
                    "onpremisesDomainName",
                    "onpremisesImmutableId",
                    "onpremisesSamAccountName",
                    "onpremisesSecurityIdentifier",
                    "onpremisesSyncEnabled",
                    "onpremisesUserPrincipalName",
                    "otherMails",
                    "postalCode",
                    "preferredLanguage",
                    "proxyAddresses",
                    "showInAddressList",
                    "state",
                    "streetAddress",
                    "surname",
                    "usageLocation",
                    "userPrincipalName",
                    "userType",
                    "id"
                ]
            }
        },
        "azuread:index/getUsers:getUsers": {
            "description": "Gets basic information for multiple Azure Active Directory users.\n\n## API Permissions\n\nThe following API permissions are required in order to use this data source.\n\nWhen authenticated with a service principal, this data source requires one of the following application roles: `User.Read.All` or `Directory.Read.All`\n\nWhen authenticated with a user principal, this data source does not require any additional roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst users = pulumi.output(azuread.getUsers({\n    userPrincipalNames: [\n        \"kat@hashicorp.com\",\n        \"byte@hashicorp.com\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nusers = azuread.get_users(user_principal_names=[\n    \"kat@hashicorp.com\",\n    \"byte@hashicorp.com\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var users = Output.Create(AzureAD.GetUsers.InvokeAsync(new AzureAD.GetUsersArgs\n        {\n            UserPrincipalNames = \n            {\n                \"kat@hashicorp.com\",\n                \"byte@hashicorp.com\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetUsers(ctx, \u0026GetUsersArgs{\n\t\t\tUserPrincipalNames: []string{\n\t\t\t\t\"kat@hashicorp.com\",\n\t\t\t\t\"byte@hashicorp.com\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "ignoreMissing": {
                        "type": "boolean",
                        "description": "Ignore missing users and return users that were found. The data source will still fail if no users are found. Defaults to false.\n"
                    },
                    "mailNicknames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The email aliases of the users.\n"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The object IDs of the users.\n"
                    },
                    "returnAll": {
                        "type": "boolean",
                        "description": "When `true`, the data source will return all users. Cannot be used with `ignore_missing`. Defaults to false.\n"
                    },
                    "userPrincipalNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The user principal names (UPNs) of the users.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ignoreMissing": {
                        "type": "boolean"
                    },
                    "mailNicknames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The email aliases of the users.\n"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The object IDs of the users.\n"
                    },
                    "returnAll": {
                        "type": "boolean"
                    },
                    "userPrincipalNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The user principal names (UPNs) of the users.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getUsersUser:getUsersUser"
                        },
                        "description": "A list of users. Each `user` object provides the attributes documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "mailNicknames",
                    "objectIds",
                    "userPrincipalNames",
                    "users",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "azuread": "AzureAD"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing azuread cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-azuread)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-azuread` repo](https://github.com/pulumi/pulumi-azuread/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-azuread` repo](https://github.com/hashicorp/terraform-provider-azuread/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-azuread)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-azuread` repo](https://github.com/pulumi/pulumi-azuread/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-azuread` repo](https://github.com/hashicorp/terraform-provider-azuread/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}