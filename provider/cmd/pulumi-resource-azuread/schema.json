{
    "name": "azuread",
    "description": "A Pulumi package for creating and managing azuread cloud resources.",
    "keywords": [
        "pulumi",
        "azuread"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`azuread` Terraform Provider](https://github.com/hashicorp/terraform-provider-azuread).",
    "repository": "https://github.com/pulumi/pulumi-azuread",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "clientCertificatePassword": {
                "type": "string"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used for service principal authentication.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "Disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.\n"
            },
            "environment": {
                "type": "string",
                "description": "The cloud environment which should be used. Possible values are `global` (formerly `public`), `usgovernment`, `dod`,\n`germany`, and `china`. Defaults to `global`.\n",
                "default": "public",
                "defaultInfo": {
                    "environment": [
                        "ARM_ENVIRONMENT"
                    ]
                }
            },
            "metadataHost": {
                "type": "string",
                "description": "The Hostname which should be used for the Azure Metadata Service.\n",
                "deprecationMessage": "The `metadata_host` provider attribute is deprecated and will be removed in version 2.0"
            },
            "msiEndpoint": {
                "type": "string",
                "description": "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected\nautomatically.\n",
                "defaultInfo": {
                    "environment": [
                        "ARM_MSI_ENDPOINT"
                    ]
                }
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used. Works with all authentication methods except MSI.\n"
            },
            "useCli": {
                "type": "boolean",
                "description": "Allow Azure CLI to be used for Authentication.\n"
            },
            "useMicrosoftGraph": {
                "type": "boolean",
                "description": "Beta: Use the Microsoft Graph API, instead of the legacy Azure Active Directory Graph API, where supported.\n"
            },
            "useMsi": {
                "type": "boolean",
                "description": "Allow Managed Service Identity to be used for Authentication.\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "ARM_USE_MSI"
                    ]
                }
            }
        },
        "defaults": [
            "environment",
            "metadataHost"
        ]
    },
    "types": {
        "azuread:index/ApplicationApi:ApplicationApi": {
            "properties": {
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationApiOauth2PermissionScope:ApplicationApiOauth2PermissionScope"
                    },
                    "description": "One or more `oauth2_permission_scope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationApiOauth2PermissionScope:ApplicationApiOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled: Defaults to `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the app role. This attribute is computed and cannot be specified manually in this block. If you need to specify a custom `id`, it's recommended to use the azuread.ApplicationAppRole resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifier_uris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "azuread:index/ApplicationAppRole:ApplicationAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled: Defaults to `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the app role. This attribute is computed and cannot be specified manually in this block. If you need to specify a custom `id`, it's recommended to use the azuread.ApplicationAppRole resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Determines if the permission is enabled: defaults to `true`.\n",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMemberTypes",
                "description",
                "displayName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedMemberTypes",
                        "description",
                        "displayName",
                        "id",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/ApplicationOauth2Permission:ApplicationOauth2Permission": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the app role. This attribute is computed and cannot be specified manually in this block. If you need to specify a custom `id`, it's recommended to use the azuread.ApplicationAppRole resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Determines if the permission is enabled: defaults to `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifier_uris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminConsentDescription",
                        "adminConsentDisplayName",
                        "id",
                        "isEnabled",
                        "type",
                        "userConsentDescription",
                        "userConsentDisplayName",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims": {
            "properties": {
                "accessTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaimsAccessToken:ApplicationOptionalClaimsAccessToken"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaimsIdToken:ApplicationOptionalClaimsIdToken"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationOptionalClaimsAccessToken:ApplicationOptionalClaimsAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/ApplicationOptionalClaimsIdToken:ApplicationOptionalClaimsIdToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess": {
            "properties": {
                "resourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccessResourceAccess:ApplicationRequiredResourceAccessResourceAccess"
                    },
                    "description": "A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceAppId": {
                    "type": "string",
                    "description": "The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceAccesses",
                "resourceAppId"
            ]
        },
        "azuread:index/ApplicationRequiredResourceAccessResourceAccess:ApplicationRequiredResourceAccessResourceAccess": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission` or `AppRole` instances that the resource application exposes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ]
        },
        "azuread:index/ApplicationWeb:ApplicationWeb": {
            "properties": {
                "homepageUrl": {
                    "type": "string",
                    "description": "Home page or landing page of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "implicitGrant": {
                    "$ref": "#/types/azuread:index/ApplicationWebImplicitGrant:ApplicationWebImplicitGrant",
                    "description": "An `implicit_grant` block as documented above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ApplicationWebImplicitGrant:ApplicationWebImplicitGrant": {
            "properties": {
                "accessTokenIssuanceEnabled": {
                    "type": "boolean",
                    "description": "Whether this web application can request an access token using OAuth 2.0 implicit flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/ServicePrincipalAppRole:ServicePrincipalAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in daemon service scenarios). Possible values are: `User` and `Application`, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Permission help text that appears in the admin app assignment and consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "deprecationMessage": "[NOTE] This attribute will be renamed to `enabled` in version 2.0 of the AzureAD provider",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedMemberTypes",
                        "description",
                        "displayName",
                        "enabled",
                        "id",
                        "isEnabled",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/ServicePrincipalOauth2Permission:ServicePrincipalOauth2Permission": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "The description of the admin consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the admin consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "The description of the user consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the user consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminConsentDescription",
                        "adminConsentDisplayName",
                        "id",
                        "isEnabled",
                        "type",
                        "userConsentDescription",
                        "userConsentDisplayName",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "The description of the admin consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the admin consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "The description of the user consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the user consent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminConsentDescription",
                        "adminConsentDisplayName",
                        "enabled",
                        "id",
                        "type",
                        "userConsentDescription",
                        "userConsentDisplayName",
                        "value"
                    ]
                }
            }
        },
        "azuread:index/getApplicationApi:getApplicationApi": {
            "properties": {
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationApiOauth2PermissionScope:getApplicationApiOauth2PermissionScope"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "oauth2PermissionScopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationApiOauth2PermissionScope:getApplicationApiOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "The description of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "(Optional) Determines if the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission` or `AppRole` instances that the resource application exposes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "The description of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "enabled",
                "id",
                "isEnabled",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationAppRole:getApplicationAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: `User` and `Application`, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Specifies the display name of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "(Optional) Determines if the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission` or `AppRole` instances that the resource application exposes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "deprecationMessage": "[NOTE] This attribute will be renamed to `enabled` in version 2.0 of the AzureAD provider",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMemberTypes",
                "description",
                "displayName",
                "enabled",
                "id",
                "isEnabled",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationOauth2Permission:getApplicationOauth2Permission": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "The description of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "(Optional) Determines if the permission scope is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission` or `AppRole` instances that the resource application exposes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "The description of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "enabled",
                "id",
                "isEnabled",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationOptionalClaims:getApplicationOptionalClaims": {
            "properties": {
                "accessTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaimsAccessToken:getApplicationOptionalClaimsAccessToken"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaimsIdToken:getApplicationOptionalClaimsIdToken"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "azuread:index/getApplicationOptionalClaimsAccessToken:getApplicationOptionalClaimsAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/getApplicationOptionalClaimsIdToken:getApplicationOptionalClaimsIdToken": {
            "properties": {
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "essential": {
                    "type": "boolean",
                    "description": "Whether the claim specified by the client is necessary to ensure a smooth authorization experience.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "azuread:index/getApplicationRequiredResourceAccess:getApplicationRequiredResourceAccess": {
            "properties": {
                "resourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationRequiredResourceAccessResourceAccess:getApplicationRequiredResourceAccessResourceAccess"
                    },
                    "description": "A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceAppId": {
                    "type": "string",
                    "description": "The unique identifier for the resource that the application requires access to. This is the Application ID of the target application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceAccesses",
                "resourceAppId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationRequiredResourceAccessResourceAccess:getApplicationRequiredResourceAccessResourceAccess": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission` or `AppRole` instances that the resource application exposes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationWeb:getApplicationWeb": {
            "properties": {
                "homepageUrl": {
                    "type": "string",
                    "description": "Home page or landing page of the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "implicitGrants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/getApplicationWebImplicitGrant:getApplicationWebImplicitGrant"
                    },
                    "description": "An `implicit_grant` block as documented above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "homepageUrl",
                "implicitGrants",
                "logoutUrl",
                "redirectUris"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getApplicationWebImplicitGrant:getApplicationWebImplicitGrant": {
            "properties": {
                "accessTokenIssuanceEnabled": {
                    "type": "boolean",
                    "description": "Whether this web application can request an access token using OAuth 2.0 implicit flow.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessTokenIssuanceEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getDomainsDomain:getDomainsDomain": {
            "properties": {
                "authenticationType": {
                    "type": "string",
                    "description": "The authentication type of the domain (Managed or Federated).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "`True` if this is the default domain that is used for user creation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isInitial": {
                    "type": "boolean",
                    "description": "`True` if this is the initial domain created by Azure Active Directory.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isVerified": {
                    "type": "boolean",
                    "description": "`True` if the domain has completed domain ownership verification.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "authenticationType",
                "domainName",
                "isDefault",
                "isInitial",
                "isVerified"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalAppRole:getServicePrincipalAppRole": {
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in daemon service scenarios). Possible values are: `User` and `Application`, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Permission help text that appears in the admin app assignment and consent experiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "The Display Name of the Azure AD Application associated with this Service Principal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "deprecationMessage": "[NOTE] This attribute will be renamed to `enabled` in version 2.0 of the AzureAD provider",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMemberTypes",
                "description",
                "displayName",
                "enabled",
                "id",
                "isEnabled",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalOauth2Permission:getServicePrincipalOauth2Permission": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "The description of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "The description of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "id",
                "isEnabled",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getServicePrincipalOauth2PermissionScope:getServicePrincipalOauth2PermissionScope": {
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "The description of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the admin consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Is this permission enabled?\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for one of the `OAuth2Permission`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "The description of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "The display name of the user consent\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The name of this permission\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "enabled",
                "id",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "azuread:index/getUsersUser:getUsersUser": {
            "properties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "`True` if the account is enabled; otherwise `False`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "The Display Name of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "immutableId": {
                    "type": "string",
                    "description": "(**Deprecated**) The value used to associate an on-premises Active Directory user account with their Azure AD user object. Deprecated in favour of `onpremises_immutable_id`.\n",
                    "deprecationMessage": "This property has been renamed to `onpremises_immutable_id` and will be removed in version 2.0 of the AzureAD provider",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mail": {
                    "type": "string",
                    "description": "The primary email address of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The email alias of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectId": {
                    "type": "string",
                    "description": "The Object ID of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onpremisesImmutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premises Active Directory user account with their Azure AD user object.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onpremisesSamAccountName": {
                    "type": "string",
                    "description": "The on-premise SAM account name of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onpremisesUserPrincipalName": {
                    "type": "string",
                    "description": "The on-premise user principal name of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usageLocation": {
                    "type": "string",
                    "description": "The usage location of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "The User Principal Name of the Azure AD User.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountEnabled",
                "displayName",
                "immutableId",
                "mail",
                "mailNickname",
                "objectId",
                "onpremisesImmutableId",
                "onpremisesSamAccountName",
                "onpremisesUserPrincipalName",
                "usageLocation",
                "userPrincipalName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the azuread package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientCertificatePassword": {
                "type": "string"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used for service principal authentication.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "Disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.\n"
            },
            "environment": {
                "type": "string",
                "description": "The cloud environment which should be used. Possible values are `global` (formerly `public`), `usgovernment`, `dod`,\n`germany`, and `china`. Defaults to `global`.\n"
            },
            "metadataHost": {
                "type": "string",
                "description": "The Hostname which should be used for the Azure Metadata Service.\n",
                "deprecationMessage": "The `metadata_host` provider attribute is deprecated and will be removed in version 2.0"
            },
            "msiEndpoint": {
                "type": "string",
                "description": "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected\nautomatically.\n"
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used. Works with all authentication methods except MSI.\n"
            },
            "useCli": {
                "type": "boolean",
                "description": "Allow Azure CLI to be used for Authentication.\n"
            },
            "useMicrosoftGraph": {
                "type": "boolean",
                "description": "Beta: Use the Microsoft Graph API, instead of the legacy Azure Active Directory Graph API, where supported.\n"
            },
            "useMsi": {
                "type": "boolean",
                "description": "Allow Managed Service Identity to be used for Authentication.\n"
            }
        },
        "required": [
            "metadataHost"
        ],
        "inputProperties": {
            "clientCertificatePassword": {
                "type": "string"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used for service principal authentication.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "Disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.\n"
            },
            "environment": {
                "type": "string",
                "description": "The cloud environment which should be used. Possible values are `global` (formerly `public`), `usgovernment`, `dod`,\n`germany`, and `china`. Defaults to `global`.\n",
                "default": "public",
                "defaultInfo": {
                    "environment": [
                        "ARM_ENVIRONMENT"
                    ]
                }
            },
            "metadataHost": {
                "type": "string",
                "description": "The Hostname which should be used for the Azure Metadata Service.\n",
                "deprecationMessage": "The `metadata_host` provider attribute is deprecated and will be removed in version 2.0"
            },
            "msiEndpoint": {
                "type": "string",
                "description": "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected\nautomatically.\n",
                "defaultInfo": {
                    "environment": [
                        "ARM_MSI_ENDPOINT"
                    ]
                }
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used. Works with all authentication methods except MSI.\n"
            },
            "useCli": {
                "type": "boolean",
                "description": "Allow Azure CLI to be used for Authentication.\n"
            },
            "useMicrosoftGraph": {
                "type": "boolean",
                "description": "Beta: Use the Microsoft Graph API, instead of the legacy Azure Active Directory Graph API, where supported.\n"
            },
            "useMsi": {
                "type": "boolean",
                "description": "Allow Managed Service Identity to be used for Authentication.\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "ARM_USE_MSI"
                    ]
                }
            }
        },
        "requiredInputs": [
            "metadataHost"
        ]
    },
    "resources": {
        "azuread:index/application:Application": {
            "description": "Manages an Application within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write owned by applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nconst example = new azuread.Application(\"example\", {\n    displayName: \"example\",\n    identifierUris: [\"api://example-app\"],\n    owners: [current.then(current =\u003e current.objectId)],\n    signInAudience: \"AzureADMultipleOrgs\",\n    api: {\n        oauth2PermissionScopes: [\n            {\n                adminConsentDescription: \"Allow the application to access example on behalf of the signed-in user.\",\n                adminConsentDisplayName: \"Access example\",\n                enabled: true,\n                id: \"96183846-204b-4b43-82e1-5d2222eb4b9b\",\n                type: \"User\",\n                userConsentDescription: \"Allow the application to access example on your behalf.\",\n                userConsentDisplayName: \"Access example\",\n                value: \"user_impersonation\",\n            },\n            {\n                adminConsentDescription: \"Administer the example application\",\n                adminConsentDisplayName: \"Administer\",\n                enabled: true,\n                id: \"be98fa3e-ab5b-4b11-83d9-04ba2b7946bc\",\n                type: \"Admin\",\n                value: \"administer\",\n            },\n        ],\n    },\n    appRoles: [{\n        allowedMemberTypes: [\n            \"User\",\n            \"Application\",\n        ],\n        description: \"Admins can manage roles and perform all task actions\",\n        displayName: \"Admin\",\n        isEnabled: true,\n        value: \"admin\",\n    }],\n    optionalClaims: {\n        accessTokens: [\n            {\n                name: \"myclaim\",\n            },\n            {\n                name: \"otherclaim\",\n            },\n        ],\n        idTokens: [{\n            name: \"userclaim\",\n            source: \"user\",\n            essential: true,\n            additionalProperties: [\"emit_as_roles\"],\n        }],\n    },\n    requiredResourceAccesses: [\n        {\n            resourceAppId: \"00000003-0000-0000-c000-000000000000\",\n            resourceAccesses: [\n                {\n                    id: \"...\",\n                    type: \"Role\",\n                },\n                {\n                    id: \"...\",\n                    type: \"Scope\",\n                },\n                {\n                    id: \"...\",\n                    type: \"Scope\",\n                },\n            ],\n        },\n        {\n            resourceAppId: \"00000002-0000-0000-c000-000000000000\",\n            resourceAccesses: [{\n                id: \"...\",\n                type: \"Scope\",\n            }],\n        },\n    ],\n    web: {\n        homepageUrl: \"https://app.example.net\",\n        logoutUrl: \"https://app.example.net/logout\",\n        redirectUris: [\"https://app.example.net/account\"],\n        implicitGrant: {\n            accessTokenIssuanceEnabled: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\nexample = azuread.Application(\"example\",\n    display_name=\"example\",\n    identifier_uris=[\"api://example-app\"],\n    owners=[current.object_id],\n    sign_in_audience=\"AzureADMultipleOrgs\",\n    api=azuread.ApplicationApiArgs(\n        oauth2_permission_scopes=[\n            {\n                \"admin_consent_description\": \"Allow the application to access example on behalf of the signed-in user.\",\n                \"admin_consent_display_name\": \"Access example\",\n                \"enabled\": True,\n                \"id\": \"96183846-204b-4b43-82e1-5d2222eb4b9b\",\n                \"type\": \"User\",\n                \"user_consent_description\": \"Allow the application to access example on your behalf.\",\n                \"user_consent_display_name\": \"Access example\",\n                \"value\": \"user_impersonation\",\n            },\n            {\n                \"admin_consent_description\": \"Administer the example application\",\n                \"admin_consent_display_name\": \"Administer\",\n                \"enabled\": True,\n                \"id\": \"be98fa3e-ab5b-4b11-83d9-04ba2b7946bc\",\n                \"type\": \"Admin\",\n                \"value\": \"administer\",\n            },\n        ],\n    ),\n    app_roles=[azuread.ApplicationAppRoleArgs(\n        allowed_member_types=[\n            \"User\",\n            \"Application\",\n        ],\n        description=\"Admins can manage roles and perform all task actions\",\n        display_name=\"Admin\",\n        is_enabled=True,\n        value=\"admin\",\n    )],\n    optional_claims=azuread.ApplicationOptionalClaimsArgs(\n        access_tokens=[\n            azuread.ApplicationOptionalClaimsAccessTokenArgs(\n                name=\"myclaim\",\n            ),\n            azuread.ApplicationOptionalClaimsAccessTokenArgs(\n                name=\"otherclaim\",\n            ),\n        ],\n        id_tokens=[azuread.ApplicationOptionalClaimsIdTokenArgs(\n            name=\"userclaim\",\n            source=\"user\",\n            essential=True,\n            additional_properties=[\"emit_as_roles\"],\n        )],\n    ),\n    required_resource_accesses=[\n        azuread.ApplicationRequiredResourceAccessArgs(\n            resource_app_id=\"00000003-0000-0000-c000-000000000000\",\n            resource_accesses=[\n                azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                    id=\"...\",\n                    type=\"Role\",\n                ),\n                azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                    id=\"...\",\n                    type=\"Scope\",\n                ),\n                azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                    id=\"...\",\n                    type=\"Scope\",\n                ),\n            ],\n        ),\n        azuread.ApplicationRequiredResourceAccessArgs(\n            resource_app_id=\"00000002-0000-0000-c000-000000000000\",\n            resource_accesses=[azuread.ApplicationRequiredResourceAccessResourceAccessArgs(\n                id=\"...\",\n                type=\"Scope\",\n            )],\n        ),\n    ],\n    web=azuread.ApplicationWebArgs(\n        homepage_url=\"https://app.example.net\",\n        logout_url=\"https://app.example.net/logout\",\n        redirect_uris=[\"https://app.example.net/account\"],\n        implicit_grant=azuread.ApplicationWebImplicitGrantArgs(\n            access_token_issuance_enabled=True,\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        var example = new AzureAD.Application(\"example\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            IdentifierUris = \n            {\n                \"api://example-app\",\n            },\n            Owners = \n            {\n                current.Apply(current =\u003e current.ObjectId),\n            },\n            SignInAudience = \"AzureADMultipleOrgs\",\n            Api = new AzureAD.Inputs.ApplicationApiArgs\n            {\n                Oauth2PermissionScopes = \n                {\n                    new AzureAD.Inputs.ApplicationApiOauth2PermissionScopeArgs\n                    {\n                        AdminConsentDescription = \"Allow the application to access example on behalf of the signed-in user.\",\n                        AdminConsentDisplayName = \"Access example\",\n                        Enabled = true,\n                        Id = \"96183846-204b-4b43-82e1-5d2222eb4b9b\",\n                        Type = \"User\",\n                        UserConsentDescription = \"Allow the application to access example on your behalf.\",\n                        UserConsentDisplayName = \"Access example\",\n                        Value = \"user_impersonation\",\n                    },\n                    new AzureAD.Inputs.ApplicationApiOauth2PermissionScopeArgs\n                    {\n                        AdminConsentDescription = \"Administer the example application\",\n                        AdminConsentDisplayName = \"Administer\",\n                        Enabled = true,\n                        Id = \"be98fa3e-ab5b-4b11-83d9-04ba2b7946bc\",\n                        Type = \"Admin\",\n                        Value = \"administer\",\n                    },\n                },\n            },\n            AppRoles = \n            {\n                new AzureAD.Inputs.ApplicationAppRoleArgs\n                {\n                    AllowedMemberTypes = \n                    {\n                        \"User\",\n                        \"Application\",\n                    },\n                    Description = \"Admins can manage roles and perform all task actions\",\n                    DisplayName = \"Admin\",\n                    IsEnabled = true,\n                    Value = \"admin\",\n                },\n            },\n            OptionalClaims = new AzureAD.Inputs.ApplicationOptionalClaimsArgs\n            {\n                AccessTokens = \n                {\n                    new AzureAD.Inputs.ApplicationOptionalClaimsAccessTokenArgs\n                    {\n                        Name = \"myclaim\",\n                    },\n                    new AzureAD.Inputs.ApplicationOptionalClaimsAccessTokenArgs\n                    {\n                        Name = \"otherclaim\",\n                    },\n                },\n                IdTokens = \n                {\n                    new AzureAD.Inputs.ApplicationOptionalClaimsIdTokenArgs\n                    {\n                        Name = \"userclaim\",\n                        Source = \"user\",\n                        Essential = true,\n                        AdditionalProperties = \n                        {\n                            \"emit_as_roles\",\n                        },\n                    },\n                },\n            },\n            RequiredResourceAccesses = \n            {\n                new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs\n                {\n                    ResourceAppId = \"00000003-0000-0000-c000-000000000000\",\n                    ResourceAccesses = \n                    {\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = \"...\",\n                            Type = \"Role\",\n                        },\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = \"...\",\n                            Type = \"Scope\",\n                        },\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = \"...\",\n                            Type = \"Scope\",\n                        },\n                    },\n                },\n                new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs\n                {\n                    ResourceAppId = \"00000002-0000-0000-c000-000000000000\",\n                    ResourceAccesses = \n                    {\n                        new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs\n                        {\n                            Id = \"...\",\n                            Type = \"Scope\",\n                        },\n                    },\n                },\n            },\n            Web = new AzureAD.Inputs.ApplicationWebArgs\n            {\n                HomepageUrl = \"https://app.example.net\",\n                LogoutUrl = \"https://app.example.net/logout\",\n                RedirectUris = \n                {\n                    \"https://app.example.net/account\",\n                },\n                ImplicitGrant = new AzureAD.Inputs.ApplicationWebImplicitGrantArgs\n                {\n                    AccessTokenIssuanceEnabled = true,\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewApplication(ctx, \"example\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tIdentifierUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"api://example-app\"),\n\t\t\t},\n\t\t\tOwners: pulumi.StringArray{\n\t\t\t\tpulumi.String(current.ObjectId),\n\t\t\t},\n\t\t\tSignInAudience: pulumi.String(\"AzureADMultipleOrgs\"),\n\t\t\tApi: \u0026azuread.ApplicationApiArgs{\n\t\t\t\tOauth2PermissionScopes: azuread.ApplicationApiOauth2PermissionScopeArray{\n\t\t\t\t\t\u0026azuread.ApplicationApiOauth2PermissionScopeArgs{\n\t\t\t\t\t\tAdminConsentDescription: pulumi.String(\"Allow the application to access example on behalf of the signed-in user.\"),\n\t\t\t\t\t\tAdminConsentDisplayName: pulumi.String(\"Access example\"),\n\t\t\t\t\t\tEnabled:                 pulumi.Bool(true),\n\t\t\t\t\t\tId:                      pulumi.String(\"96183846-204b-4b43-82e1-5d2222eb4b9b\"),\n\t\t\t\t\t\tType:                    pulumi.String(\"User\"),\n\t\t\t\t\t\tUserConsentDescription:  pulumi.String(\"Allow the application to access example on your behalf.\"),\n\t\t\t\t\t\tUserConsentDisplayName:  pulumi.String(\"Access example\"),\n\t\t\t\t\t\tValue:                   pulumi.String(\"user_impersonation\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026azuread.ApplicationApiOauth2PermissionScopeArgs{\n\t\t\t\t\t\tAdminConsentDescription: pulumi.String(\"Administer the example application\"),\n\t\t\t\t\t\tAdminConsentDisplayName: pulumi.String(\"Administer\"),\n\t\t\t\t\t\tEnabled:                 pulumi.Bool(true),\n\t\t\t\t\t\tId:                      pulumi.String(\"be98fa3e-ab5b-4b11-83d9-04ba2b7946bc\"),\n\t\t\t\t\t\tType:                    pulumi.String(\"Admin\"),\n\t\t\t\t\t\tValue:                   pulumi.String(\"administer\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tAppRoles: azuread.ApplicationAppRoleArray{\n\t\t\t\t\u0026azuread.ApplicationAppRoleArgs{\n\t\t\t\t\tAllowedMemberTypes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"User\"),\n\t\t\t\t\t\tpulumi.String(\"Application\"),\n\t\t\t\t\t},\n\t\t\t\t\tDescription: pulumi.String(\"Admins can manage roles and perform all task actions\"),\n\t\t\t\t\tDisplayName: pulumi.String(\"Admin\"),\n\t\t\t\t\tIsEnabled:   pulumi.Bool(true),\n\t\t\t\t\tValue:       pulumi.String(\"admin\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionalClaims: \u0026azuread.ApplicationOptionalClaimsArgs{\n\t\t\t\tAccessTokens: azuread.ApplicationOptionalClaimsAccessTokenArray{\n\t\t\t\t\t\u0026azuread.ApplicationOptionalClaimsAccessTokenArgs{\n\t\t\t\t\t\tName: pulumi.String(\"myclaim\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026azuread.ApplicationOptionalClaimsAccessTokenArgs{\n\t\t\t\t\t\tName: pulumi.String(\"otherclaim\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tIdTokens: azuread.ApplicationOptionalClaimsIdTokenArray{\n\t\t\t\t\t\u0026azuread.ApplicationOptionalClaimsIdTokenArgs{\n\t\t\t\t\t\tName:      pulumi.String(\"userclaim\"),\n\t\t\t\t\t\tSource:    pulumi.String(\"user\"),\n\t\t\t\t\t\tEssential: pulumi.Bool(true),\n\t\t\t\t\t\tAdditionalProperties: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"emit_as_roles\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tRequiredResourceAccesses: azuread.ApplicationRequiredResourceAccessArray{\n\t\t\t\t\u0026azuread.ApplicationRequiredResourceAccessArgs{\n\t\t\t\t\tResourceAppId: pulumi.String(\"00000003-0000-0000-c000-000000000000\"),\n\t\t\t\t\tResourceAccesses: azuread.ApplicationRequiredResourceAccessResourceAccessArray{\n\t\t\t\t\t\t\u0026azuread.ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId:   pulumi.String(\"...\"),\n\t\t\t\t\t\t\tType: pulumi.String(\"Role\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026azuread.ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId:   pulumi.String(\"...\"),\n\t\t\t\t\t\t\tType: pulumi.String(\"Scope\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026azuread.ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId:   pulumi.String(\"...\"),\n\t\t\t\t\t\t\tType: pulumi.String(\"Scope\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026azuread.ApplicationRequiredResourceAccessArgs{\n\t\t\t\t\tResourceAppId: pulumi.String(\"00000002-0000-0000-c000-000000000000\"),\n\t\t\t\t\tResourceAccesses: azuread.ApplicationRequiredResourceAccessResourceAccessArray{\n\t\t\t\t\t\t\u0026azuread.ApplicationRequiredResourceAccessResourceAccessArgs{\n\t\t\t\t\t\t\tId:   pulumi.String(\"...\"),\n\t\t\t\t\t\t\tType: pulumi.String(\"Scope\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tWeb: \u0026azuread.ApplicationWebArgs{\n\t\t\t\tHomepageUrl: pulumi.String(\"https://app.example.net\"),\n\t\t\t\tLogoutUrl:   pulumi.String(\"https://app.example.net/logout\"),\n\t\t\t\tRedirectUris: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"https://app.example.net/account\"),\n\t\t\t\t},\n\t\t\t\tImplicitGrant: \u0026azuread.ApplicationWebImplicitGrantArgs{\n\t\t\t\t\tAccessTokenIssuanceEnabled: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Active Directory Applications can be imported using the `object id`, e.g.\n\n```sh\n $ pulumi import azuread:index/application:Application test 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "api": {
                    "$ref": "#/types/azuread:index/ApplicationApi:ApplicationApi",
                    "description": "An `api` block as documented below, which configures API related settings for this Application.\n"
                },
                "appRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationAppRole:ApplicationAppRole"
                    },
                    "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The Application ID (Also called Client ID).\n"
                },
                "availableToOtherTenants": {
                    "type": "boolean",
                    "description": "Is this Azure AD Application available to other tenants? Defaults to `false`. This property is deprecated and has been replaced by the `sign_in_audience` property.\n",
                    "deprecationMessage": "[NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the application.\n"
                },
                "fallbackPublicClientEnabled": {
                    "type": "boolean",
                    "description": "The fallback application type as public client, such as an installed application running on a mobile device. Defaults to `false`.\n"
                },
                "groupMembershipClaims": {
                    "type": "string",
                    "description": "Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Defaults to `SecurityGroup`. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.\n",
                    "deprecationMessage": "[NOTE] This attribute will become a list in version 2.0 of the AzureAD provider"
                },
                "homepage": {
                    "type": "string",
                    "description": "The URL to the application's home page. This property is deprecated and has been replaced by the `homepage_url` property in the `web` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `homepage_url` in the `web` block in version 2.0 of the AzureAD provider"
                },
                "identifierUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The user-defined URI(s) that uniquely identify an application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL of the logout page. This property is deprecated and has been replaced by the `logout_url` property in the `web` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "oauth2AllowImplicitFlow": {
                    "type": "boolean",
                    "description": "Does this Azure AD Application allow OAuth 2.0 implicit flow tokens? Defaults to `false`. This property is deprecated and has been replaced by the `access_token_issuance_enabled` property in the `implicit_grant` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider"
                },
                "oauth2Permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOauth2Permission:ApplicationOauth2Permission"
                    },
                    "description": "A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by `oauth2_permissions` blocks as documented below. This block is deprecated and has been replaced by the `oauth2_permission_scope` block in the `api` block.\n",
                    "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scope` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                },
                "objectId": {
                    "type": "string",
                    "description": "The application's Object ID.\n"
                },
                "optionalClaims": {
                    "$ref": "#/types/azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims",
                    "description": "A collection of `access_token` or `id_token` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error when an existing Application is found with the same name. Defaults to `false`.\n"
                },
                "publicClient": {
                    "type": "boolean",
                    "description": "Is this Azure AD Application a public client? Defaults to `false`. This property is deprecated and has been replaced by the `fallback_public_client_enabled` property.\n",
                    "deprecationMessage": "[NOTE] This legacy attribute will be renamed to `fallback_public_client_enabled` in version 2.0 of the AzureAD provider"
                },
                "replyUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirect_uris` property in the `web` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider"
                },
                "requiredResourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess"
                    },
                    "description": "A collection of `required_resource_access` blocks as documented below.\n"
                },
                "signInAudience": {
                    "type": "string",
                    "description": "The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg` or `AzureADMultipleOrgs`. Defaults to `AzureADMyOrg`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifier_uris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.\n",
                    "deprecationMessage": "[NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider"
                },
                "web": {
                    "$ref": "#/types/azuread:index/ApplicationWeb:ApplicationWeb",
                    "description": "A `web` block as documented below, which configures web related settings for this Application.\n"
                }
            },
            "required": [
                "api",
                "appRoles",
                "applicationId",
                "availableToOtherTenants",
                "displayName",
                "fallbackPublicClientEnabled",
                "homepage",
                "identifierUris",
                "logoutUrl",
                "name",
                "oauth2AllowImplicitFlow",
                "oauth2Permissions",
                "objectId",
                "owners",
                "publicClient",
                "replyUrls",
                "signInAudience",
                "web"
            ],
            "inputProperties": {
                "api": {
                    "$ref": "#/types/azuread:index/ApplicationApi:ApplicationApi",
                    "description": "An `api` block as documented below, which configures API related settings for this Application.\n"
                },
                "appRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationAppRole:ApplicationAppRole"
                    },
                    "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                },
                "availableToOtherTenants": {
                    "type": "boolean",
                    "description": "Is this Azure AD Application available to other tenants? Defaults to `false`. This property is deprecated and has been replaced by the `sign_in_audience` property.\n",
                    "deprecationMessage": "[NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the application.\n"
                },
                "fallbackPublicClientEnabled": {
                    "type": "boolean",
                    "description": "The fallback application type as public client, such as an installed application running on a mobile device. Defaults to `false`.\n"
                },
                "groupMembershipClaims": {
                    "type": "string",
                    "description": "Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Defaults to `SecurityGroup`. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.\n",
                    "deprecationMessage": "[NOTE] This attribute will become a list in version 2.0 of the AzureAD provider"
                },
                "homepage": {
                    "type": "string",
                    "description": "The URL to the application's home page. This property is deprecated and has been replaced by the `homepage_url` property in the `web` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `homepage_url` in the `web` block in version 2.0 of the AzureAD provider"
                },
                "identifierUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The user-defined URI(s) that uniquely identify an application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                },
                "logoutUrl": {
                    "type": "string",
                    "description": "The URL of the logout page. This property is deprecated and has been replaced by the `logout_url` property in the `web` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optional claim.\n",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "oauth2AllowImplicitFlow": {
                    "type": "boolean",
                    "description": "Does this Azure AD Application allow OAuth 2.0 implicit flow tokens? Defaults to `false`. This property is deprecated and has been replaced by the `access_token_issuance_enabled` property in the `implicit_grant` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider"
                },
                "oauth2Permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationOauth2Permission:ApplicationOauth2Permission"
                    },
                    "description": "A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by `oauth2_permissions` blocks as documented below. This block is deprecated and has been replaced by the `oauth2_permission_scope` block in the `api` block.\n",
                    "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scope` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                },
                "optionalClaims": {
                    "$ref": "#/types/azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims",
                    "description": "A collection of `access_token` or `id_token` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error when an existing Application is found with the same name. Defaults to `false`.\n"
                },
                "publicClient": {
                    "type": "boolean",
                    "description": "Is this Azure AD Application a public client? Defaults to `false`. This property is deprecated and has been replaced by the `fallback_public_client_enabled` property.\n",
                    "deprecationMessage": "[NOTE] This legacy attribute will be renamed to `fallback_public_client_enabled` in version 2.0 of the AzureAD provider"
                },
                "replyUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirect_uris` property in the `web` block.\n",
                    "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider"
                },
                "requiredResourceAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess"
                    },
                    "description": "A collection of `required_resource_access` blocks as documented below.\n"
                },
                "signInAudience": {
                    "type": "string",
                    "description": "The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg` or `AzureADMultipleOrgs`. Defaults to `AzureADMyOrg`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifier_uris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.\n",
                    "deprecationMessage": "[NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider"
                },
                "web": {
                    "$ref": "#/types/azuread:index/ApplicationWeb:ApplicationWeb",
                    "description": "A `web` block as documented below, which configures web related settings for this Application.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "api": {
                        "$ref": "#/types/azuread:index/ApplicationApi:ApplicationApi",
                        "description": "An `api` block as documented below, which configures API related settings for this Application.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ApplicationAppRole:ApplicationAppRole"
                        },
                        "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The Application ID (Also called Client ID).\n"
                    },
                    "availableToOtherTenants": {
                        "type": "boolean",
                        "description": "Is this Azure AD Application available to other tenants? Defaults to `false`. This property is deprecated and has been replaced by the `sign_in_audience` property.\n",
                        "deprecationMessage": "[NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the application.\n"
                    },
                    "fallbackPublicClientEnabled": {
                        "type": "boolean",
                        "description": "The fallback application type as public client, such as an installed application running on a mobile device. Defaults to `false`.\n"
                    },
                    "groupMembershipClaims": {
                        "type": "string",
                        "description": "Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Defaults to `SecurityGroup`. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.\n",
                        "deprecationMessage": "[NOTE] This attribute will become a list in version 2.0 of the AzureAD provider"
                    },
                    "homepage": {
                        "type": "string",
                        "description": "The URL to the application's home page. This property is deprecated and has been replaced by the `homepage_url` property in the `web` block.\n",
                        "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `homepage_url` in the `web` block in version 2.0 of the AzureAD provider"
                    },
                    "identifierUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The user-defined URI(s) that uniquely identify an application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The URL of the logout page. This property is deprecated and has been replaced by the `logout_url` property in the `web` block.\n",
                        "deprecationMessage": "[NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the optional claim.\n",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "oauth2AllowImplicitFlow": {
                        "type": "boolean",
                        "description": "Does this Azure AD Application allow OAuth 2.0 implicit flow tokens? Defaults to `false`. This property is deprecated and has been replaced by the `access_token_issuance_enabled` property in the `implicit_grant` block.\n",
                        "deprecationMessage": "[NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider"
                    },
                    "oauth2Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ApplicationOauth2Permission:ApplicationOauth2Permission"
                        },
                        "description": "A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by `oauth2_permissions` blocks as documented below. This block is deprecated and has been replaced by the `oauth2_permission_scope` block in the `api` block.\n",
                        "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scope` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The application's Object ID.\n"
                    },
                    "optionalClaims": {
                        "$ref": "#/types/azuread:index/ApplicationOptionalClaims:ApplicationOptionalClaims",
                        "description": "A collection of `access_token` or `id_token` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preventDuplicateNames": {
                        "type": "boolean",
                        "description": "If `true`, will return an error when an existing Application is found with the same name. Defaults to `false`.\n"
                    },
                    "publicClient": {
                        "type": "boolean",
                        "description": "Is this Azure AD Application a public client? Defaults to `false`. This property is deprecated and has been replaced by the `fallback_public_client_enabled` property.\n",
                        "deprecationMessage": "[NOTE] This legacy attribute will be renamed to `fallback_public_client_enabled` in version 2.0 of the AzureAD provider"
                    },
                    "replyUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirect_uris` property in the `web` block.\n",
                        "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider"
                    },
                    "requiredResourceAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ApplicationRequiredResourceAccess:ApplicationRequiredResourceAccess"
                        },
                        "description": "A collection of `required_resource_access` blocks as documented below.\n"
                    },
                    "signInAudience": {
                        "type": "string",
                        "description": "The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg` or `AzureADMultipleOrgs`. Defaults to `AzureADMyOrg`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifier_uris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.\n",
                        "deprecationMessage": "[NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "web": {
                        "$ref": "#/types/azuread:index/ApplicationWeb:ApplicationWeb",
                        "description": "A `web` block as documented below, which configures web related settings for this Application.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationAppRole:ApplicationAppRole": {
            "description": "Manages an App Role associated with an Application within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {});\nconst exampleApplicationAppRole = new azuread.ApplicationAppRole(\"exampleApplicationAppRole\", {\n    applicationObjectId: exampleApplication.id,\n    allowedMemberTypes: [\"User\"],\n    description: \"Admins can manage roles and perform all task actions\",\n    displayName: \"Admin\",\n    enabled: true,\n    value: \"administer\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application = azuread.Application(\"exampleApplication\")\nexample_application_app_role = azuread.ApplicationAppRole(\"exampleApplicationAppRole\",\n    application_object_id=example_application.id,\n    allowed_member_types=[\"User\"],\n    description=\"Admins can manage roles and perform all task actions\",\n    display_name=\"Admin\",\n    enabled=True,\n    value=\"administer\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n        });\n        var exampleApplicationAppRole = new AzureAD.ApplicationAppRole(\"exampleApplicationAppRole\", new AzureAD.ApplicationAppRoleArgs\n        {\n            ApplicationObjectId = exampleApplication.Id,\n            AllowedMemberTypes = \n            {\n                \"User\",\n            },\n            Description = \"Admins can manage roles and perform all task actions\",\n            DisplayName = \"Admin\",\n            Enabled = true,\n            Value = \"administer\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewApplicationAppRole(ctx, \"exampleApplicationAppRole\", \u0026azuread.ApplicationAppRoleArgs{\n\t\t\tApplicationObjectId: exampleApplication.ID(),\n\t\t\tAllowedMemberTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"User\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"Admins can manage roles and perform all task actions\"),\n\t\t\tDisplayName: pulumi.String(\"Admin\"),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tValue:       pulumi.String(\"administer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nApp Roles can be imported using the `object_id` of an Application and the `id` of the App Role, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationAppRole:ApplicationAppRole test 00000000-0000-0000-0000-000000000000/role/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.\n"
                },
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this App Role should be created. Changing this field forces a new resource to be created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled: Defaults to `true`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                },
                "roleId": {
                    "type": "string",
                    "description": "The unique identifier for the app role. If omitted, a random UUID will be automatically generated. Must be a valid UUID. Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n"
                }
            },
            "required": [
                "allowedMemberTypes",
                "applicationObjectId",
                "description",
                "displayName",
                "roleId"
            ],
            "inputProperties": {
                "allowedMemberTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.\n"
                },
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this App Role should be created. Changing this field forces a new resource to be created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the app role is enabled: Defaults to `true`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                },
                "roleId": {
                    "type": "string",
                    "description": "The unique identifier for the app role. If omitted, a random UUID will be automatically generated. Must be a valid UUID. Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n"
                }
            },
            "requiredInputs": [
                "allowedMemberTypes",
                "applicationObjectId",
                "description",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationAppRole resources.\n",
                "properties": {
                    "allowedMemberTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.\n"
                    },
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Application for which this App Role should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if the app role is enabled: Defaults to `true`.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "The unique identifier for the app role. If omitted, a random UUID will be automatically generated. Must be a valid UUID. Changing this field forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationCertificate:ApplicationCertificate": {
            "description": "Manages a certificate associated with an Application within Azure Active Directory. These are also referred to as client certificates during authentication.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n\n## Import\n\nCertificates can be imported using the `object id` of an Application and the `key id` of the certificate, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationCertificate:ApplicationCertificate test 00000000-0000-0000-0000-000000000000/certificate/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this Certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Certificate is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Certificate is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Certificate. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Certificate is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "required": [
                "applicationObjectId",
                "endDate",
                "keyId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this Certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Certificate is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Certificate is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Certificate. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Certificate is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "requiredInputs": [
                "applicationObjectId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationCertificate resources.\n",
                "properties": {
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Application for which this Certificate should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The End Date which the Certificate is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the Certificate is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A GUID used to uniquely identify this Certificate. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The Start Date which the Certificate is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationOAuth2Permission:ApplicationOAuth2Permission": {
            "description": "Manages an OAuth2 Permission (also known as a Scope) associated with an Application within Azure Active Directory.\n\n\u003e This resource is deprecated in favour of azuread.ApplicationOauth2PermissionScope and will be removed in version 2.0 of the provider.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {});\nconst exampleApplicationOAuth2Permission = new azuread.ApplicationOAuth2Permission(\"exampleApplicationOAuth2Permission\", {\n    applicationObjectId: exampleApplication.id,\n    adminConsentDescription: \"Administer the application\",\n    adminConsentDisplayName: \"Administer\",\n    isEnabled: true,\n    type: \"User\",\n    userConsentDescription: \"Administer the application\",\n    userConsentDisplayName: \"Administer\",\n    value: \"administer\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application = azuread.Application(\"exampleApplication\")\nexample_application_o_auth2_permission = azuread.ApplicationOAuth2Permission(\"exampleApplicationOAuth2Permission\",\n    application_object_id=example_application.id,\n    admin_consent_description=\"Administer the application\",\n    admin_consent_display_name=\"Administer\",\n    is_enabled=True,\n    type=\"User\",\n    user_consent_description=\"Administer the application\",\n    user_consent_display_name=\"Administer\",\n    value=\"administer\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n        });\n        var exampleApplicationOAuth2Permission = new AzureAD.ApplicationOAuth2Permission(\"exampleApplicationOAuth2Permission\", new AzureAD.ApplicationOAuth2PermissionArgs\n        {\n            ApplicationObjectId = exampleApplication.Id,\n            AdminConsentDescription = \"Administer the application\",\n            AdminConsentDisplayName = \"Administer\",\n            IsEnabled = true,\n            Type = \"User\",\n            UserConsentDescription = \"Administer the application\",\n            UserConsentDisplayName = \"Administer\",\n            Value = \"administer\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewApplicationOAuth2Permission(ctx, \"exampleApplicationOAuth2Permission\", \u0026azuread.ApplicationOAuth2PermissionArgs{\n\t\t\tApplicationObjectId:     exampleApplication.ID(),\n\t\t\tAdminConsentDescription: pulumi.String(\"Administer the application\"),\n\t\t\tAdminConsentDisplayName: pulumi.String(\"Administer\"),\n\t\t\tIsEnabled:               pulumi.Bool(true),\n\t\t\tType:                    pulumi.String(\"User\"),\n\t\t\tUserConsentDescription:  pulumi.String(\"Administer the application\"),\n\t\t\tUserConsentDisplayName:  pulumi.String(\"Administer\"),\n\t\t\tValue:                   pulumi.String(\"administer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOAuth2 Permissions can be imported using the `object id` of an Application and the `id` of the Permission, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationOAuth2Permission:ApplicationOAuth2Permission test 00000000-0000-0000-0000-000000000000/scope/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Permission help text that appears in the admin consent and app assignment experiences.\n"
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                },
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this Permission should be created. Changing this field forces a new resource to be created.\n"
                },
                "enabled": {
                    "type": "boolean"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Determines if the Permission is enabled. Defaults to `true`.\n",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                },
                "permissionId": {
                    "type": "string",
                    "description": "Specifies a custom UUID for the Permission. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `scope_id` and will be removed in version 2.0 of the AzureAD provider"
                },
                "scopeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether this scope permission can be consented to by an end user, or whether it is a tenant-wide permission that must be consented to by an Administrator. Possible values are \"User\" or \"Admin\".\n"
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Permission help text that appears in the end user consent experience.\n"
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the permission that appears in the end user consent experience.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the scope claim that the resource application should expect in the OAuth 2.0 access token.\n"
                }
            },
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "applicationObjectId",
                "permissionId",
                "scopeId",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "inputProperties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Permission help text that appears in the admin consent and app assignment experiences.\n"
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                },
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this Permission should be created. Changing this field forces a new resource to be created.\n"
                },
                "enabled": {
                    "type": "boolean"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Determines if the Permission is enabled. Defaults to `true`.\n",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                },
                "permissionId": {
                    "type": "string",
                    "description": "Specifies a custom UUID for the Permission. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `scope_id` and will be removed in version 2.0 of the AzureAD provider"
                },
                "scopeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies whether this scope permission can be consented to by an end user, or whether it is a tenant-wide permission that must be consented to by an Administrator. Possible values are \"User\" or \"Admin\".\n"
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Permission help text that appears in the end user consent experience.\n"
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the permission that appears in the end user consent experience.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the scope claim that the resource application should expect in the OAuth 2.0 access token.\n"
                }
            },
            "requiredInputs": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "applicationObjectId",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationOAuth2Permission resources.\n",
                "properties": {
                    "adminConsentDescription": {
                        "type": "string",
                        "description": "Permission help text that appears in the admin consent and app assignment experiences.\n"
                    },
                    "adminConsentDisplayName": {
                        "type": "string",
                        "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                    },
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Application for which this Permission should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Determines if the Permission is enabled. Defaults to `true`.\n",
                        "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "permissionId": {
                        "type": "string",
                        "description": "Specifies a custom UUID for the Permission. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n",
                        "deprecationMessage": "[NOTE] This attribute has been renamed to `scope_id` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "scopeId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Specifies whether this scope permission can be consented to by an end user, or whether it is a tenant-wide permission that must be consented to by an Administrator. Possible values are \"User\" or \"Admin\".\n"
                    },
                    "userConsentDescription": {
                        "type": "string",
                        "description": "Permission help text that appears in the end user consent experience.\n"
                    },
                    "userConsentDisplayName": {
                        "type": "string",
                        "description": "Display name for the permission that appears in the end user consent experience.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the scope claim that the resource application should expect in the OAuth 2.0 access token.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationOauth2PermissionScope:ApplicationOauth2PermissionScope": {
            "description": "Manages an OAuth 2.0 Permission Scope associated with an application.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {});\nconst exampleApplicationOauth2PermissionScope = new azuread.ApplicationOauth2PermissionScope(\"exampleApplicationOauth2PermissionScope\", {\n    applicationObjectId: exampleApplication.id,\n    adminConsentDescription: \"Administer the application\",\n    adminConsentDisplayName: \"Administer\",\n    enabled: true,\n    type: \"User\",\n    userConsentDescription: \"Administer the application\",\n    userConsentDisplayName: \"Administer\",\n    value: \"administer\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application = azuread.Application(\"exampleApplication\")\nexample_application_oauth2_permission_scope = azuread.ApplicationOauth2PermissionScope(\"exampleApplicationOauth2PermissionScope\",\n    application_object_id=example_application.id,\n    admin_consent_description=\"Administer the application\",\n    admin_consent_display_name=\"Administer\",\n    enabled=True,\n    type=\"User\",\n    user_consent_description=\"Administer the application\",\n    user_consent_display_name=\"Administer\",\n    value=\"administer\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n        });\n        var exampleApplicationOauth2PermissionScope = new AzureAD.ApplicationOauth2PermissionScope(\"exampleApplicationOauth2PermissionScope\", new AzureAD.ApplicationOauth2PermissionScopeArgs\n        {\n            ApplicationObjectId = exampleApplication.Id,\n            AdminConsentDescription = \"Administer the application\",\n            AdminConsentDisplayName = \"Administer\",\n            Enabled = true,\n            Type = \"User\",\n            UserConsentDescription = \"Administer the application\",\n            UserConsentDisplayName = \"Administer\",\n            Value = \"administer\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewApplicationOauth2PermissionScope(ctx, \"exampleApplicationOauth2PermissionScope\", \u0026azuread.ApplicationOauth2PermissionScopeArgs{\n\t\t\tApplicationObjectId:     exampleApplication.ID(),\n\t\t\tAdminConsentDescription: pulumi.String(\"Administer the application\"),\n\t\t\tAdminConsentDisplayName: pulumi.String(\"Administer\"),\n\t\t\tEnabled:                 pulumi.Bool(true),\n\t\t\tType:                    pulumi.String(\"User\"),\n\t\t\tUserConsentDescription:  pulumi.String(\"Administer the application\"),\n\t\t\tUserConsentDisplayName:  pulumi.String(\"Administer\"),\n\t\t\tValue:                   pulumi.String(\"administer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOAuth2 Permission Scopes can be imported using the `object_id` of an Application and the `id` of the Permission Scope, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationOauth2PermissionScope:ApplicationOauth2PermissionScope test 00000000-0000-0000-0000-000000000000/scope/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n"
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n"
                },
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this Permission should be created. Changing this field forces a new resource to be created.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the permission scope is enabled. Defaults to `true`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                },
                "permissionId": {
                    "type": "string",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `scope_id` and will be removed in version 2.0 of the AzureAD provider"
                },
                "scopeId": {
                    "type": "string",
                    "description": "Specifies a custom UUID for the permission scope. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.\n"
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n"
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n"
                }
            },
            "required": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "applicationObjectId",
                "permissionId",
                "scopeId",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "inputProperties": {
                "adminConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n"
                },
                "adminConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n"
                },
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this Permission should be created. Changing this field forces a new resource to be created.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Determines if the permission scope is enabled. Defaults to `true`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                },
                "permissionId": {
                    "type": "string",
                    "deprecationMessage": "[NOTE] This attribute has been renamed to `scope_id` and will be removed in version 2.0 of the AzureAD provider"
                },
                "scopeId": {
                    "type": "string",
                    "description": "Specifies a custom UUID for the permission scope. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.\n"
                },
                "userConsentDescription": {
                    "type": "string",
                    "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n"
                },
                "userConsentDisplayName": {
                    "type": "string",
                    "description": "Display name for the delegated permission that appears in the end user consent experience.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n"
                }
            },
            "requiredInputs": [
                "adminConsentDescription",
                "adminConsentDisplayName",
                "applicationObjectId",
                "type",
                "userConsentDescription",
                "userConsentDisplayName",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationOauth2PermissionScope resources.\n",
                "properties": {
                    "adminConsentDescription": {
                        "type": "string",
                        "description": "Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.\n"
                    },
                    "adminConsentDisplayName": {
                        "type": "string",
                        "description": "Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.\n"
                    },
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Application for which this Permission should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if the permission scope is enabled. Defaults to `true`.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "deprecationMessage": "[NOTE] This attribute has been renamed to `enabled` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "permissionId": {
                        "type": "string",
                        "deprecationMessage": "[NOTE] This attribute has been renamed to `scope_id` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "Specifies a custom UUID for the permission scope. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.\n"
                    },
                    "userConsentDescription": {
                        "type": "string",
                        "description": "Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.\n"
                    },
                    "userConsentDisplayName": {
                        "type": "string",
                        "description": "Display name for the delegated permission that appears in the end user consent experience.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value that is used for the `scp` claim in OAuth 2.0 access tokens.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/applicationPassword:ApplicationPassword": {
            "description": "Manages a password credential associated with an application within Azure Active Directory. These are also referred to as client secrets during authentication.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {});\nconst exampleApplicationPassword = new azuread.ApplicationPassword(\"exampleApplicationPassword\", {applicationObjectId: exampleApplication.objectId});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application = azuread.Application(\"exampleApplication\")\nexample_application_password = azuread.ApplicationPassword(\"exampleApplicationPassword\", application_object_id=example_application.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n        });\n        var exampleApplicationPassword = new AzureAD.ApplicationPassword(\"exampleApplicationPassword\", new AzureAD.ApplicationPasswordArgs\n        {\n            ApplicationObjectId = exampleApplication.ObjectId,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewApplicationPassword(ctx, \"exampleApplicationPassword\", \u0026azuread.ApplicationPasswordArgs{\n\t\t\tApplicationObjectId: exampleApplication.ObjectId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPasswords can be imported using the `object id` of an Application and the `key id` of the password, e.g.\n\n```sh\n $ pulumi import azuread:index/applicationPassword:ApplicationPassword test 00000000-0000-0000-0000-000000000000/password/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "description": {
                    "type": "string",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "displayName": {
                    "type": "string",
                    "description": "A display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Password. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The Password for this Application.\n",
                    "deprecationMessage": "[NOTE] In version 2.0 of the AzureAD provider, this attribute will become read-only as it will no longer be possible to specify a password value. It will be generated by Azure Active Directory and persisted to state for reuse in your Terraform configuration."
                }
            },
            "required": [
                "applicationObjectId",
                "description",
                "displayName",
                "endDate",
                "keyId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "applicationObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Application for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "description": {
                    "type": "string",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "displayName": {
                    "type": "string",
                    "description": "A display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Password. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The Password for this Application.\n",
                    "deprecationMessage": "[NOTE] In version 2.0 of the AzureAD provider, this attribute will become read-only as it will no longer be possible to specify a password value. It will be generated by Azure Active Directory and persisted to state for reuse in your Terraform configuration."
                }
            },
            "requiredInputs": [
                "applicationObjectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationPassword resources.\n",
                "properties": {
                    "applicationObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Application for which this password should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "description": {
                        "type": "string",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "A display name for the password.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the Password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A GUID used to uniquely identify this Password. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The Password for this Application.\n",
                        "deprecationMessage": "[NOTE] In version 2.0 of the AzureAD provider, this attribute will become read-only as it will no longer be possible to specify a password value. It will be generated by Azure Active Directory and persisted to state for reuse in your Terraform configuration."
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/group:Group": {
            "description": "Manages a Group within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read and write all groups` within the `Windows Azure Active Directory` API. In addition it must also have either the `Groups Administrator` or `User Administrator` Azure Active Directory roles assigned in order to be able to delete groups. You can assign one of the required Azure Active Directory Roles with the **AzureAD PowerShell Module**, which is available for Windows PowerShell or in the Azure Cloud Shell. Please refer to [this documentation](https://docs.microsoft.com/en-us/powershell/module/azuread/add-azureaddirectoryrolemember) for more details.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n*Basic example*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.Group(\"example\", {\n    displayName: \"A-AD-Group\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.Group(\"example\", display_name=\"A-AD-Group\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.Group(\"example\", new AzureAD.GroupArgs\n        {\n            DisplayName = \"A-AD-Group\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewGroup(ctx, \"example\", \u0026azuread.GroupArgs{\n\t\t\tDisplayName: pulumi.String(\"A-AD-Group\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n*A group with members*\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleUser = new azuread.User(\"exampleUser\", {\n    displayName: \"J Doe\",\n    password: \"notSecure123\",\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\nconst exampleGroup = new azuread.Group(\"exampleGroup\", {\n    displayName: \"MyGroup\",\n    members: [exampleUser.objectId],\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_user = azuread.User(\"exampleUser\",\n    display_name=\"J Doe\",\n    password=\"notSecure123\",\n    user_principal_name=\"jdoe@hashicorp.com\")\nexample_group = azuread.Group(\"exampleGroup\",\n    display_name=\"MyGroup\",\n    members=[example_user.object_id])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleUser = new AzureAD.User(\"exampleUser\", new AzureAD.UserArgs\n        {\n            DisplayName = \"J Doe\",\n            Password = \"notSecure123\",\n            UserPrincipalName = \"jdoe@hashicorp.com\",\n        });\n        var exampleGroup = new AzureAD.Group(\"exampleGroup\", new AzureAD.GroupArgs\n        {\n            DisplayName = \"MyGroup\",\n            Members = \n            {\n                exampleUser.ObjectId,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleUser, err := azuread.NewUser(ctx, \"exampleUser\", \u0026azuread.UserArgs{\n\t\t\tDisplayName:       pulumi.String(\"J Doe\"),\n\t\t\tPassword:          pulumi.String(\"notSecure123\"),\n\t\t\tUserPrincipalName: pulumi.String(\"jdoe@hashicorp.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewGroup(ctx, \"exampleGroup\", \u0026azuread.GroupArgs{\n\t\t\tDisplayName: pulumi.String(\"MyGroup\"),\n\t\t\tMembers: pulumi.StringArray{\n\t\t\t\texampleUser.ObjectId,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Active Directory Groups can be imported using the `object id`, e.g.\n\n```sh\n $ pulumi import azuread:index/group:Group my_group 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description for the Group.  Changing this forces a new resource to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the Group. Changing this forces a new resource to be created.\n"
                },
                "mailEnabled": {
                    "type": "boolean",
                    "description": "Whether the group is mail-enabled.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of members who should be present in this Group. Supported Object types are Users, Groups or Service Principals.\n"
                },
                "name": {
                    "type": "string",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "objectId": {
                    "type": "string",
                    "description": "The Object ID of the Group.\n"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of owners who own this Group. Supported Object types are Users or Service Principals.\n"
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error when an existing Group is found with the same name. Defaults to `false`.\n"
                },
                "securityEnabled": {
                    "type": "boolean",
                    "description": "Whether the group is a security group.\n"
                }
            },
            "required": [
                "displayName",
                "mailEnabled",
                "members",
                "name",
                "objectId",
                "owners",
                "securityEnabled"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description for the Group.  Changing this forces a new resource to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the Group. Changing this forces a new resource to be created.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of members who should be present in this Group. Supported Object types are Users, Groups or Service Principals.\n"
                },
                "name": {
                    "type": "string",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of owners who own this Group. Supported Object types are Users or Service Principals.\n"
                },
                "preventDuplicateNames": {
                    "type": "boolean",
                    "description": "If `true`, will return an error when an existing Group is found with the same name. Defaults to `false`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description for the Group.  Changing this forces a new resource to be created.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the Group. Changing this forces a new resource to be created.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is mail-enabled.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of members who should be present in this Group. Supported Object types are Users, Groups or Service Principals.\n"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The Object ID of the Group.\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of owners who own this Group. Supported Object types are Users or Service Principals.\n"
                    },
                    "preventDuplicateNames": {
                        "type": "boolean",
                        "description": "If `true`, will return an error when an existing Group is found with the same name. Defaults to `false`.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a security group.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/groupMember:GroupMember": {
            "description": "Manages a single Group Membership within Azure Active Directory.\n\n\u003e **NOTE:** Do not use this resource at the same time as `azuread_group.members`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleUser = azuread.getUser({\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\nconst exampleGroup = new azuread.Group(\"exampleGroup\", {});\nconst exampleGroupMember = new azuread.GroupMember(\"exampleGroupMember\", {\n    groupObjectId: exampleGroup.id,\n    memberObjectId: exampleUser.then(exampleUser =\u003e exampleUser.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_user = azuread.get_user(user_principal_name=\"jdoe@hashicorp.com\")\nexample_group = azuread.Group(\"exampleGroup\")\nexample_group_member = azuread.GroupMember(\"exampleGroupMember\",\n    group_object_id=example_group.id,\n    member_object_id=example_user.id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleUser = Output.Create(AzureAD.GetUser.InvokeAsync(new AzureAD.GetUserArgs\n        {\n            UserPrincipalName = \"jdoe@hashicorp.com\",\n        }));\n        var exampleGroup = new AzureAD.Group(\"exampleGroup\", new AzureAD.GroupArgs\n        {\n        });\n        var exampleGroupMember = new AzureAD.GroupMember(\"exampleGroupMember\", new AzureAD.GroupMemberArgs\n        {\n            GroupObjectId = exampleGroup.Id,\n            MemberObjectId = exampleUser.Apply(exampleUser =\u003e exampleUser.Id),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"jdoe@hashicorp.com\"\n\t\texampleUser, err := azuread.LookupUser(ctx, \u0026azuread.LookupUserArgs{\n\t\t\tUserPrincipalName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleGroup, err := azuread.NewGroup(ctx, \"exampleGroup\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewGroupMember(ctx, \"exampleGroupMember\", \u0026azuread.GroupMemberArgs{\n\t\t\tGroupObjectId:  exampleGroup.ID(),\n\t\t\tMemberObjectId: pulumi.String(exampleUser.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Active Directory Group Members can be imported using the `object id`, e.g.\n\n```sh\n $ pulumi import azuread:index/groupMember:GroupMember test 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "groupObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Azure AD Group you want to add the Member to.  Changing this forces a new resource to be created.\n"
                },
                "memberObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Azure AD Object you want to add as a Member to the Group. Supported Object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                }
            },
            "required": [
                "groupObjectId",
                "memberObjectId"
            ],
            "inputProperties": {
                "groupObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Azure AD Group you want to add the Member to.  Changing this forces a new resource to be created.\n"
                },
                "memberObjectId": {
                    "type": "string",
                    "description": "The Object ID of the Azure AD Object you want to add as a Member to the Group. Supported Object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                }
            },
            "requiredInputs": [
                "groupObjectId",
                "memberObjectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupMember resources.\n",
                "properties": {
                    "groupObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Azure AD Group you want to add the Member to.  Changing this forces a new resource to be created.\n"
                    },
                    "memberObjectId": {
                        "type": "string",
                        "description": "The Object ID of the Azure AD Object you want to add as a Member to the Group. Supported Object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/servicePrincipal:ServicePrincipal": {
            "description": "Manages a Service Principal associated with an Application within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API. Please see The Granting a Service Principal permission to manage AAD for the required steps.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {\n    displayName: \"example\",\n    homepage: \"http://homepage\",\n    identifierUris: [\"http://uri\"],\n    replyUrls: [\"http://replyurl\"],\n    availableToOtherTenants: false,\n    oauth2AllowImplicitFlow: true,\n});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {\n    applicationId: exampleApplication.applicationId,\n    appRoleAssignmentRequired: false,\n    tags: [\n        \"example\",\n        \"tags\",\n        \"here\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application = azuread.Application(\"exampleApplication\",\n    display_name=\"example\",\n    homepage=\"http://homepage\",\n    identifier_uris=[\"http://uri\"],\n    reply_urls=[\"http://replyurl\"],\n    available_to_other_tenants=False,\n    oauth2_allow_implicit_flow=True)\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\",\n    application_id=example_application.application_id,\n    app_role_assignment_required=False,\n    tags=[\n        \"example\",\n        \"tags\",\n        \"here\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n            DisplayName = \"example\",\n            Homepage = \"http://homepage\",\n            IdentifierUris = \n            {\n                \"http://uri\",\n            },\n            ReplyUrls = \n            {\n                \"http://replyurl\",\n            },\n            AvailableToOtherTenants = false,\n            Oauth2AllowImplicitFlow = true,\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n            AppRoleAssignmentRequired = false,\n            Tags = \n            {\n                \"example\",\n                \"tags\",\n                \"here\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", \u0026azuread.ApplicationArgs{\n\t\t\tDisplayName: pulumi.String(\"example\"),\n\t\t\tHomepage:    pulumi.String(\"http://homepage\"),\n\t\t\tIdentifierUris: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http://uri\"),\n\t\t\t},\n\t\t\tReplyUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http://replyurl\"),\n\t\t\t},\n\t\t\tAvailableToOtherTenants: pulumi.Bool(false),\n\t\t\tOauth2AllowImplicitFlow: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId:             exampleApplication.ApplicationId,\n\t\t\tAppRoleAssignmentRequired: pulumi.Bool(false),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"example\"),\n\t\t\t\tpulumi.String(\"tags\"),\n\t\t\t\tpulumi.String(\"here\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Active Directory Service Principals can be imported using the `object id`, e.g.\n\n```sh\n $ pulumi import azuread:index/servicePrincipal:ServicePrincipal test 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "appRoleAssignmentRequired": {
                    "type": "boolean",
                    "description": "Whether this Service Principal requires an AppRoleAssignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to `false`.\n"
                },
                "appRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalAppRole:ServicePrincipalAppRole"
                    },
                    "description": "A collection of `app_roles` blocks as documented below. For more information [official documentation](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The App ID of the Application for which to create a Service Principal.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                },
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope"
                    },
                    "description": "A collection of OAuth 2.0 delegated permissions exposed by the associated Application. Each permission is covered by an `oauth2_permission_scopes` block as documented below.\n"
                },
                "oauth2Permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalOauth2Permission:ServicePrincipalOauth2Permission"
                    },
                    "description": "(**Deprecated**) A collection of OAuth 2.0 permissions exposed by the associated Application. Each permission is covered by an `oauth2_permissions` block as documented below. Deprecated in favour of `oauth2_permission_scopes`.\n",
                    "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                },
                "objectId": {
                    "type": "string",
                    "description": "The Object ID of the Service Principal.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to apply to the Service Principal.\n"
                }
            },
            "required": [
                "appRoles",
                "applicationId",
                "displayName",
                "oauth2PermissionScopes",
                "oauth2Permissions",
                "objectId"
            ],
            "inputProperties": {
                "appRoleAssignmentRequired": {
                    "type": "boolean",
                    "description": "Whether this Service Principal requires an AppRoleAssignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to `false`.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The App ID of the Application for which to create a Service Principal.\n"
                },
                "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope"
                    },
                    "description": "A collection of OAuth 2.0 delegated permissions exposed by the associated Application. Each permission is covered by an `oauth2_permission_scopes` block as documented below.\n"
                },
                "oauth2Permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/azuread:index/ServicePrincipalOauth2Permission:ServicePrincipalOauth2Permission"
                    },
                    "description": "(**Deprecated**) A collection of OAuth 2.0 permissions exposed by the associated Application. Each permission is covered by an `oauth2_permissions` block as documented below. Deprecated in favour of `oauth2_permission_scopes`.\n",
                    "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to apply to the Service Principal.\n"
                }
            },
            "requiredInputs": [
                "applicationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServicePrincipal resources.\n",
                "properties": {
                    "appRoleAssignmentRequired": {
                        "type": "boolean",
                        "description": "Whether this Service Principal requires an AppRoleAssignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to `false`.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ServicePrincipalAppRole:ServicePrincipalAppRole"
                        },
                        "description": "A collection of `app_roles` blocks as documented below. For more information [official documentation](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The App ID of the Application for which to create a Service Principal.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                    },
                    "oauth2PermissionScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ServicePrincipalOauth2PermissionScope:ServicePrincipalOauth2PermissionScope"
                        },
                        "description": "A collection of OAuth 2.0 delegated permissions exposed by the associated Application. Each permission is covered by an `oauth2_permission_scopes` block as documented below.\n"
                    },
                    "oauth2Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/ServicePrincipalOauth2Permission:ServicePrincipalOauth2Permission"
                        },
                        "description": "(**Deprecated**) A collection of OAuth 2.0 permissions exposed by the associated Application. Each permission is covered by an `oauth2_permissions` block as documented below. Deprecated in favour of `oauth2_permission_scopes`.\n",
                        "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The Object ID of the Service Principal.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to apply to the Service Principal.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/servicePrincipalCertificate:ServicePrincipalCertificate": {
            "description": "Manages a certificate associated with a Service Principal within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n\n## Import\n\nCertificates can be imported using the `object id` of the Service Principal and the `key id` of the certificate, e.g.\n\n```sh\n $ pulumi import azuread:index/servicePrincipalCertificate:ServicePrincipalCertificate test 00000000-0000-0000-0000-000000000000/certificate/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Certificate is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Certificate is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Certificate. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The ID of the Service Principal for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Certificate is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "required": [
                "endDate",
                "keyId",
                "servicePrincipalId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "encoding": {
                    "type": "string",
                    "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Certificate is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Certificate is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Certificate. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The ID of the Service Principal for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Certificate is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                }
            },
            "requiredInputs": [
                "servicePrincipalId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServicePrincipalCertificate resources.\n",
                "properties": {
                    "encoding": {
                        "type": "string",
                        "description": "Specifies the encoding used for the supplied certificate data. Must be one of `pem`, `base64` or `hex`. Defaults to `pem`.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The End Date which the Certificate is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the Certificate is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A GUID used to uniquely identify this Certificate. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                    },
                    "servicePrincipalId": {
                        "type": "string",
                        "description": "The ID of the Service Principal for which this certificate should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The Start Date which the Certificate is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of key/certificate. Must be one of `AsymmetricX509Cert` or `Symmetric`. Changing this fields forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the `encoding` argument.\n"
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/servicePrincipalPassword:ServicePrincipalPassword": {
            "description": "Manages a password credential associated with a service principal within Azure Active Directory. See also the azuread.ApplicationPassword resource.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst exampleApplication = new azuread.Application(\"exampleApplication\", {});\nconst exampleServicePrincipal = new azuread.ServicePrincipal(\"exampleServicePrincipal\", {applicationId: exampleApplication.applicationId});\nconst exampleServicePrincipalPassword = new azuread.ServicePrincipalPassword(\"exampleServicePrincipalPassword\", {servicePrincipalId: exampleServicePrincipal.objectId});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample_application = azuread.Application(\"exampleApplication\")\nexample_service_principal = azuread.ServicePrincipal(\"exampleServicePrincipal\", application_id=example_application.application_id)\nexample_service_principal_password = azuread.ServicePrincipalPassword(\"exampleServicePrincipalPassword\", service_principal_id=example_service_principal.object_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleApplication = new AzureAD.Application(\"exampleApplication\", new AzureAD.ApplicationArgs\n        {\n        });\n        var exampleServicePrincipal = new AzureAD.ServicePrincipal(\"exampleServicePrincipal\", new AzureAD.ServicePrincipalArgs\n        {\n            ApplicationId = exampleApplication.ApplicationId,\n        });\n        var exampleServicePrincipalPassword = new AzureAD.ServicePrincipalPassword(\"exampleServicePrincipalPassword\", new AzureAD.ServicePrincipalPasswordArgs\n        {\n            ServicePrincipalId = exampleServicePrincipal.ObjectId,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleApplication, err := azuread.NewApplication(ctx, \"exampleApplication\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleServicePrincipal, err := azuread.NewServicePrincipal(ctx, \"exampleServicePrincipal\", \u0026azuread.ServicePrincipalArgs{\n\t\t\tApplicationId: exampleApplication.ApplicationId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = azuread.NewServicePrincipalPassword(ctx, \"exampleServicePrincipalPassword\", \u0026azuread.ServicePrincipalPasswordArgs{\n\t\t\tServicePrincipalId: exampleServicePrincipal.ObjectId,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPasswords can be imported using the `object id` of a Service Principal and the `key id` of the password, e.g.\n\n```sh\n $ pulumi import azuread:index/servicePrincipalPassword:ServicePrincipalPassword test 00000000-0000-0000-0000-000000000000/password/11111111-1111-1111-1111-111111111111\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description for the Password. Deprecated in favour of `display_name`.\n",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Password is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Key. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The ID of the Service Principal for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The Password for this Service Principal.\n",
                    "deprecationMessage": "In version 2.0 of the AzureAD provider, this attribute will become read-only as it will no longer be possible to specify a password value. It will be generated by Azure Active Directory and persisted to state for reuse in your Terraform configuration."
                }
            },
            "required": [
                "description",
                "displayName",
                "endDate",
                "keyId",
                "servicePrincipalId",
                "startDate",
                "value"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description for the Password. Deprecated in favour of `display_name`.\n",
                    "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the password.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                },
                "endDateRelative": {
                    "type": "string",
                    "description": "A relative duration for which the Password is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "A GUID used to uniquely identify this Key. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                },
                "servicePrincipalId": {
                    "type": "string",
                    "description": "The ID of the Service Principal for which this password should be created. Changing this field forces a new resource to be created.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The Password for this Service Principal.\n",
                    "deprecationMessage": "In version 2.0 of the AzureAD provider, this attribute will become read-only as it will no longer be possible to specify a password value. It will be generated by Azure Active Directory and persisted to state for reuse in your Terraform configuration."
                }
            },
            "requiredInputs": [
                "servicePrincipalId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServicePrincipalPassword resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description for the Password. Deprecated in favour of `display_name`.\n",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the password.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.\n"
                    },
                    "endDateRelative": {
                        "type": "string",
                        "description": "A relative duration for which the Password is valid until, for example `240h` (10 days) or `2400h30m`. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". Changing this field forces a new resource to be created.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "A GUID used to uniquely identify this Key. If not specified a GUID will be created. Changing this field forces a new resource to be created.\n"
                    },
                    "servicePrincipalId": {
                        "type": "string",
                        "description": "The ID of the Service Principal for which this password should be created. Changing this field forces a new resource to be created.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The Password for this Service Principal.\n",
                        "deprecationMessage": "In version 2.0 of the AzureAD provider, this attribute will become read-only as it will no longer be possible to specify a password value. It will be generated by Azure Active Directory and persisted to state for reuse in your Terraform configuration."
                    }
                },
                "type": "object"
            }
        },
        "azuread:index/user:User": {
            "description": "Manages a User within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Directory.ReadWrite.All` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = new azuread.User(\"example\", {\n    displayName: \"J. Doe\",\n    mailNickname: \"jdoe\",\n    password: \"SecretP@sswd99!\",\n    userPrincipalName: \"jdoe@hashicorp.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.User(\"example\",\n    display_name=\"J. Doe\",\n    mail_nickname=\"jdoe\",\n    password=\"SecretP@sswd99!\",\n    user_principal_name=\"jdoe@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new AzureAD.User(\"example\", new AzureAD.UserArgs\n        {\n            DisplayName = \"J. Doe\",\n            MailNickname = \"jdoe\",\n            Password = \"SecretP@sswd99!\",\n            UserPrincipalName = \"jdoe@hashicorp.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.NewUser(ctx, \"example\", \u0026azuread.UserArgs{\n\t\t\tDisplayName:       pulumi.String(\"J. Doe\"),\n\t\t\tMailNickname:      pulumi.String(\"jdoe\"),\n\t\t\tPassword:          pulumi.String(\"SecretP@sswd99!\"),\n\t\t\tUserPrincipalName: pulumi.String(\"jdoe@hashicorp.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Active Directory Users can be imported using the `object id`, e.g.\n\n```sh\n $ pulumi import azuread:index/user:User my_user 00000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "`true` if the account should be enabled, otherwise `false`. Defaults to `true`.\n"
                },
                "city": {
                    "type": "string",
                    "description": "The city in which the user is located.\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country/region in which the user is located; for example, “US” or “UK”.\n"
                },
                "department": {
                    "type": "string",
                    "description": "The name for the department in which the user works.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name to display in the address book for the user.\n"
                },
                "forcePasswordChange": {
                    "type": "boolean",
                    "description": "`true` if the User is forced to change the password during the next sign-in. Defaults to `false`.\n"
                },
                "givenName": {
                    "type": "string",
                    "description": "The given name (first name) of the user.\n"
                },
                "immutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. Deprecated in favour of `onpremises_immutable_id`.\n",
                    "deprecationMessage": "This property has been renamed to `onpremises_immutable_id` and will be removed in version 2.0 of the AzureAD provider"
                },
                "jobTitle": {
                    "type": "string",
                    "description": "The user’s job title.\n"
                },
                "mail": {
                    "type": "string",
                    "description": "The primary email address of the User.\n"
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The mail alias for the user. Defaults to the user name part of the User Principal Name.\n"
                },
                "mobile": {
                    "type": "string",
                    "description": "The primary cellular telephone number for the user. Deprecated in favour of `mobile_phone`.\n",
                    "deprecationMessage": "This property has been renamed to `mobile_phone` and will be removed in version 2.0 of the AzureAD provider"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "The primary cellular telephone number for the user.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The Object ID of the User.\n"
                },
                "officeLocation": {
                    "type": "string",
                    "description": "The office location in the user's place of business.\n"
                },
                "onpremisesImmutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account.\n"
                },
                "onpremisesSamAccountName": {
                    "type": "string",
                    "description": "The on-premise SAM account name of the User.\n"
                },
                "onpremisesUserPrincipalName": {
                    "type": "string",
                    "description": "The on-premise user principal name of the User.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the User. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters.\n"
                },
                "physicalDeliveryOfficeName": {
                    "type": "string",
                    "description": "The office location in the user's place of business. Deprecated in favour of `office_location`.\n",
                    "deprecationMessage": "This property has been renamed to `office_location` and will be removed in version 2.0 of the AzureAD provider"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state or province in the user's address.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "The street address of the user's place of business.\n"
                },
                "surname": {
                    "type": "string",
                    "description": "The user's surname (family name or last name).\n"
                },
                "usageLocation": {
                    "type": "string",
                    "description": "The usage location of the User. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set.\n"
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "The User Principal Name of the User.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "The user type in the directory. One of `Guest` or `Member`.\n"
                }
            },
            "required": [
                "city",
                "companyName",
                "country",
                "department",
                "displayName",
                "givenName",
                "immutableId",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobile",
                "mobilePhone",
                "objectId",
                "officeLocation",
                "onpremisesImmutableId",
                "onpremisesSamAccountName",
                "onpremisesUserPrincipalName",
                "password",
                "physicalDeliveryOfficeName",
                "postalCode",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType"
            ],
            "inputProperties": {
                "accountEnabled": {
                    "type": "boolean",
                    "description": "`true` if the account should be enabled, otherwise `false`. Defaults to `true`.\n"
                },
                "city": {
                    "type": "string",
                    "description": "The city in which the user is located.\n"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country/region in which the user is located; for example, “US” or “UK”.\n"
                },
                "department": {
                    "type": "string",
                    "description": "The name for the department in which the user works.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name to display in the address book for the user.\n"
                },
                "forcePasswordChange": {
                    "type": "boolean",
                    "description": "`true` if the User is forced to change the password during the next sign-in. Defaults to `false`.\n"
                },
                "givenName": {
                    "type": "string",
                    "description": "The given name (first name) of the user.\n"
                },
                "immutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. Deprecated in favour of `onpremises_immutable_id`.\n",
                    "deprecationMessage": "This property has been renamed to `onpremises_immutable_id` and will be removed in version 2.0 of the AzureAD provider"
                },
                "jobTitle": {
                    "type": "string",
                    "description": "The user’s job title.\n"
                },
                "mailNickname": {
                    "type": "string",
                    "description": "The mail alias for the user. Defaults to the user name part of the User Principal Name.\n"
                },
                "mobile": {
                    "type": "string",
                    "description": "The primary cellular telephone number for the user. Deprecated in favour of `mobile_phone`.\n",
                    "deprecationMessage": "This property has been renamed to `mobile_phone` and will be removed in version 2.0 of the AzureAD provider"
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "The primary cellular telephone number for the user.\n"
                },
                "officeLocation": {
                    "type": "string",
                    "description": "The office location in the user's place of business.\n"
                },
                "onpremisesImmutableId": {
                    "type": "string",
                    "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the User. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters.\n"
                },
                "physicalDeliveryOfficeName": {
                    "type": "string",
                    "description": "The office location in the user's place of business. Deprecated in favour of `office_location`.\n",
                    "deprecationMessage": "This property has been renamed to `office_location` and will be removed in version 2.0 of the AzureAD provider"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state or province in the user's address.\n"
                },
                "streetAddress": {
                    "type": "string",
                    "description": "The street address of the user's place of business.\n"
                },
                "surname": {
                    "type": "string",
                    "description": "The user's surname (family name or last name).\n"
                },
                "usageLocation": {
                    "type": "string",
                    "description": "The usage location of the User. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set.\n"
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "The User Principal Name of the User.\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "password",
                "userPrincipalName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accountEnabled": {
                        "type": "boolean",
                        "description": "`true` if the account should be enabled, otherwise `false`. Defaults to `true`.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city in which the user is located.\n"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country/region in which the user is located; for example, “US” or “UK”.\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "The name for the department in which the user works.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name to display in the address book for the user.\n"
                    },
                    "forcePasswordChange": {
                        "type": "boolean",
                        "description": "`true` if the User is forced to change the password during the next sign-in. Defaults to `false`.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name (first name) of the user.\n"
                    },
                    "immutableId": {
                        "type": "string",
                        "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. Deprecated in favour of `onpremises_immutable_id`.\n",
                        "deprecationMessage": "This property has been renamed to `onpremises_immutable_id` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "jobTitle": {
                        "type": "string",
                        "description": "The user’s job title.\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "The primary email address of the User.\n"
                    },
                    "mailNickname": {
                        "type": "string",
                        "description": "The mail alias for the user. Defaults to the user name part of the User Principal Name.\n"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "The primary cellular telephone number for the user. Deprecated in favour of `mobile_phone`.\n",
                        "deprecationMessage": "This property has been renamed to `mobile_phone` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "The primary cellular telephone number for the user.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The Object ID of the User.\n"
                    },
                    "officeLocation": {
                        "type": "string",
                        "description": "The office location in the user's place of business.\n"
                    },
                    "onpremisesImmutableId": {
                        "type": "string",
                        "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account.\n"
                    },
                    "onpremisesSamAccountName": {
                        "type": "string",
                        "description": "The on-premise SAM account name of the User.\n"
                    },
                    "onpremisesUserPrincipalName": {
                        "type": "string",
                        "description": "The on-premise user principal name of the User.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the User. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters.\n"
                    },
                    "physicalDeliveryOfficeName": {
                        "type": "string",
                        "description": "The office location in the user's place of business. Deprecated in favour of `office_location`.\n",
                        "deprecationMessage": "This property has been renamed to `office_location` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state or province in the user's address.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "The street address of the user's place of business.\n"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The user's surname (family name or last name).\n"
                    },
                    "usageLocation": {
                        "type": "string",
                        "description": "The usage location of the User. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set.\n"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "description": "The User Principal Name of the User.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "The user type in the directory. One of `Guest` or `Member`.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "azuread:index/getApplication:getApplication": {
            "description": "Use this data source to access information about an existing Application within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all (or owned by) applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = azuread.getApplication({\n    displayName: \"My First AzureAD Application\",\n});\nexport const azureAdObjectId = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_application(display_name=\"My First AzureAD Application\")\npulumi.export(\"azureAdObjectId\", example.id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetApplication.InvokeAsync(new AzureAD.GetApplicationArgs\n        {\n            DisplayName = \"My First AzureAD Application\",\n        }));\n        this.AzureAdObjectId = example.Apply(example =\u003e example.Id);\n    }\n\n    [Output(\"azureAdObjectId\")]\n    public Output\u003cstring\u003e AzureAdObjectId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"My First AzureAD Application\"\n\t\texample, err := azuread.LookupApplication(ctx, \u0026azuread.LookupApplicationArgs{\n\t\t\tDisplayName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"azureAdObjectId\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplication.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Specifies the Application ID (also called Client ID).\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Specifies the display name of the application.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the optional claim.\n",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "oauth2Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationOauth2Permission:getApplicationOauth2Permission"
                        },
                        "description": "(**Deprecated**) A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by a `oauth2_permission` block as documented below.\n",
                        "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the Object ID of the application.\n"
                    },
                    "optionalClaims": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaims:getApplicationOptionalClaims",
                        "description": "A collection of `access_token` or `id_token` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims\n"
                    },
                    "web": {
                        "$ref": "#/types/azuread:index/getApplicationWeb:getApplicationWeb",
                        "description": "A `web` block as documented below.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApplication.\n",
                "properties": {
                    "apis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationApi:getApplicationApi"
                        },
                        "description": "An `api` block as documented below.\n"
                    },
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationAppRole:getApplicationAppRole"
                        },
                        "description": "A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "the Application ID (also called Client ID).\n"
                    },
                    "availableToOtherTenants": {
                        "type": "boolean",
                        "description": "(**Deprecated**) Is this Azure AD Application available to other tenants?\n",
                        "deprecationMessage": "[NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the app role that appears during app role assignment and in consent experiences.\n"
                    },
                    "fallbackPublicClientEnabled": {
                        "type": "boolean",
                        "description": "The fallback application type as public client, such as an installed application running on a mobile device.\n"
                    },
                    "groupMembershipClaims": {
                        "type": "string",
                        "description": "The `groups` claim issued in a user or OAuth 2.0 access token that the app expects.\n"
                    },
                    "homepage": {
                        "type": "string",
                        "description": "(**Deprecated**) The URL to the application's home page. This property is deprecated and has been replaced by the `homepage_url` property in the `web` block.\n",
                        "deprecationMessage": "[NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "identifierUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.\n"
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.\n",
                        "deprecationMessage": "[NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the optional claim.\n",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "oauth2AllowImplicitFlow": {
                        "type": "boolean",
                        "description": "(**Deprecated**) Does this Azure AD Application allow OAuth2.0 implicit flow tokens?\n",
                        "deprecationMessage": "[NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider"
                    },
                    "oauth2Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationOauth2Permission:getApplicationOauth2Permission"
                        },
                        "description": "(**Deprecated**) A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by a `oauth2_permission` block as documented below.\n",
                        "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The application's Object ID.\n"
                    },
                    "optionalClaims": {
                        "$ref": "#/types/azuread:index/getApplicationOptionalClaims:getApplicationOptionalClaims",
                        "description": "A collection of `access_token` or `id_token` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims\n"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of Object IDs for principals that are assigned ownership of the application.\n"
                    },
                    "replyUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(**Deprecated**) A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirect_uris` property in the `web` block.\n",
                        "deprecationMessage": "[NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider"
                    },
                    "requiredResourceAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getApplicationRequiredResourceAccess:getApplicationRequiredResourceAccess"
                        },
                        "description": "A collection of `required_resource_access` blocks as documented below.\n"
                    },
                    "signInAudience": {
                        "type": "string",
                        "description": "The Microsoft account types that are supported for the current application. One of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.\n",
                        "deprecationMessage": "[NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "web": {
                        "$ref": "#/types/azuread:index/getApplicationWeb:getApplicationWeb",
                        "description": "A `web` block as documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "apis",
                    "appRoles",
                    "applicationId",
                    "availableToOtherTenants",
                    "displayName",
                    "fallbackPublicClientEnabled",
                    "groupMembershipClaims",
                    "homepage",
                    "identifierUris",
                    "logoutUrl",
                    "name",
                    "oauth2AllowImplicitFlow",
                    "oauth2Permissions",
                    "objectId",
                    "owners",
                    "replyUrls",
                    "requiredResourceAccesses",
                    "signInAudience",
                    "type",
                    "web",
                    "id"
                ]
            }
        },
        "azuread:index/getClientConfig:getClientConfig": {
            "description": "Use this data source to access the configuration of the AzureAD provider.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst current = azuread.getClientConfig({});\nexport const accountId = current.then(current =\u003e current.clientId);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ncurrent = azuread.get_client_config()\npulumi.export(\"accountId\", current.client_id)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var current = Output.Create(AzureAD.GetClientConfig.InvokeAsync());\n        this.AccountId = current.Apply(current =\u003e current.ClientId);\n    }\n\n    [Output(\"accountId\")]\n    public Output\u003cstring\u003e AccountId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := azuread.GetClientConfig(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"accountId\", current.ClientId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getClientConfig.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clientId",
                    "objectId",
                    "tenantId",
                    "id"
                ]
            }
        },
        "azuread:index/getDomains:getDomains": {
            "description": "Use this data source to access information about existing Domains within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Directory.Read.All` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst aadDomains = azuread.getDomains({});\nexport const domains = aadDomains.then(aadDomains =\u003e aadDomains.domains);\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\naad_domains = azuread.get_domains()\npulumi.export(\"domains\", aad_domains.domains)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var aadDomains = Output.Create(AzureAD.GetDomains.InvokeAsync());\n        this.Domains = aadDomains.Apply(aadDomains =\u003e aadDomains.Domains);\n    }\n\n    [Output(\"domains\")]\n    public Output\u003cstring\u003e Domains { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\taadDomains, err := azuread.GetDomains(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"domains\", aadDomains.Domains)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDomains.\n",
                "properties": {
                    "includeUnverified": {
                        "type": "boolean",
                        "description": "Set to `true` if unverified Azure AD domains should be included. Defaults to `false`.\n"
                    },
                    "onlyDefault": {
                        "type": "boolean",
                        "description": "Set to `true` to only return the default domain.\n"
                    },
                    "onlyInitial": {
                        "type": "boolean",
                        "description": "Set to `true` to only return the initial domain, which is your primary Azure Active Directory tenant domain. Defaults to `false`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomains.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getDomainsDomain:getDomainsDomain"
                        },
                        "description": "A list of domains. Each `domain` object provides the attributes documented below.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeUnverified": {
                        "type": "boolean"
                    },
                    "onlyDefault": {
                        "type": "boolean"
                    },
                    "onlyInitial": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "domains",
                    "id"
                ]
            }
        },
        "azuread:index/getGroup:getGroup": {
            "description": "Gets information about an Azure Active Directory group.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read directory data` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### By Group Display Name)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getGroup({\n    displayName: \"MyGroupName\",\n    securityEnabled: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_group(display_name=\"MyGroupName\",\n    security_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetGroup.InvokeAsync(new AzureAD.GetGroupArgs\n        {\n            DisplayName = \"MyGroupName\",\n            SecurityEnabled = true,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"MyGroupName\"\n\t\topt1 := true\n\t\t_, err := azuread.LookupGroup(ctx, \u0026azuread.LookupGroupArgs{\n\t\t\tDisplayName:     \u0026opt0,\n\t\t\tSecurityEnabled: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the Group.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is mail-enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the Object ID of the Group.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a security group.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The optional description of the Group.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the Group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mailEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is mail-enabled.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Object IDs of the Group members.\n"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Object IDs of the Group owners.\n"
                    },
                    "securityEnabled": {
                        "type": "boolean",
                        "description": "Whether the group is a security group.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "mailEnabled",
                    "members",
                    "name",
                    "objectId",
                    "owners",
                    "securityEnabled",
                    "id"
                ]
            }
        },
        "azuread:index/getGroups:getGroups": {
            "description": "Gets Object IDs or Display Names for multiple Azure Active Directory groups.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read directory data` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst groups = pulumi.output(azuread.getGroups({\n    displayNames: [\n        \"group-a\",\n        \"group-b\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\ngroups = azuread.get_groups(display_names=[\n    \"group-a\",\n    \"group-b\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var groups = Output.Create(AzureAD.GetGroups.InvokeAsync(new AzureAD.GetGroupsArgs\n        {\n            DisplayNames = \n            {\n                \"group-a\",\n                \"group-b\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetGroups(ctx, \u0026azuread.GetGroupsArgs{\n\t\t\tDisplayNames: []string{\n\t\t\t\t\"group-a\",\n\t\t\t\t\"group-b\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGroups.\n",
                "properties": {
                    "displayNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Display Names of the Azure AD Groups.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "This property has been renamed to `display_names` and will be removed in v2.0 of the AzureAD provider"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Object IDs of the Azure AD Groups.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "displayNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Display Names of the Azure AD Groups.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "This property has been renamed to `display_names` and will be removed in v2.0 of the AzureAD provider"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Object IDs of the Azure AD Groups.\n"
                    }
                },
                "type": "object",
                "required": [
                    "displayNames",
                    "names",
                    "objectIds",
                    "id"
                ]
            }
        },
        "azuread:index/getServicePrincipal:getServicePrincipal": {
            "description": "Gets information about an existing Service Principal associated with an Application within Azure Active Directory.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### By Application Display Name)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipal({\n    displayName: \"my-awesome-application\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principal(display_name=\"my-awesome-application\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipal.InvokeAsync(new AzureAD.GetServicePrincipalArgs\n        {\n            DisplayName = \"my-awesome-application\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"my-awesome-application\"\n\t\t_, err := azuread.LookupServicePrincipal(ctx, \u0026azuread.LookupServicePrincipalArgs{\n\t\t\tDisplayName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### By Application ID)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipal({\n    applicationId: \"00000000-0000-0000-0000-000000000000\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principal(application_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipal.InvokeAsync(new AzureAD.GetServicePrincipalArgs\n        {\n            ApplicationId = \"00000000-0000-0000-0000-000000000000\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"00000000-0000-0000-0000-000000000000\"\n\t\t_, err := azuread.LookupServicePrincipal(ctx, \u0026azuread.LookupServicePrincipalArgs{\n\t\t\tApplicationId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### By Object ID)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getServicePrincipal({\n    objectId: \"00000000-0000-0000-0000-000000000000\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_service_principal(object_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetServicePrincipal.InvokeAsync(new AzureAD.GetServicePrincipalArgs\n        {\n            ObjectId = \"00000000-0000-0000-0000-000000000000\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"00000000-0000-0000-0000-000000000000\"\n\t\t_, err := azuread.LookupServicePrincipal(ctx, \u0026azuread.LookupServicePrincipalArgs{\n\t\t\tObjectId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServicePrincipal.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the Azure AD Application.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The Display Name of the Azure AD Application associated with this Service Principal.\n"
                    },
                    "oauth2PermissionScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalOauth2PermissionScope:getServicePrincipalOauth2PermissionScope"
                        },
                        "description": "A collection of OAuth 2.0 delegated permissions exposed by the associated Application. Each permission is covered by an `oauth2_permission_scopes` block as documented below.\n"
                    },
                    "oauth2Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalOauth2Permission:getServicePrincipalOauth2Permission"
                        },
                        "description": "(**Deprecated**) A collection of OAuth 2.0 permissions exposed by the associated Application. Each permission is covered by an `oauth2_permissions` block as documented below. Deprecated in favour of `oauth2_permission_scopes`.\n",
                        "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The ID of the Azure AD Service Principal.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServicePrincipal.\n",
                "properties": {
                    "appRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalAppRole:getServicePrincipalAppRole"
                        },
                        "description": "A collection of `app_roles` blocks as documented below. For more information [official documentation](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).\n"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for the permission that appears in the admin consent and app assignment experiences.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "oauth2PermissionScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalOauth2PermissionScope:getServicePrincipalOauth2PermissionScope"
                        },
                        "description": "A collection of OAuth 2.0 delegated permissions exposed by the associated Application. Each permission is covered by an `oauth2_permission_scopes` block as documented below.\n"
                    },
                    "oauth2Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getServicePrincipalOauth2Permission:getServicePrincipalOauth2Permission"
                        },
                        "description": "(**Deprecated**) A collection of OAuth 2.0 permissions exposed by the associated Application. Each permission is covered by an `oauth2_permissions` block as documented below. Deprecated in favour of `oauth2_permission_scopes`.\n",
                        "deprecationMessage": "[NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The Object ID for the Service Principal.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appRoles",
                    "applicationId",
                    "displayName",
                    "oauth2PermissionScopes",
                    "oauth2Permissions",
                    "objectId",
                    "id"
                ]
            }
        },
        "azuread:index/getUser:getUser": {
            "description": "Gets information about an Azure Active Directory user.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read directory data` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst example = pulumi.output(azuread.getUser({\n    userPrincipalName: \"user@hashicorp.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nexample = azuread.get_user(user_principal_name=\"user@hashicorp.com\")\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(AzureAD.GetUser.InvokeAsync(new AzureAD.GetUserArgs\n        {\n            UserPrincipalName = \"user@hashicorp.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"user@hashicorp.com\"\n\t\t_, err := azuread.LookupUser(ctx, \u0026azuread.LookupUserArgs{\n\t\t\tUserPrincipalName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "mailNickname": {
                        "type": "string",
                        "description": "The email alias of the Azure AD User.\n"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the Object ID of the User within Azure Active Directory.\n"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "description": "The User Principal Name of the Azure AD User.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "accountEnabled": {
                        "type": "boolean",
                        "description": "`True` if the account is enabled; otherwise `False`.\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city in which the user is located.\n"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The company name which the user is associated. This property can be useful for describing the company that an external user comes from.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country/region in which the user is located; for example, “US” or “UK”.\n"
                    },
                    "department": {
                        "type": "string",
                        "description": "The name for the department in which the user works.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The Display Name of the Azure AD User.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name (first name) of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "immutableId": {
                        "type": "string",
                        "description": "(**Deprecated**) The value used to associate an on-premise Active Directory user account with their Azure AD user object. Deprecated in favour of `onpremises_immutable_id`.\n",
                        "deprecationMessage": "This property has been renamed to `onpremises_immutable_id` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "jobTitle": {
                        "type": "string",
                        "description": "The user’s job title.\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "The primary email address of the Azure AD User.\n"
                    },
                    "mailNickname": {
                        "type": "string",
                        "description": "The email alias of the Azure AD User.\n"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "(**Deprecated**) The primary cellular telephone number for the user. Deprecated in favour of `mobile_phone`.\n",
                        "deprecationMessage": "This property has been renamed to `mobile_phone` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "The primary cellular telephone number for the user.\n"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "officeLocation": {
                        "type": "string",
                        "description": "The office location in the user's place of business.\n"
                    },
                    "onpremisesImmutableId": {
                        "type": "string",
                        "description": "The value used to associate an on-premise Active Directory user account with their Azure AD user object.\n"
                    },
                    "onpremisesSamAccountName": {
                        "type": "string",
                        "description": "The on-premise SAM account name of the Azure AD User.\n"
                    },
                    "onpremisesUserPrincipalName": {
                        "type": "string",
                        "description": "The on-premise user principal name of the Azure AD User.\n"
                    },
                    "physicalDeliveryOfficeName": {
                        "type": "string",
                        "description": "(**Deprecated**) The office location in the user's place of business. Deprecated in favour of `office_location`.\n",
                        "deprecationMessage": "This property has been renamed to `office_location` and will be removed in version 2.0 of the AzureAD provider"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state or province in the user's address.\n"
                    },
                    "streetAddress": {
                        "type": "string",
                        "description": "The street address of the user's place of business.\n"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The user's surname (family name or last name).\n"
                    },
                    "usageLocation": {
                        "type": "string",
                        "description": "The usage location of the Azure AD User.\n"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "description": "The User Principal Name of the Azure AD User.\n"
                    },
                    "userType": {
                        "type": "string",
                        "description": "The user type in the directory. One of `Guest` or `Member`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountEnabled",
                    "city",
                    "companyName",
                    "country",
                    "department",
                    "displayName",
                    "givenName",
                    "immutableId",
                    "jobTitle",
                    "mail",
                    "mailNickname",
                    "mobile",
                    "mobilePhone",
                    "objectId",
                    "officeLocation",
                    "onpremisesImmutableId",
                    "onpremisesSamAccountName",
                    "onpremisesUserPrincipalName",
                    "physicalDeliveryOfficeName",
                    "postalCode",
                    "state",
                    "streetAddress",
                    "surname",
                    "usageLocation",
                    "userPrincipalName",
                    "userType",
                    "id"
                ]
            }
        },
        "azuread:index/getUsers:getUsers": {
            "description": "Gets Object IDs or UPNs for multiple Azure Active Directory users.\n\n\u003e **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read directory data` within the `Windows Azure Active Directory` API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azuread from \"@pulumi/azuread\";\n\nconst users = pulumi.output(azuread.getUsers({\n    userPrincipalNames: [\n        \"kat@hashicorp.com\",\n        \"byte@hashicorp.com\",\n    ],\n}));\n```\n```python\nimport pulumi\nimport pulumi_azuread as azuread\n\nusers = azuread.get_users(user_principal_names=[\n    \"kat@hashicorp.com\",\n    \"byte@hashicorp.com\",\n])\n```\n```csharp\nusing Pulumi;\nusing AzureAD = Pulumi.AzureAD;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var users = Output.Create(AzureAD.GetUsers.InvokeAsync(new AzureAD.GetUsersArgs\n        {\n            UserPrincipalNames = \n            {\n                \"kat@hashicorp.com\",\n                \"byte@hashicorp.com\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azuread.GetUsers(ctx, \u0026azuread.GetUsersArgs{\n\t\t\tUserPrincipalNames: []string{\n\t\t\t\t\"kat@hashicorp.com\",\n\t\t\t\t\"byte@hashicorp.com\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "ignoreMissing": {
                        "type": "boolean",
                        "description": "Ignore missing users and return users that were found. The data source will still fail if no users are found. Defaults to false.\n"
                    },
                    "mailNicknames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The email aliases of the Azure AD Users.\n"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Object IDs of the Azure AD Users.\n"
                    },
                    "userPrincipalNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The User Principal Names of the Azure AD Users.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ignoreMissing": {
                        "type": "boolean"
                    },
                    "mailNicknames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The email aliases of the Azure AD Users.\n"
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Object IDs of the Azure AD Users.\n"
                    },
                    "userPrincipalNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The User Principal Names of the Azure AD Users.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/azuread:index/getUsersUser:getUsersUser"
                        },
                        "description": "A list of Azure AD Users. Each `user` object provides the attributes documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "mailNicknames",
                    "objectIds",
                    "userPrincipalNames",
                    "users",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "azuread": "AzureAD"
            },
            "packageReferences": {
                "Pulumi": "3.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing azuread cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-azuread)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-azuread` repo](https://github.com/pulumi/pulumi-azuread/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-azuread` repo](https://github.com/hashicorp/terraform-provider-azuread/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-azuread)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-azuread` repo](https://github.com/pulumi/pulumi-azuread/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-azuread` repo](https://github.com/hashicorp/terraform-provider-azuread/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}