// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetAccessPackage
    {
        /// <summary>
        /// Use this data source to retrieve information for an existing access package within Identity Governance in Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this data source.
        /// 
        /// When authenticated with a service principal, this data source requires one of the following application roles: `EntitlementManagement.Read.All`, or `EntitlementManagement.ReadWrite.All`.
        /// 
        /// When authenticated with a user principal, this data source requires one of the following directory roles: `Catalog owner`, `Catalog reader`, `Access package manager`, `Global Reader`, or `Global Administrator`.
        /// 
        /// ## Example Usage
        /// 
        /// *Look up by ID*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureAD.GetAccessPackage.Invoke(new()
        ///     {
        ///         ObjectId = "00000000-0000-0000-0000-000000000000",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// *Look up by DisplayName*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureAD.GetAccessPackage.Invoke(new()
        ///     {
        ///         CatalogId = "00000000-0000-0000-0000-000000000000",
        ///         DisplayName = "My access package Catalog",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccessPackageResult> InvokeAsync(GetAccessPackageArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessPackageResult>("azuread:index/getAccessPackage:getAccessPackage", args ?? new GetAccessPackageArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information for an existing access package within Identity Governance in Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this data source.
        /// 
        /// When authenticated with a service principal, this data source requires one of the following application roles: `EntitlementManagement.Read.All`, or `EntitlementManagement.ReadWrite.All`.
        /// 
        /// When authenticated with a user principal, this data source requires one of the following directory roles: `Catalog owner`, `Catalog reader`, `Access package manager`, `Global Reader`, or `Global Administrator`.
        /// 
        /// ## Example Usage
        /// 
        /// *Look up by ID*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureAD.GetAccessPackage.Invoke(new()
        ///     {
        ///         ObjectId = "00000000-0000-0000-0000-000000000000",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// *Look up by DisplayName*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureAD.GetAccessPackage.Invoke(new()
        ///     {
        ///         CatalogId = "00000000-0000-0000-0000-000000000000",
        ///         DisplayName = "My access package Catalog",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessPackageResult> Invoke(GetAccessPackageInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPackageResult>("azuread:index/getAccessPackage:getAccessPackage", args ?? new GetAccessPackageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information for an existing access package within Identity Governance in Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this data source.
        /// 
        /// When authenticated with a service principal, this data source requires one of the following application roles: `EntitlementManagement.Read.All`, or `EntitlementManagement.ReadWrite.All`.
        /// 
        /// When authenticated with a user principal, this data source requires one of the following directory roles: `Catalog owner`, `Catalog reader`, `Access package manager`, `Global Reader`, or `Global Administrator`.
        /// 
        /// ## Example Usage
        /// 
        /// *Look up by ID*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureAD.GetAccessPackage.Invoke(new()
        ///     {
        ///         ObjectId = "00000000-0000-0000-0000-000000000000",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// *Look up by DisplayName*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureAD.GetAccessPackage.Invoke(new()
        ///     {
        ///         CatalogId = "00000000-0000-0000-0000-000000000000",
        ///         DisplayName = "My access package Catalog",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessPackageResult> Invoke(GetAccessPackageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPackageResult>("azuread:index/getAccessPackage:getAccessPackage", args ?? new GetAccessPackageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessPackageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Catalog this access package is in.
        /// </summary>
        [Input("catalogId")]
        public string? CatalogId { get; set; }

        /// <summary>
        /// The display name of the access package.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The ID of this access package.
        /// 
        /// &gt; Either `ObjectId`, or both `CatalogId` and `DisplayName`, must be specified.
        /// </summary>
        [Input("objectId")]
        public string? ObjectId { get; set; }

        public GetAccessPackageArgs()
        {
        }
        public static new GetAccessPackageArgs Empty => new GetAccessPackageArgs();
    }

    public sealed class GetAccessPackageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Catalog this access package is in.
        /// </summary>
        [Input("catalogId")]
        public Input<string>? CatalogId { get; set; }

        /// <summary>
        /// The display name of the access package.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The ID of this access package.
        /// 
        /// &gt; Either `ObjectId`, or both `CatalogId` and `DisplayName`, must be specified.
        /// </summary>
        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        public GetAccessPackageInvokeArgs()
        {
        }
        public static new GetAccessPackageInvokeArgs Empty => new GetAccessPackageInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessPackageResult
    {
        public readonly string? CatalogId;
        /// <summary>
        /// The description of the access package.
        /// </summary>
        public readonly string Description;
        public readonly string DisplayName;
        /// <summary>
        /// Whether the access package is hidden from the requestor.
        /// </summary>
        public readonly bool Hidden;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ObjectId;

        [OutputConstructor]
        private GetAccessPackageResult(
            string? catalogId,

            string description,

            string displayName,

            bool hidden,

            string id,

            string objectId)
        {
            CatalogId = catalogId;
            Description = description;
            DisplayName = displayName;
            Hidden = hidden;
            Id = id;
            ObjectId = objectId;
        }
    }
}
