// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// Manages a synchronization job associated with a service principal (enterprise application) within Azure Active Directory.
    /// 
    /// ## API Permissions
    /// 
    /// The following API permissions are required in order to use this resource.
    /// 
    /// When authenticated with a service principal, this resource requires one of the following application roles: `Application.ReadWrite.All` or `Directory.ReadWrite.All`
    /// 
    /// ## Example Usage
    /// 
    /// *Basic example*
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleApplicationTemplate = AzureAD.GetApplicationTemplate.Invoke(new()
    ///     {
    ///         DisplayName = "Azure Databricks SCIM Provisioning Connector",
    ///     });
    /// 
    ///     var exampleApplication = new AzureAD.Application("exampleApplication", new()
    ///     {
    ///         DisplayName = "example",
    ///         TemplateId = exampleApplicationTemplate.Apply(getApplicationTemplateResult =&gt; getApplicationTemplateResult.TemplateId),
    ///         FeatureTags = new[]
    ///         {
    ///             new AzureAD.Inputs.ApplicationFeatureTagArgs
    ///             {
    ///                 Enterprise = true,
    ///                 Gallery = true,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleServicePrincipal = new AzureAD.ServicePrincipal("exampleServicePrincipal", new()
    ///     {
    ///         ApplicationId = exampleApplication.ApplicationId,
    ///         UseExisting = true,
    ///     });
    /// 
    ///     var exampleSynchronizationSecret = new AzureAD.SynchronizationSecret("exampleSynchronizationSecret", new()
    ///     {
    ///         ServicePrincipalId = exampleServicePrincipal.Id,
    ///         Credentials = new[]
    ///         {
    ///             new AzureAD.Inputs.SynchronizationSecretCredentialArgs
    ///             {
    ///                 Key = "BaseAddress",
    ///                 Value = "https://adb-example.azuredatabricks.net/api/2.0/preview/scim",
    ///             },
    ///             new AzureAD.Inputs.SynchronizationSecretCredentialArgs
    ///             {
    ///                 Key = "SecretToken",
    ///                 Value = "some-token",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleSynchronizationJob = new AzureAD.SynchronizationJob("exampleSynchronizationJob", new()
    ///     {
    ///         ServicePrincipalId = exampleServicePrincipal.Id,
    ///         TemplateId = "dataBricks",
    ///         Enabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Synchronization jobs can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azuread:index/synchronizationJob:SynchronizationJob example 00000000-0000-0000-0000-000000000000/job/dataBricks.f5532fc709734b1a90e8a1fa9fd03a82.8442fd39-2183-419c-8732-74b6ce866bd5
    /// ```
    /// 
    ///  -&gt; This ID format is unique to Terraform and is composed of the Service Principal Object ID and the ID of the Synchronization Job Id in the format `{servicePrincipalId}/job/{jobId}`.
    /// </summary>
    [AzureADResourceType("azuread:index/synchronizationJob:SynchronizationJob")]
    public partial class SynchronizationJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether or not the provisioning job is enabled. Default state is `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// A `schedule` list as documented below.
        /// </summary>
        [Output("schedules")]
        public Output<ImmutableArray<Outputs.SynchronizationJobSchedule>> Schedules { get; private set; } = null!;

        /// <summary>
        /// The object ID of the service principal for which this synchronization job should be created. Changing this field forces a new resource to be created.
        /// </summary>
        [Output("servicePrincipalId")]
        public Output<string> ServicePrincipalId { get; private set; } = null!;

        /// <summary>
        /// Identifier of the synchronization template this job is based on.
        /// </summary>
        [Output("templateId")]
        public Output<string> TemplateId { get; private set; } = null!;


        /// <summary>
        /// Create a SynchronizationJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SynchronizationJob(string name, SynchronizationJobArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/synchronizationJob:SynchronizationJob", name, args ?? new SynchronizationJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SynchronizationJob(string name, Input<string> id, SynchronizationJobState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/synchronizationJob:SynchronizationJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SynchronizationJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SynchronizationJob Get(string name, Input<string> id, SynchronizationJobState? state = null, CustomResourceOptions? options = null)
        {
            return new SynchronizationJob(name, id, state, options);
        }
    }

    public sealed class SynchronizationJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not the provisioning job is enabled. Default state is `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The object ID of the service principal for which this synchronization job should be created. Changing this field forces a new resource to be created.
        /// </summary>
        [Input("servicePrincipalId", required: true)]
        public Input<string> ServicePrincipalId { get; set; } = null!;

        /// <summary>
        /// Identifier of the synchronization template this job is based on.
        /// </summary>
        [Input("templateId", required: true)]
        public Input<string> TemplateId { get; set; } = null!;

        public SynchronizationJobArgs()
        {
        }
        public static new SynchronizationJobArgs Empty => new SynchronizationJobArgs();
    }

    public sealed class SynchronizationJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not the provisioning job is enabled. Default state is `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("schedules")]
        private InputList<Inputs.SynchronizationJobScheduleGetArgs>? _schedules;

        /// <summary>
        /// A `schedule` list as documented below.
        /// </summary>
        public InputList<Inputs.SynchronizationJobScheduleGetArgs> Schedules
        {
            get => _schedules ?? (_schedules = new InputList<Inputs.SynchronizationJobScheduleGetArgs>());
            set => _schedules = value;
        }

        /// <summary>
        /// The object ID of the service principal for which this synchronization job should be created. Changing this field forces a new resource to be created.
        /// </summary>
        [Input("servicePrincipalId")]
        public Input<string>? ServicePrincipalId { get; set; }

        /// <summary>
        /// Identifier of the synchronization template this job is based on.
        /// </summary>
        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        public SynchronizationJobState()
        {
        }
        public static new SynchronizationJobState Empty => new SynchronizationJobState();
    }
}
