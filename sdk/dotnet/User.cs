// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// Manages a User within Azure Active Directory.
    /// 
    /// &gt; **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Directory.ReadWrite.All` within the `Windows Azure Active Directory` API.
    /// 
    /// ## Example Usage
    /// 
    /// 
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new AzureAD.User("example", new AzureAD.UserArgs
    ///         {
    ///             DisplayName = "J. Doe",
    ///             MailNickname = "jdoe",
    ///             Password = "SecretP@sswd99!",
    ///             UserPrincipalName = "jdo@hashicorp.com",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class User : Pulumi.CustomResource
    {
        /// <summary>
        /// `true` if the account should be enabled, otherwise `false`. Defaults to `true`.
        /// </summary>
        [Output("accountEnabled")]
        public Output<bool?> AccountEnabled { get; private set; } = null!;

        /// <summary>
        /// The name to display in the address book for the user.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// `true` if the User is forced to change the password during the next sign-in. Defaults to `false`.
        /// </summary>
        [Output("forcePasswordChange")]
        public Output<bool?> ForcePasswordChange { get; private set; } = null!;

        /// <summary>
        /// The value used to associate an on-premises Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. 
        /// </summary>
        [Output("immutableId")]
        public Output<string> ImmutableId { get; private set; } = null!;

        /// <summary>
        /// The primary email address of the Azure AD User.
        /// </summary>
        [Output("mail")]
        public Output<string> Mail { get; private set; } = null!;

        /// <summary>
        /// The mail alias for the user. Defaults to the user name part of the User Principal Name.
        /// </summary>
        [Output("mailNickname")]
        public Output<string> MailNickname { get; private set; } = null!;

        /// <summary>
        /// The Object ID of the Azure AD User.
        /// </summary>
        [Output("objectId")]
        public Output<string> ObjectId { get; private set; } = null!;

        /// <summary>
        /// The on premise sam account name of the Azure AD User.
        /// </summary>
        [Output("onpremisesSamAccountName")]
        public Output<string> OnpremisesSamAccountName { get; private set; } = null!;

        /// <summary>
        /// The on premise user principal name of the Azure AD User.
        /// </summary>
        [Output("onpremisesUserPrincipalName")]
        public Output<string> OnpremisesUserPrincipalName { get; private set; } = null!;

        /// <summary>
        /// The password for the User. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The usage location of the User. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set. 
        /// </summary>
        [Output("usageLocation")]
        public Output<string> UsageLocation { get; private set; } = null!;

        /// <summary>
        /// The User Principal Name of the Azure AD User.
        /// </summary>
        [Output("userPrincipalName")]
        public Output<string> UserPrincipalName { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// `true` if the account should be enabled, otherwise `false`. Defaults to `true`.
        /// </summary>
        [Input("accountEnabled")]
        public Input<bool>? AccountEnabled { get; set; }

        /// <summary>
        /// The name to display in the address book for the user.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// `true` if the User is forced to change the password during the next sign-in. Defaults to `false`.
        /// </summary>
        [Input("forcePasswordChange")]
        public Input<bool>? ForcePasswordChange { get; set; }

        /// <summary>
        /// The value used to associate an on-premises Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. 
        /// </summary>
        [Input("immutableId")]
        public Input<string>? ImmutableId { get; set; }

        /// <summary>
        /// The mail alias for the user. Defaults to the user name part of the User Principal Name.
        /// </summary>
        [Input("mailNickname")]
        public Input<string>? MailNickname { get; set; }

        /// <summary>
        /// The password for the User. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// The usage location of the User. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set. 
        /// </summary>
        [Input("usageLocation")]
        public Input<string>? UsageLocation { get; set; }

        /// <summary>
        /// The User Principal Name of the Azure AD User.
        /// </summary>
        [Input("userPrincipalName", required: true)]
        public Input<string> UserPrincipalName { get; set; } = null!;

        public UserArgs()
        {
        }
    }

    public sealed class UserState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// `true` if the account should be enabled, otherwise `false`. Defaults to `true`.
        /// </summary>
        [Input("accountEnabled")]
        public Input<bool>? AccountEnabled { get; set; }

        /// <summary>
        /// The name to display in the address book for the user.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// `true` if the User is forced to change the password during the next sign-in. Defaults to `false`.
        /// </summary>
        [Input("forcePasswordChange")]
        public Input<bool>? ForcePasswordChange { get; set; }

        /// <summary>
        /// The value used to associate an on-premises Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. 
        /// </summary>
        [Input("immutableId")]
        public Input<string>? ImmutableId { get; set; }

        /// <summary>
        /// The primary email address of the Azure AD User.
        /// </summary>
        [Input("mail")]
        public Input<string>? Mail { get; set; }

        /// <summary>
        /// The mail alias for the user. Defaults to the user name part of the User Principal Name.
        /// </summary>
        [Input("mailNickname")]
        public Input<string>? MailNickname { get; set; }

        /// <summary>
        /// The Object ID of the Azure AD User.
        /// </summary>
        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        /// <summary>
        /// The on premise sam account name of the Azure AD User.
        /// </summary>
        [Input("onpremisesSamAccountName")]
        public Input<string>? OnpremisesSamAccountName { get; set; }

        /// <summary>
        /// The on premise user principal name of the Azure AD User.
        /// </summary>
        [Input("onpremisesUserPrincipalName")]
        public Input<string>? OnpremisesUserPrincipalName { get; set; }

        /// <summary>
        /// The password for the User. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The usage location of the User. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set. 
        /// </summary>
        [Input("usageLocation")]
        public Input<string>? UsageLocation { get; set; }

        /// <summary>
        /// The User Principal Name of the Azure AD User.
        /// </summary>
        [Input("userPrincipalName")]
        public Input<string>? UserPrincipalName { get; set; }

        public UserState()
        {
        }
    }
}
