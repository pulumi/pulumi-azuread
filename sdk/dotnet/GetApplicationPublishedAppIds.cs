// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetApplicationPublishedAppIds
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// *Listing well-known application IDs*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var wellKnown = AzureAD.GetApplicationPublishedAppIds.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["publishedAppIds"] = wellKnown.Apply(getApplicationPublishedAppIdsResult =&gt; getApplicationPublishedAppIdsResult.Result),
        ///     };
        /// });
        /// ```
        /// 
        /// *Granting access to an application*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var wellKnown = AzureAD.GetApplicationPublishedAppIds.Invoke();
        /// 
        ///     var msgraph = new AzureAD.ServicePrincipal("msgraph", new()
        ///     {
        ///         ClientId = wellKnown.Apply(getApplicationPublishedAppIdsResult =&gt; getApplicationPublishedAppIdsResult.Result?.MicrosoftGraph),
        ///         UseExisting = true,
        ///     });
        /// 
        ///     var example = new AzureAD.Application("example", new()
        ///     {
        ///         DisplayName = "example",
        ///         RequiredResourceAccesses = new[]
        ///         {
        ///             new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs
        ///             {
        ///                 ResourceAppId = wellKnown.Apply(getApplicationPublishedAppIdsResult =&gt; getApplicationPublishedAppIdsResult.Result?.MicrosoftGraph),
        ///                 ResourceAccesses = new[]
        ///                 {
        ///                     new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs
        ///                     {
        ///                         Id = msgraph.AppRoleIds.Apply(appRoleIds =&gt; appRoleIds.User_Read_All),
        ///                         Type = "Role",
        ///                     },
        ///                     new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs
        ///                     {
        ///                         Id = msgraph.Oauth2PermissionScopeIds.Apply(oauth2PermissionScopeIds =&gt; oauth2PermissionScopeIds.User_ReadWrite),
        ///                         Type = "Scope",
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApplicationPublishedAppIdsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationPublishedAppIdsResult>("azuread:index/getApplicationPublishedAppIds:getApplicationPublishedAppIds", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// *Listing well-known application IDs*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var wellKnown = AzureAD.GetApplicationPublishedAppIds.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["publishedAppIds"] = wellKnown.Apply(getApplicationPublishedAppIdsResult =&gt; getApplicationPublishedAppIdsResult.Result),
        ///     };
        /// });
        /// ```
        /// 
        /// *Granting access to an application*
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var wellKnown = AzureAD.GetApplicationPublishedAppIds.Invoke();
        /// 
        ///     var msgraph = new AzureAD.ServicePrincipal("msgraph", new()
        ///     {
        ///         ClientId = wellKnown.Apply(getApplicationPublishedAppIdsResult =&gt; getApplicationPublishedAppIdsResult.Result?.MicrosoftGraph),
        ///         UseExisting = true,
        ///     });
        /// 
        ///     var example = new AzureAD.Application("example", new()
        ///     {
        ///         DisplayName = "example",
        ///         RequiredResourceAccesses = new[]
        ///         {
        ///             new AzureAD.Inputs.ApplicationRequiredResourceAccessArgs
        ///             {
        ///                 ResourceAppId = wellKnown.Apply(getApplicationPublishedAppIdsResult =&gt; getApplicationPublishedAppIdsResult.Result?.MicrosoftGraph),
        ///                 ResourceAccesses = new[]
        ///                 {
        ///                     new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs
        ///                     {
        ///                         Id = msgraph.AppRoleIds.Apply(appRoleIds =&gt; appRoleIds.User_Read_All),
        ///                         Type = "Role",
        ///                     },
        ///                     new AzureAD.Inputs.ApplicationRequiredResourceAccessResourceAccessArgs
        ///                     {
        ///                         Id = msgraph.Oauth2PermissionScopeIds.Apply(oauth2PermissionScopeIds =&gt; oauth2PermissionScopeIds.User_ReadWrite),
        ///                         Type = "Scope",
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetApplicationPublishedAppIdsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationPublishedAppIdsResult>("azuread:index/getApplicationPublishedAppIds:getApplicationPublishedAppIds", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetApplicationPublishedAppIdsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A map of application names to application IDs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Result;

        [OutputConstructor]
        private GetApplicationPublishedAppIdsResult(
            string id,

            ImmutableDictionary<string, string> result)
        {
            Id = id;
            Result = result;
        }
    }
}
