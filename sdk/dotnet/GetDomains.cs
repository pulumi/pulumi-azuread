// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetDomains
    {
        public static Task<GetDomainsResult> InvokeAsync(GetDomainsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsResult>("azuread:index/getDomains:getDomains", args ?? new GetDomainsArgs(), options.WithDefaults());

        public static Output<GetDomainsResult> Invoke(GetDomainsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsResult>("azuread:index/getDomains:getDomains", args ?? new GetDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsArgs : global::Pulumi.InvokeArgs
    {
        [Input("adminManaged")]
        public bool? AdminManaged { get; set; }

        [Input("includeUnverified")]
        public bool? IncludeUnverified { get; set; }

        [Input("onlyDefault")]
        public bool? OnlyDefault { get; set; }

        [Input("onlyInitial")]
        public bool? OnlyInitial { get; set; }

        [Input("onlyRoot")]
        public bool? OnlyRoot { get; set; }

        [Input("supportsServices")]
        private List<string>? _supportsServices;
        public List<string> SupportsServices
        {
            get => _supportsServices ?? (_supportsServices = new List<string>());
            set => _supportsServices = value;
        }

        public GetDomainsArgs()
        {
        }
        public static new GetDomainsArgs Empty => new GetDomainsArgs();
    }

    public sealed class GetDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("adminManaged")]
        public Input<bool>? AdminManaged { get; set; }

        [Input("includeUnverified")]
        public Input<bool>? IncludeUnverified { get; set; }

        [Input("onlyDefault")]
        public Input<bool>? OnlyDefault { get; set; }

        [Input("onlyInitial")]
        public Input<bool>? OnlyInitial { get; set; }

        [Input("onlyRoot")]
        public Input<bool>? OnlyRoot { get; set; }

        [Input("supportsServices")]
        private InputList<string>? _supportsServices;
        public InputList<string> SupportsServices
        {
            get => _supportsServices ?? (_supportsServices = new InputList<string>());
            set => _supportsServices = value;
        }

        public GetDomainsInvokeArgs()
        {
        }
        public static new GetDomainsInvokeArgs Empty => new GetDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsResult
    {
        public readonly bool? AdminManaged;
        public readonly ImmutableArray<Outputs.GetDomainsDomainResult> Domains;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeUnverified;
        public readonly bool? OnlyDefault;
        public readonly bool? OnlyInitial;
        public readonly bool? OnlyRoot;
        public readonly ImmutableArray<string> SupportsServices;

        [OutputConstructor]
        private GetDomainsResult(
            bool? adminManaged,

            ImmutableArray<Outputs.GetDomainsDomainResult> domains,

            string id,

            bool? includeUnverified,

            bool? onlyDefault,

            bool? onlyInitial,

            bool? onlyRoot,

            ImmutableArray<string> supportsServices)
        {
            AdminManaged = adminManaged;
            Domains = domains;
            Id = id;
            IncludeUnverified = includeUnverified;
            OnlyDefault = onlyDefault;
            OnlyInitial = onlyInitial;
            OnlyRoot = onlyRoot;
            SupportsServices = supportsServices;
        }
    }
}
