// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// Manages a Claims Mapping Policy within Azure Active Directory.
    /// 
    /// ## API Permissions
    /// 
    /// The following API permissions are required in order to use this resource.
    /// 
    /// When authenticated with a service principal, this resource requires the following application roles: `Policy.ReadWrite.ApplicationConfiguration` and `Policy.Read.All`
    /// 
    /// When authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myPolicy = new AzureAD.ClaimsMappingPolicy("my_policy", new()
    ///     {
    ///         Definitions = new[]
    ///         {
    ///             JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["ClaimsMappingPolicy"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["ClaimsSchema"] = new[]
    ///                     {
    ///                         new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             ["ID"] = "employeeid",
    ///                             ["JwtClaimType"] = "name",
    ///                             ["SamlClaimType"] = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
    ///                             ["Source"] = "user",
    ///                         },
    ///                         new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             ["ID"] = "tenantcountry",
    ///                             ["JwtClaimType"] = "country",
    ///                             ["SamlClaimType"] = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country",
    ///                             ["Source"] = "company",
    ///                         },
    ///                     },
    ///                     ["IncludeBasicClaimSet"] = "true",
    ///                     ["Version"] = 1,
    ///                 },
    ///             }),
    ///         },
    ///         DisplayName = "My Policy",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Claims Mapping Policies can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azuread:index/claimsMappingPolicy:ClaimsMappingPolicy my_policy /policies/claimsMappingPolicies/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureADResourceType("azuread:index/claimsMappingPolicy:ClaimsMappingPolicy")]
    public partial class ClaimsMappingPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The claims mapping policy. This is a JSON formatted string, for which the `jsonencode()` function can be used.
        /// </summary>
        [Output("definitions")]
        public Output<ImmutableArray<string>> Definitions { get; private set; } = null!;

        /// <summary>
        /// The display name for this Claims Mapping Policy.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;


        /// <summary>
        /// Create a ClaimsMappingPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClaimsMappingPolicy(string name, ClaimsMappingPolicyArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/claimsMappingPolicy:ClaimsMappingPolicy", name, args ?? new ClaimsMappingPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClaimsMappingPolicy(string name, Input<string> id, ClaimsMappingPolicyState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/claimsMappingPolicy:ClaimsMappingPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClaimsMappingPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClaimsMappingPolicy Get(string name, Input<string> id, ClaimsMappingPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ClaimsMappingPolicy(name, id, state, options);
        }
    }

    public sealed class ClaimsMappingPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("definitions", required: true)]
        private InputList<string>? _definitions;

        /// <summary>
        /// The claims mapping policy. This is a JSON formatted string, for which the `jsonencode()` function can be used.
        /// </summary>
        public InputList<string> Definitions
        {
            get => _definitions ?? (_definitions = new InputList<string>());
            set => _definitions = value;
        }

        /// <summary>
        /// The display name for this Claims Mapping Policy.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        public ClaimsMappingPolicyArgs()
        {
        }
        public static new ClaimsMappingPolicyArgs Empty => new ClaimsMappingPolicyArgs();
    }

    public sealed class ClaimsMappingPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("definitions")]
        private InputList<string>? _definitions;

        /// <summary>
        /// The claims mapping policy. This is a JSON formatted string, for which the `jsonencode()` function can be used.
        /// </summary>
        public InputList<string> Definitions
        {
            get => _definitions ?? (_definitions = new InputList<string>());
            set => _definitions = value;
        }

        /// <summary>
        /// The display name for this Claims Mapping Policy.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        public ClaimsMappingPolicyState()
        {
        }
        public static new ClaimsMappingPolicyState Empty => new ClaimsMappingPolicyState();
    }
}
