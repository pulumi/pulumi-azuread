// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetNamedLocation
    {
        /// <summary>
        /// Gets information about a Named Location within Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this data source.
        /// 
        /// When authenticated with a service principal, this resource requires the following application roles: `Policy.Read.All`
        /// 
        /// When authenticated with a user principal, this resource requires one of the following directory roles: `Conditional Access Administrator` or `Global Reader`
        /// 
        /// ## Attributes Reference 
        /// 
        /// The following attributes are exported:
        /// 
        /// * `country` - A `country` block as documented below, which describes a country-based named location.
        /// * `id` - The ID of the named location.
        /// * `ip` - An `ip` block as documented below, which describes an IP-based named location.
        /// * 
        /// ---
        /// 
        /// `country` block exports the following:
        /// 
        /// * `countries_and_regions` - List of countries and/or regions in two-letter format specified by ISO 3166-2.
        /// * `include_unknown_countries_and_regions` - Whether IP addresses that don't map to a country or region are included in the named location.
        /// 
        /// ---
        /// 
        /// `ip` block exports the following:
        /// 
        /// * `ip_ranges` - List of IP address ranges in IPv4 CIDR format (e.g. `1.2.3.4/32`) or any allowable IPv6 format from IETF RFC596.
        /// * `trusted` - Whether the named location is trusted.
        /// </summary>
        public static Task<GetNamedLocationResult> InvokeAsync(GetNamedLocationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamedLocationResult>("azuread:index/getNamedLocation:getNamedLocation", args ?? new GetNamedLocationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Named Location within Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this data source.
        /// 
        /// When authenticated with a service principal, this resource requires the following application roles: `Policy.Read.All`
        /// 
        /// When authenticated with a user principal, this resource requires one of the following directory roles: `Conditional Access Administrator` or `Global Reader`
        /// 
        /// ## Attributes Reference 
        /// 
        /// The following attributes are exported:
        /// 
        /// * `country` - A `country` block as documented below, which describes a country-based named location.
        /// * `id` - The ID of the named location.
        /// * `ip` - An `ip` block as documented below, which describes an IP-based named location.
        /// * 
        /// ---
        /// 
        /// `country` block exports the following:
        /// 
        /// * `countries_and_regions` - List of countries and/or regions in two-letter format specified by ISO 3166-2.
        /// * `include_unknown_countries_and_regions` - Whether IP addresses that don't map to a country or region are included in the named location.
        /// 
        /// ---
        /// 
        /// `ip` block exports the following:
        /// 
        /// * `ip_ranges` - List of IP address ranges in IPv4 CIDR format (e.g. `1.2.3.4/32`) or any allowable IPv6 format from IETF RFC596.
        /// * `trusted` - Whether the named location is trusted.
        /// </summary>
        public static Output<GetNamedLocationResult> Invoke(GetNamedLocationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamedLocationResult>("azuread:index/getNamedLocation:getNamedLocation", args ?? new GetNamedLocationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamedLocationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the display named of the named location to look up.
        /// </summary>
        [Input("displayName", required: true)]
        public string DisplayName { get; set; } = null!;

        public GetNamedLocationArgs()
        {
        }
        public static new GetNamedLocationArgs Empty => new GetNamedLocationArgs();
    }

    public sealed class GetNamedLocationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the display named of the named location to look up.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        public GetNamedLocationInvokeArgs()
        {
        }
        public static new GetNamedLocationInvokeArgs Empty => new GetNamedLocationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamedLocationResult
    {
        public readonly ImmutableArray<Outputs.GetNamedLocationCountryResult> Countries;
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNamedLocationIpResult> Ips;

        [OutputConstructor]
        private GetNamedLocationResult(
            ImmutableArray<Outputs.GetNamedLocationCountryResult> countries,

            string displayName,

            string id,

            ImmutableArray<Outputs.GetNamedLocationIpResult> ips)
        {
            Countries = countries;
            DisplayName = displayName;
            Id = id;
            Ips = ips;
        }
    }
}
