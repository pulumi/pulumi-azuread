// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetDirectoryRoleTemplates
    {
        /// <summary>
        /// Use this data source to access information about directory role templates within Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this resource.
        /// 
        /// When authenticated with a service principal, this resource requires one of the following application roles: `RoleManagement.Read.Directory` or `Directory.Read.All`
        /// 
        /// When authenticated with a user principal, this data source does not require any additional roles.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = AzureAD.GetDirectoryRoleTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["roles"] = current.Apply(getDirectoryRoleTemplatesResult =&gt; getDirectoryRoleTemplatesResult.ObjectIds),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDirectoryRoleTemplatesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDirectoryRoleTemplatesResult>("azuread:index/getDirectoryRoleTemplates:getDirectoryRoleTemplates", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about directory role templates within Azure Active Directory.
        /// 
        /// ## API Permissions
        /// 
        /// The following API permissions are required in order to use this resource.
        /// 
        /// When authenticated with a service principal, this resource requires one of the following application roles: `RoleManagement.Read.Directory` or `Directory.Read.All`
        /// 
        /// When authenticated with a user principal, this data source does not require any additional roles.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = AzureAD.GetDirectoryRoleTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["roles"] = current.Apply(getDirectoryRoleTemplatesResult =&gt; getDirectoryRoleTemplatesResult.ObjectIds),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDirectoryRoleTemplatesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDirectoryRoleTemplatesResult>("azuread:index/getDirectoryRoleTemplates:getDirectoryRoleTemplates", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetDirectoryRoleTemplatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The object IDs of the role templates.
        /// </summary>
        public readonly ImmutableArray<string> ObjectIds;
        /// <summary>
        /// A list of role templates. Each `role_template` object provides the attributes documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDirectoryRoleTemplatesRoleTemplateResult> RoleTemplates;

        [OutputConstructor]
        private GetDirectoryRoleTemplatesResult(
            string id,

            ImmutableArray<string> objectIds,

            ImmutableArray<Outputs.GetDirectoryRoleTemplatesRoleTemplateResult> roleTemplates)
        {
            Id = id;
            ObjectIds = objectIds;
            RoleTemplates = roleTemplates;
        }
    }
}
