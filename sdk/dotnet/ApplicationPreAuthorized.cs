// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var authorized = new AzureAD.Application("authorized", new AzureAD.ApplicationArgs
    ///         {
    ///             DisplayName = "example-authorized-app",
    ///         });
    ///         var authorizer = new AzureAD.Application("authorizer", new AzureAD.ApplicationArgs
    ///         {
    ///             DisplayName = "example-authorizing-app",
    ///             Api = new AzureAD.Inputs.ApplicationApiArgs
    ///             {
    ///                 Oauth2PermissionScopes = 
    ///                 {
    ///                     new AzureAD.Inputs.ApplicationApiOauth2PermissionScopeArgs
    ///                     {
    ///                         AdminConsentDescription = "Administer the application",
    ///                         AdminConsentDisplayName = "Administer",
    ///                         Enabled = true,
    ///                         Id = "ced9c4c3-c273-4f0f-ac71-a20377b90f9c",
    ///                         Type = "Admin",
    ///                         Value = "administer",
    ///                     },
    ///                     new AzureAD.Inputs.ApplicationApiOauth2PermissionScopeArgs
    ///                     {
    ///                         AdminConsentDescription = "Access the application",
    ///                         AdminConsentDisplayName = "Access",
    ///                         Enabled = true,
    ///                         Id = "2d5e07ca-664d-4d9b-ad61-ec07fd215213",
    ///                         Type = "User",
    ///                         UserConsentDescription = "Access the application",
    ///                         UserConsentDisplayName = "Access",
    ///                         Value = "user_impersonation",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///         var example = new AzureAD.ApplicationPreAuthorized("example", new AzureAD.ApplicationPreAuthorizedArgs
    ///         {
    ///             ApplicationObjectId = authorizer.ObjectId,
    ///             AuthorizedAppId = authorized.ApplicationId,
    ///             PermissionIds = 
    ///             {
    ///                 "ced9c4c3-c273-4f0f-ac71-a20377b90f9c",
    ///                 "2d5e07ca-664d-4d9b-ad61-ec07fd215213",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Pre-authorized applications can be imported using the object ID of the authorizing application and the application ID of the application being authorized, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azuread:index/applicationPreAuthorized:ApplicationPreAuthorized example 00000000-0000-0000-0000-000000000000/preAuthorizedApplication/11111111-1111-1111-1111-111111111111
    /// ```
    /// 
    ///  -&gt; This ID format is unique to Terraform and is composed of the authorizing application's object ID, the string "preAuthorizedApplication" and the authorized application's application ID (client ID) in the format `{ObjectId}/preAuthorizedApplication/{ApplicationId}`.
    /// </summary>
    [AzureADResourceType("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized")]
    public partial class ApplicationPreAuthorized : Pulumi.CustomResource
    {
        /// <summary>
        /// The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
        /// </summary>
        [Output("applicationObjectId")]
        public Output<string> ApplicationObjectId { get; private set; } = null!;

        /// <summary>
        /// The application ID of the pre-authorized application
        /// </summary>
        [Output("authorizedAppId")]
        public Output<string> AuthorizedAppId { get; private set; } = null!;

        /// <summary>
        /// A set of permission scope IDs required by the authorized application.
        /// </summary>
        [Output("permissionIds")]
        public Output<ImmutableArray<string>> PermissionIds { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationPreAuthorized resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationPreAuthorized(string name, ApplicationPreAuthorizedArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized", name, args ?? new ApplicationPreAuthorizedArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationPreAuthorized(string name, Input<string> id, ApplicationPreAuthorizedState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationPreAuthorized resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationPreAuthorized Get(string name, Input<string> id, ApplicationPreAuthorizedState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationPreAuthorized(name, id, state, options);
        }
    }

    public sealed class ApplicationPreAuthorizedArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
        /// </summary>
        [Input("applicationObjectId", required: true)]
        public Input<string> ApplicationObjectId { get; set; } = null!;

        /// <summary>
        /// The application ID of the pre-authorized application
        /// </summary>
        [Input("authorizedAppId", required: true)]
        public Input<string> AuthorizedAppId { get; set; } = null!;

        [Input("permissionIds", required: true)]
        private InputList<string>? _permissionIds;

        /// <summary>
        /// A set of permission scope IDs required by the authorized application.
        /// </summary>
        public InputList<string> PermissionIds
        {
            get => _permissionIds ?? (_permissionIds = new InputList<string>());
            set => _permissionIds = value;
        }

        public ApplicationPreAuthorizedArgs()
        {
        }
    }

    public sealed class ApplicationPreAuthorizedState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
        /// </summary>
        [Input("applicationObjectId")]
        public Input<string>? ApplicationObjectId { get; set; }

        /// <summary>
        /// The application ID of the pre-authorized application
        /// </summary>
        [Input("authorizedAppId")]
        public Input<string>? AuthorizedAppId { get; set; }

        [Input("permissionIds")]
        private InputList<string>? _permissionIds;

        /// <summary>
        /// A set of permission scope IDs required by the authorized application.
        /// </summary>
        public InputList<string> PermissionIds
        {
            get => _permissionIds ?? (_permissionIds = new InputList<string>());
            set => _permissionIds = value;
        }

        public ApplicationPreAuthorizedState()
        {
        }
    }
}
