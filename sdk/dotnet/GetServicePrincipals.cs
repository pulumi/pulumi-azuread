// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetServicePrincipals
    {
        public static Task<GetServicePrincipalsResult> InvokeAsync(GetServicePrincipalsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServicePrincipalsResult>("azuread:index/getServicePrincipals:getServicePrincipals", args ?? new GetServicePrincipalsArgs(), options.WithDefaults());

        public static Output<GetServicePrincipalsResult> Invoke(GetServicePrincipalsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalsResult>("azuread:index/getServicePrincipals:getServicePrincipals", args ?? new GetServicePrincipalsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServicePrincipalsArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationIds")]
        private List<string>? _applicationIds;
        public List<string> ApplicationIds
        {
            get => _applicationIds ?? (_applicationIds = new List<string>());
            set => _applicationIds = value;
        }

        [Input("displayNames")]
        private List<string>? _displayNames;
        public List<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new List<string>());
            set => _displayNames = value;
        }

        [Input("ignoreMissing")]
        public bool? IgnoreMissing { get; set; }

        [Input("objectIds")]
        private List<string>? _objectIds;
        public List<string> ObjectIds
        {
            get => _objectIds ?? (_objectIds = new List<string>());
            set => _objectIds = value;
        }

        [Input("returnAll")]
        public bool? ReturnAll { get; set; }

        public GetServicePrincipalsArgs()
        {
        }
        public static new GetServicePrincipalsArgs Empty => new GetServicePrincipalsArgs();
    }

    public sealed class GetServicePrincipalsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationIds")]
        private InputList<string>? _applicationIds;
        public InputList<string> ApplicationIds
        {
            get => _applicationIds ?? (_applicationIds = new InputList<string>());
            set => _applicationIds = value;
        }

        [Input("displayNames")]
        private InputList<string>? _displayNames;
        public InputList<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new InputList<string>());
            set => _displayNames = value;
        }

        [Input("ignoreMissing")]
        public Input<bool>? IgnoreMissing { get; set; }

        [Input("objectIds")]
        private InputList<string>? _objectIds;
        public InputList<string> ObjectIds
        {
            get => _objectIds ?? (_objectIds = new InputList<string>());
            set => _objectIds = value;
        }

        [Input("returnAll")]
        public Input<bool>? ReturnAll { get; set; }

        public GetServicePrincipalsInvokeArgs()
        {
        }
        public static new GetServicePrincipalsInvokeArgs Empty => new GetServicePrincipalsInvokeArgs();
    }


    [OutputType]
    public sealed class GetServicePrincipalsResult
    {
        public readonly ImmutableArray<string> ApplicationIds;
        public readonly ImmutableArray<string> DisplayNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IgnoreMissing;
        public readonly ImmutableArray<string> ObjectIds;
        public readonly bool? ReturnAll;
        public readonly ImmutableArray<Outputs.GetServicePrincipalsServicePrincipalResult> ServicePrincipals;

        [OutputConstructor]
        private GetServicePrincipalsResult(
            ImmutableArray<string> applicationIds,

            ImmutableArray<string> displayNames,

            string id,

            bool? ignoreMissing,

            ImmutableArray<string> objectIds,

            bool? returnAll,

            ImmutableArray<Outputs.GetServicePrincipalsServicePrincipalResult> servicePrincipals)
        {
            ApplicationIds = applicationIds;
            DisplayNames = displayNames;
            Id = id;
            IgnoreMissing = ignoreMissing;
            ObjectIds = objectIds;
            ReturnAll = returnAll;
            ServicePrincipals = servicePrincipals;
        }
    }
}
