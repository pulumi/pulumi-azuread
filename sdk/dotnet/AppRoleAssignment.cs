// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// Manages an app role assignment for a group, user or service principal. Can be used to grant admin consent for application permissions.
    /// 
    /// ## API Permissions
    /// 
    /// The following API permissions are required in order to use this resource.
    /// 
    /// When authenticated with a service principal, this resource requires one of the following application roles: `AppRoleAssignment.ReadWrite.All` and `Application.Read.All`, or `AppRoleAssignment.ReadWrite.All` and `Directory.Read.All`, or `Application.ReadWrite.All`, or `Directory.ReadWrite.All`
    /// 
    /// When authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`
    /// 
    /// ## Import
    /// 
    /// App role assignments can be imported using the object ID of the service principal representing the resource and the ID of the app role assignment (note: _not_ the ID of the app role), e.g.
    /// 
    /// ```sh
    /// $ pulumi import azuread:index/appRoleAssignment:AppRoleAssignment example 00000000-0000-0000-0000-000000000000/appRoleAssignment/aaBBcDDeFG6h5JKLMN2PQrrssTTUUvWWxxxxxyyyzzz
    /// ```
    /// 
    ///  -&gt; This ID format is unique to Terraform and is composed of the Resource Service Principal Object ID and the ID of the App Role Assignment in the format `{ResourcePrincipalID}/appRoleAssignment/{AppRoleAssignmentID}`.
    /// </summary>
    [AzureADResourceType("azuread:index/appRoleAssignment:AppRoleAssignment")]
    public partial class AppRoleAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the app role to be assigned, or the default role ID `00000000-0000-0000-0000-000000000000`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("appRoleId")]
        public Output<string> AppRoleId { get; private set; } = null!;

        /// <summary>
        /// The display name of the principal to which the app role is assigned.
        /// </summary>
        [Output("principalDisplayName")]
        public Output<string> PrincipalDisplayName { get; private set; } = null!;

        /// <summary>
        /// The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
        /// </summary>
        [Output("principalObjectId")]
        public Output<string> PrincipalObjectId { get; private set; } = null!;

        /// <summary>
        /// The object type of the principal to which the app role is assigned.
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;

        /// <summary>
        /// The display name of the application representing the resource.
        /// </summary>
        [Output("resourceDisplayName")]
        public Output<string> ResourceDisplayName { get; private set; } = null!;

        /// <summary>
        /// The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceObjectId")]
        public Output<string> ResourceObjectId { get; private set; } = null!;


        /// <summary>
        /// Create a AppRoleAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppRoleAssignment(string name, AppRoleAssignmentArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/appRoleAssignment:AppRoleAssignment", name, args ?? new AppRoleAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppRoleAssignment(string name, Input<string> id, AppRoleAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/appRoleAssignment:AppRoleAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppRoleAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppRoleAssignment Get(string name, Input<string> id, AppRoleAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new AppRoleAssignment(name, id, state, options);
        }
    }

    public sealed class AppRoleAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the app role to be assigned, or the default role ID `00000000-0000-0000-0000-000000000000`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appRoleId", required: true)]
        public Input<string> AppRoleId { get; set; } = null!;

        /// <summary>
        /// The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
        /// </summary>
        [Input("principalObjectId", required: true)]
        public Input<string> PrincipalObjectId { get; set; } = null!;

        /// <summary>
        /// The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceObjectId", required: true)]
        public Input<string> ResourceObjectId { get; set; } = null!;

        public AppRoleAssignmentArgs()
        {
        }
        public static new AppRoleAssignmentArgs Empty => new AppRoleAssignmentArgs();
    }

    public sealed class AppRoleAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the app role to be assigned, or the default role ID `00000000-0000-0000-0000-000000000000`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appRoleId")]
        public Input<string>? AppRoleId { get; set; }

        /// <summary>
        /// The display name of the principal to which the app role is assigned.
        /// </summary>
        [Input("principalDisplayName")]
        public Input<string>? PrincipalDisplayName { get; set; }

        /// <summary>
        /// The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
        /// </summary>
        [Input("principalObjectId")]
        public Input<string>? PrincipalObjectId { get; set; }

        /// <summary>
        /// The object type of the principal to which the app role is assigned.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// The display name of the application representing the resource.
        /// </summary>
        [Input("resourceDisplayName")]
        public Input<string>? ResourceDisplayName { get; set; }

        /// <summary>
        /// The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceObjectId")]
        public Input<string>? ResourceObjectId { get; set; }

        public AppRoleAssignmentState()
        {
        }
        public static new AppRoleAssignmentState Empty => new AppRoleAssignmentState();
    }
}
