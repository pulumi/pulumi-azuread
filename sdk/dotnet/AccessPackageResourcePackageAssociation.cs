// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// Manages the resources added to access packages within Identity Governance in Azure Active Directory.
    /// 
    /// ## API Permissions
    /// 
    /// The following API permissions are required in order to use this resource.
    /// 
    /// When authenticated with a service principal, this resource requires the following application role: `EntitlementManagement.ReadWrite.All`.
    /// 
    /// When authenticated with a user principal, this resource requires one of the following directory roles: `Catalog owner`, `Access package manager` or `Global Administrator`.
    /// 
    /// ## Import
    /// 
    /// The resource and catalog association can be imported using the access package ID, the resource association ID, the resource origin ID, and the access type, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azuread:index/accessPackageResourcePackageAssociation:AccessPackageResourcePackageAssociation example 00000000-0000-0000-0000-000000000000/11111111-1111-1111-1111-111111111111_22222222-2222-2222-2222-22222222/33333333-3333-3333-3333-33333333/Member
    /// ```
    /// 
    ///  -&gt; This ID format is unique to Terraform and is composed of the Access Package ID, the Resource Association ID, the Resource Origin ID, and the Access Type, in the format `{AccessPackageID}/{ResourceAssociationID}/{ResourceOriginID}/{AccessType}`.
    /// </summary>
    [AzureADResourceType("azuread:index/accessPackageResourcePackageAssociation:AccessPackageResourcePackageAssociation")]
    public partial class AccessPackageResourcePackageAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of access package this resource association is configured to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("accessPackageId")]
        public Output<string> AccessPackageId { get; private set; } = null!;

        /// <summary>
        /// The role of access type to the specified resource. Valid values are `Member`, or `Owner` The default is `Member`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("accessType")]
        public Output<string?> AccessType { get; private set; } = null!;

        /// <summary>
        /// The ID of the catalog association from the `azuread.AccessPackageResourceCatalogAssociation` resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("catalogResourceAssociationId")]
        public Output<string> CatalogResourceAssociationId { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPackageResourcePackageAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPackageResourcePackageAssociation(string name, AccessPackageResourcePackageAssociationArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/accessPackageResourcePackageAssociation:AccessPackageResourcePackageAssociation", name, args ?? new AccessPackageResourcePackageAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPackageResourcePackageAssociation(string name, Input<string> id, AccessPackageResourcePackageAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/accessPackageResourcePackageAssociation:AccessPackageResourcePackageAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPackageResourcePackageAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPackageResourcePackageAssociation Get(string name, Input<string> id, AccessPackageResourcePackageAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPackageResourcePackageAssociation(name, id, state, options);
        }
    }

    public sealed class AccessPackageResourcePackageAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of access package this resource association is configured to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("accessPackageId", required: true)]
        public Input<string> AccessPackageId { get; set; } = null!;

        /// <summary>
        /// The role of access type to the specified resource. Valid values are `Member`, or `Owner` The default is `Member`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// The ID of the catalog association from the `azuread.AccessPackageResourceCatalogAssociation` resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("catalogResourceAssociationId", required: true)]
        public Input<string> CatalogResourceAssociationId { get; set; } = null!;

        public AccessPackageResourcePackageAssociationArgs()
        {
        }
        public static new AccessPackageResourcePackageAssociationArgs Empty => new AccessPackageResourcePackageAssociationArgs();
    }

    public sealed class AccessPackageResourcePackageAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of access package this resource association is configured to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("accessPackageId")]
        public Input<string>? AccessPackageId { get; set; }

        /// <summary>
        /// The role of access type to the specified resource. Valid values are `Member`, or `Owner` The default is `Member`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// The ID of the catalog association from the `azuread.AccessPackageResourceCatalogAssociation` resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("catalogResourceAssociationId")]
        public Input<string>? CatalogResourceAssociationId { get; set; }

        public AccessPackageResourcePackageAssociationState()
        {
        }
        public static new AccessPackageResourcePackageAssociationState Empty => new AccessPackageResourcePackageAssociationState();
    }
}
