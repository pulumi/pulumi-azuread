// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Outputs
{

    [OutputType]
    public sealed class ApplicationOauth2Permission
    {
        /// <summary>
        /// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        public readonly string? AdminConsentDescription;
        /// <summary>
        /// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        public readonly string? AdminConsentDisplayName;
        /// <summary>
        /// The unique identifier of the app role. This attribute is computed and cannot be specified manually in this block. If you need to specify a custom `id`, it's recommended to use the azuread.ApplicationAppRole resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Determines if the permission is enabled: defaults to `true`.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifier_uris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
        /// </summary>
        public readonly string? UserConsentDescription;
        /// <summary>
        /// Display name for the delegated permission that appears in the end user consent experience.
        /// </summary>
        public readonly string? UserConsentDisplayName;
        /// <summary>
        /// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private ApplicationOauth2Permission(
            string? adminConsentDescription,

            string? adminConsentDisplayName,

            string? id,

            bool? isEnabled,

            string? type,

            string? userConsentDescription,

            string? userConsentDisplayName,

            string? value)
        {
            AdminConsentDescription = adminConsentDescription;
            AdminConsentDisplayName = adminConsentDisplayName;
            Id = id;
            IsEnabled = isEnabled;
            Type = type;
            UserConsentDescription = userConsentDescription;
            UserConsentDisplayName = userConsentDisplayName;
            Value = value;
        }
    }
}
