// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Outputs
{

    [OutputType]
    public sealed class GetApplicationApiOauth2PermissionScopeResult
    {
        /// <summary>
        /// The description of the admin consent
        /// </summary>
        public readonly string AdminConsentDescription;
        /// <summary>
        /// The display name of the admin consent
        /// </summary>
        public readonly string AdminConsentDisplayName;
        /// <summary>
        /// (Optional) Determines if the permission scope is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The unique identifier for one of the `OAuth2Permission` or `AppRole` instances that the resource application exposes.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Is this permission enabled?
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The description of the user consent
        /// </summary>
        public readonly string UserConsentDescription;
        /// <summary>
        /// The display name of the user consent
        /// </summary>
        public readonly string UserConsentDisplayName;
        /// <summary>
        /// The name of this permission
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetApplicationApiOauth2PermissionScopeResult(
            string adminConsentDescription,

            string adminConsentDisplayName,

            bool enabled,

            string id,

            bool isEnabled,

            string type,

            string userConsentDescription,

            string userConsentDisplayName,

            string value)
        {
            AdminConsentDescription = adminConsentDescription;
            AdminConsentDisplayName = adminConsentDisplayName;
            Enabled = enabled;
            Id = id;
            IsEnabled = isEnabled;
            Type = type;
            UserConsentDescription = userConsentDescription;
            UserConsentDisplayName = userConsentDisplayName;
            Value = value;
        }
    }
}
