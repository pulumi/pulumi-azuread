// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Outputs
{

    [OutputType]
    public sealed class AccessPackageAssignmentPolicyApprovalSettings
    {
        /// <summary>
        /// Whether an approval is required.
        /// </summary>
        public readonly bool? ApprovalRequired;
        /// <summary>
        /// Whether an approval is required to grant extension. Same approval settings used to approve initial access will apply.
        /// </summary>
        public readonly bool? ApprovalRequiredForExtension;
        /// <summary>
        /// An `ApprovalStage` block specifying the process to obtain an approval, as documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccessPackageAssignmentPolicyApprovalSettingsApprovalStage> ApprovalStages;
        /// <summary>
        /// Whether a requestor is required to provide a justification to request an access package. Justification is visible to approvers and the requestor.
        /// </summary>
        public readonly bool? RequestorJustificationRequired;

        [OutputConstructor]
        private AccessPackageAssignmentPolicyApprovalSettings(
            bool? approvalRequired,

            bool? approvalRequiredForExtension,

            ImmutableArray<Outputs.AccessPackageAssignmentPolicyApprovalSettingsApprovalStage> approvalStages,

            bool? requestorJustificationRequired)
        {
            ApprovalRequired = approvalRequired;
            ApprovalRequiredForExtension = approvalRequiredForExtension;
            ApprovalStages = approvalStages;
            RequestorJustificationRequired = requestorJustificationRequired;
        }
    }
}
