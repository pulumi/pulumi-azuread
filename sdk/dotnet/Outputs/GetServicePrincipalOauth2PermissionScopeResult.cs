// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Outputs
{

    [OutputType]
    public sealed class GetServicePrincipalOauth2PermissionScopeResult
    {
        /// <summary>
        /// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        public readonly string AdminConsentDescription;
        /// <summary>
        /// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        public readonly string AdminConsentDisplayName;
        /// <summary>
        /// Determines if the permission scope is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The unique identifier of the delegated permission. Must be a valid UUID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
        /// </summary>
        public readonly string UserConsentDescription;
        /// <summary>
        /// Display name for the delegated permission that appears in the end user consent experience.
        /// </summary>
        public readonly string UserConsentDisplayName;
        /// <summary>
        /// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetServicePrincipalOauth2PermissionScopeResult(
            string adminConsentDescription,

            string adminConsentDisplayName,

            bool enabled,

            string id,

            string type,

            string userConsentDescription,

            string userConsentDisplayName,

            string value)
        {
            AdminConsentDescription = adminConsentDescription;
            AdminConsentDisplayName = adminConsentDisplayName;
            Enabled = enabled;
            Id = id;
            Type = type;
            UserConsentDescription = userConsentDescription;
            UserConsentDisplayName = userConsentDisplayName;
            Value = value;
        }
    }
}
