// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Outputs
{

    [OutputType]
    public sealed class GetUsersUserResult
    {
        /// <summary>
        /// Whether the account is enabled.
        /// </summary>
        public readonly bool AccountEnabled;
        /// <summary>
        /// The display name of the user.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The employee identifier assigned to the user by the organisation.
        /// </summary>
        public readonly string EmployeeId;
        /// <summary>
        /// The SMTP email address of the user.
        /// </summary>
        public readonly string Mail;
        /// <summary>
        /// The email alias of the user.
        /// </summary>
        public readonly string MailNickname;
        /// <summary>
        /// The object ID of the user.
        /// </summary>
        public readonly string ObjectId;
        /// <summary>
        /// The value used to associate an on-premises Active Directory user account with their Azure AD user object.
        /// </summary>
        public readonly string OnpremisesImmutableId;
        /// <summary>
        /// The on-premise SAM account name of the user.
        /// </summary>
        public readonly string OnpremisesSamAccountName;
        /// <summary>
        /// The on-premise user principal name of the user.
        /// </summary>
        public readonly string OnpremisesUserPrincipalName;
        /// <summary>
        /// The usage location of the user.
        /// </summary>
        public readonly string UsageLocation;
        /// <summary>
        /// The user principal name (UPN) of the user.
        /// </summary>
        public readonly string UserPrincipalName;

        [OutputConstructor]
        private GetUsersUserResult(
            bool accountEnabled,

            string displayName,

            string employeeId,

            string mail,

            string mailNickname,

            string objectId,

            string onpremisesImmutableId,

            string onpremisesSamAccountName,

            string onpremisesUserPrincipalName,

            string usageLocation,

            string userPrincipalName)
        {
            AccountEnabled = accountEnabled;
            DisplayName = displayName;
            EmployeeId = employeeId;
            Mail = mail;
            MailNickname = mailNickname;
            ObjectId = objectId;
            OnpremisesImmutableId = onpremisesImmutableId;
            OnpremisesSamAccountName = onpremisesSamAccountName;
            OnpremisesUserPrincipalName = onpremisesUserPrincipalName;
            UsageLocation = usageLocation;
            UserPrincipalName = userPrincipalName;
        }
    }
}
