// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Inputs
{

    public sealed class ApplicationApiOauth2PermissionScopeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        [Input("adminConsentDescription")]
        public Input<string>? AdminConsentDescription { get; set; }

        /// <summary>
        /// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        [Input("adminConsentDisplayName")]
        public Input<string>? AdminConsentDisplayName { get; set; }

        /// <summary>
        /// Determines if the permission scope is enabled. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The unique identifier of the delegated permission. Must be a valid UUID.
        /// 
        /// &gt; **Tip: Generating a UUID for the `id` field** To generate a value for the `id` field in cases where the actual UUID is not important, you can use the `random_uuid` resource. See the application example in the provider repository.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
        /// </summary>
        [Input("userConsentDescription")]
        public Input<string>? UserConsentDescription { get; set; }

        /// <summary>
        /// Display name for the delegated permission that appears in the end user consent experience.
        /// </summary>
        [Input("userConsentDisplayName")]
        public Input<string>? UserConsentDisplayName { get; set; }

        /// <summary>
        /// The value that is used for the `scp` claim in OAuth 2.0 access tokens
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public ApplicationApiOauth2PermissionScopeArgs()
        {
        }
        public static new ApplicationApiOauth2PermissionScopeArgs Empty => new ApplicationApiOauth2PermissionScopeArgs();
    }
}
