// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD.Inputs
{

    public sealed class ConditionalAccessPolicySessionControlsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not application enforced restrictions are enabled. Defaults to `false`.
        /// </summary>
        [Input("applicationEnforcedRestrictionsEnabled")]
        public Input<bool>? ApplicationEnforcedRestrictionsEnabled { get; set; }

        /// <summary>
        /// Enables cloud app security and specifies the cloud app security policy to use. Possible values are: `blockDownloads`, `mcasConfigured`, `monitorOnly` or `unknownFutureValue`.
        /// </summary>
        [Input("cloudAppSecurityPolicy")]
        public Input<string>? CloudAppSecurityPolicy { get; set; }

        /// <summary>
        /// Session control to define whether to persist cookies or not. Possible values are: `always` or `never`.
        /// </summary>
        [Input("persistentBrowserMode")]
        public Input<string>? PersistentBrowserMode { get; set; }

        /// <summary>
        /// Number of days or hours to enforce sign-in frequency. Required when `sign_in_frequency_period` is specified. Due to an API issue, removing this property forces a new resource to be created.
        /// </summary>
        [Input("signInFrequency")]
        public Input<int>? SignInFrequency { get; set; }

        /// <summary>
        /// The time period to enforce sign-in frequency. Possible values are: `hours` or `days`. Required when `sign_in_frequency_period` is specified. Due to an API issue, removing this property forces a new resource to be created.
        /// </summary>
        [Input("signInFrequencyPeriod")]
        public Input<string>? SignInFrequencyPeriod { get; set; }

        public ConditionalAccessPolicySessionControlsGetArgs()
        {
        }
        public static new ConditionalAccessPolicySessionControlsGetArgs Empty => new ConditionalAccessPolicySessionControlsGetArgs();
    }
}
