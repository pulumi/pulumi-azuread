// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetGroup
    {
        /// <summary>
        /// Gets information about an Azure Active Directory group.
        /// 
        /// &gt; **NOTE:** If you're authenticating using a Service Principal then it must have permissions to `Read directory data` within the `Windows Azure Active Directory` API.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Group Display Name)
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AzureAD = Pulumi.AzureAD;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(AzureAD.GetGroup.InvokeAsync(new AzureAD.GetGroupArgs
        ///         {
        ///             DisplayName = "MyGroupName",
        ///             SecurityEnabled = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("azuread:index/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithVersion());
    }


    public sealed class GetGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The display name for the Group.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// Whether the group is mail-enabled.
        /// </summary>
        [Input("mailEnabled")]
        public bool? MailEnabled { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Specifies the Object ID of the Group.
        /// </summary>
        [Input("objectId")]
        public string? ObjectId { get; set; }

        /// <summary>
        /// Whether the group is a security group.
        /// </summary>
        [Input("securityEnabled")]
        public bool? SecurityEnabled { get; set; }

        public GetGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// The optional description of the Group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name for the Group.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the group is mail-enabled.
        /// </summary>
        public readonly bool MailEnabled;
        /// <summary>
        /// The Object IDs of the Group members.
        /// </summary>
        public readonly ImmutableArray<string> Members;
        public readonly string Name;
        public readonly string ObjectId;
        /// <summary>
        /// The Object IDs of the Group owners.
        /// </summary>
        public readonly ImmutableArray<string> Owners;
        /// <summary>
        /// Whether the group is a security group.
        /// </summary>
        public readonly bool SecurityEnabled;

        [OutputConstructor]
        private GetGroupResult(
            string description,

            string displayName,

            string id,

            bool mailEnabled,

            ImmutableArray<string> members,

            string name,

            string objectId,

            ImmutableArray<string> owners,

            bool securityEnabled)
        {
            Description = description;
            DisplayName = displayName;
            Id = id;
            MailEnabled = mailEnabled;
            Members = members;
            Name = name;
            ObjectId = objectId;
            Owners = owners;
            SecurityEnabled = securityEnabled;
        }
    }
}
