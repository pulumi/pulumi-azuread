// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    /// <summary>
    /// Manages an access package catalog within Identity Governance in Azure Active Directory.
    /// 
    /// ## API Permissions
    /// 
    /// The following API permissions are required in order to use this resource.
    /// 
    /// When authenticated with a service principal, this resource requires the following application role: `EntitlementManagement.ReadWrite.All`.
    /// 
    /// When authenticated with a user principal, this resource requires one of the following directory roles: `Catalog owner`, `Catalog creator` or `Global Administrator`
    /// 
    /// ## Import
    /// 
    /// An Access Package Catalog can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azuread:index/accessPackageCatalog:AccessPackageCatalog example 00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureADResourceType("azuread:index/accessPackageCatalog:AccessPackageCatalog")]
    public partial class AccessPackageCatalog : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the access package catalog.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the access package catalog.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Whether the access packages in this catalog can be requested by users outside the tenant.
        /// </summary>
        [Output("externallyVisible")]
        public Output<bool?> ExternallyVisible { get; private set; } = null!;

        /// <summary>
        /// Whether the access packages in this catalog are available for management.
        /// </summary>
        [Output("published")]
        public Output<bool?> Published { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPackageCatalog resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPackageCatalog(string name, AccessPackageCatalogArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/accessPackageCatalog:AccessPackageCatalog", name, args ?? new AccessPackageCatalogArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPackageCatalog(string name, Input<string> id, AccessPackageCatalogState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/accessPackageCatalog:AccessPackageCatalog", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPackageCatalog resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPackageCatalog Get(string name, Input<string> id, AccessPackageCatalogState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPackageCatalog(name, id, state, options);
        }
    }

    public sealed class AccessPackageCatalogArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the access package catalog.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The display name of the access package catalog.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Whether the access packages in this catalog can be requested by users outside the tenant.
        /// </summary>
        [Input("externallyVisible")]
        public Input<bool>? ExternallyVisible { get; set; }

        /// <summary>
        /// Whether the access packages in this catalog are available for management.
        /// </summary>
        [Input("published")]
        public Input<bool>? Published { get; set; }

        public AccessPackageCatalogArgs()
        {
        }
        public static new AccessPackageCatalogArgs Empty => new AccessPackageCatalogArgs();
    }

    public sealed class AccessPackageCatalogState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the access package catalog.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the access package catalog.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Whether the access packages in this catalog can be requested by users outside the tenant.
        /// </summary>
        [Input("externallyVisible")]
        public Input<bool>? ExternallyVisible { get; set; }

        /// <summary>
        /// Whether the access packages in this catalog are available for management.
        /// </summary>
        [Input("published")]
        public Input<bool>? Published { get; set; }

        public AccessPackageCatalogState()
        {
        }
        public static new AccessPackageCatalogState Empty => new AccessPackageCatalogState();
    }
}
