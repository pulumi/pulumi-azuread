// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    [AzureADResourceType("azuread:index/conditionalAccessPolicy:ConditionalAccessPolicy")]
    public partial class ConditionalAccessPolicy : global::Pulumi.CustomResource
    {
        [Output("conditions")]
        public Output<Outputs.ConditionalAccessPolicyConditions> Conditions { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("grantControls")]
        public Output<Outputs.ConditionalAccessPolicyGrantControls> GrantControls { get; private set; } = null!;

        [Output("sessionControls")]
        public Output<Outputs.ConditionalAccessPolicySessionControls?> SessionControls { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a ConditionalAccessPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConditionalAccessPolicy(string name, ConditionalAccessPolicyArgs args, CustomResourceOptions? options = null)
            : base("azuread:index/conditionalAccessPolicy:ConditionalAccessPolicy", name, args ?? new ConditionalAccessPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConditionalAccessPolicy(string name, Input<string> id, ConditionalAccessPolicyState? state = null, CustomResourceOptions? options = null)
            : base("azuread:index/conditionalAccessPolicy:ConditionalAccessPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConditionalAccessPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConditionalAccessPolicy Get(string name, Input<string> id, ConditionalAccessPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ConditionalAccessPolicy(name, id, state, options);
        }
    }

    public sealed class ConditionalAccessPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions", required: true)]
        public Input<Inputs.ConditionalAccessPolicyConditionsArgs> Conditions { get; set; } = null!;

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("grantControls", required: true)]
        public Input<Inputs.ConditionalAccessPolicyGrantControlsArgs> GrantControls { get; set; } = null!;

        [Input("sessionControls")]
        public Input<Inputs.ConditionalAccessPolicySessionControlsArgs>? SessionControls { get; set; }

        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        public ConditionalAccessPolicyArgs()
        {
        }
        public static new ConditionalAccessPolicyArgs Empty => new ConditionalAccessPolicyArgs();
    }

    public sealed class ConditionalAccessPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        public Input<Inputs.ConditionalAccessPolicyConditionsGetArgs>? Conditions { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("grantControls")]
        public Input<Inputs.ConditionalAccessPolicyGrantControlsGetArgs>? GrantControls { get; set; }

        [Input("sessionControls")]
        public Input<Inputs.ConditionalAccessPolicySessionControlsGetArgs>? SessionControls { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        public ConditionalAccessPolicyState()
        {
        }
        public static new ConditionalAccessPolicyState Empty => new ConditionalAccessPolicyState();
    }
}
