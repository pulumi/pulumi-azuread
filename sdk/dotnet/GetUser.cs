// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureAD
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("azuread:index/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("azuread:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("employeeId")]
        public string? EmployeeId { get; set; }

        [Input("mail")]
        public string? Mail { get; set; }

        [Input("mailNickname")]
        public string? MailNickname { get; set; }

        [Input("objectId")]
        public string? ObjectId { get; set; }

        [Input("userPrincipalName")]
        public string? UserPrincipalName { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("employeeId")]
        public Input<string>? EmployeeId { get; set; }

        [Input("mail")]
        public Input<string>? Mail { get; set; }

        [Input("mailNickname")]
        public Input<string>? MailNickname { get; set; }

        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        [Input("userPrincipalName")]
        public Input<string>? UserPrincipalName { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly bool AccountEnabled;
        public readonly string AgeGroup;
        public readonly ImmutableArray<string> BusinessPhones;
        public readonly string City;
        public readonly string CompanyName;
        public readonly string ConsentProvidedForMinor;
        public readonly string CostCenter;
        public readonly string Country;
        public readonly string CreationType;
        public readonly string Department;
        public readonly string DisplayName;
        public readonly string Division;
        public readonly string EmployeeId;
        public readonly string EmployeeType;
        public readonly string ExternalUserState;
        public readonly string FaxNumber;
        public readonly string GivenName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> ImAddresses;
        public readonly string JobTitle;
        public readonly string Mail;
        public readonly string MailNickname;
        public readonly string ManagerId;
        public readonly string MobilePhone;
        public readonly string ObjectId;
        public readonly string OfficeLocation;
        public readonly string OnpremisesDistinguishedName;
        public readonly string OnpremisesDomainName;
        public readonly string OnpremisesImmutableId;
        public readonly string OnpremisesSamAccountName;
        public readonly string OnpremisesSecurityIdentifier;
        public readonly bool OnpremisesSyncEnabled;
        public readonly string OnpremisesUserPrincipalName;
        public readonly ImmutableArray<string> OtherMails;
        public readonly string PostalCode;
        public readonly string PreferredLanguage;
        public readonly ImmutableArray<string> ProxyAddresses;
        public readonly bool ShowInAddressList;
        public readonly string State;
        public readonly string StreetAddress;
        public readonly string Surname;
        public readonly string UsageLocation;
        public readonly string UserPrincipalName;
        public readonly string UserType;

        [OutputConstructor]
        private GetUserResult(
            bool accountEnabled,

            string ageGroup,

            ImmutableArray<string> businessPhones,

            string city,

            string companyName,

            string consentProvidedForMinor,

            string costCenter,

            string country,

            string creationType,

            string department,

            string displayName,

            string division,

            string employeeId,

            string employeeType,

            string externalUserState,

            string faxNumber,

            string givenName,

            string id,

            ImmutableArray<string> imAddresses,

            string jobTitle,

            string mail,

            string mailNickname,

            string managerId,

            string mobilePhone,

            string objectId,

            string officeLocation,

            string onpremisesDistinguishedName,

            string onpremisesDomainName,

            string onpremisesImmutableId,

            string onpremisesSamAccountName,

            string onpremisesSecurityIdentifier,

            bool onpremisesSyncEnabled,

            string onpremisesUserPrincipalName,

            ImmutableArray<string> otherMails,

            string postalCode,

            string preferredLanguage,

            ImmutableArray<string> proxyAddresses,

            bool showInAddressList,

            string state,

            string streetAddress,

            string surname,

            string usageLocation,

            string userPrincipalName,

            string userType)
        {
            AccountEnabled = accountEnabled;
            AgeGroup = ageGroup;
            BusinessPhones = businessPhones;
            City = city;
            CompanyName = companyName;
            ConsentProvidedForMinor = consentProvidedForMinor;
            CostCenter = costCenter;
            Country = country;
            CreationType = creationType;
            Department = department;
            DisplayName = displayName;
            Division = division;
            EmployeeId = employeeId;
            EmployeeType = employeeType;
            ExternalUserState = externalUserState;
            FaxNumber = faxNumber;
            GivenName = givenName;
            Id = id;
            ImAddresses = imAddresses;
            JobTitle = jobTitle;
            Mail = mail;
            MailNickname = mailNickname;
            ManagerId = managerId;
            MobilePhone = mobilePhone;
            ObjectId = objectId;
            OfficeLocation = officeLocation;
            OnpremisesDistinguishedName = onpremisesDistinguishedName;
            OnpremisesDomainName = onpremisesDomainName;
            OnpremisesImmutableId = onpremisesImmutableId;
            OnpremisesSamAccountName = onpremisesSamAccountName;
            OnpremisesSecurityIdentifier = onpremisesSecurityIdentifier;
            OnpremisesSyncEnabled = onpremisesSyncEnabled;
            OnpremisesUserPrincipalName = onpremisesUserPrincipalName;
            OtherMails = otherMails;
            PostalCode = postalCode;
            PreferredLanguage = preferredLanguage;
            ProxyAddresses = proxyAddresses;
            ShowInAddressList = showInAddressList;
            State = state;
            StreetAddress = streetAddress;
            Surname = surname;
            UsageLocation = usageLocation;
            UserPrincipalName = userPrincipalName;
            UserType = userType;
        }
    }
}
