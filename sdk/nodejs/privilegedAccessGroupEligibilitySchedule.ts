// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages an eligible assignment to a privileged access group.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this resource.
 *
 * When authenticated with a service principal, this resource requires the `PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup` Microsoft Graph API permissions.
 *
 * When authenticated with a user principal, this resource requires `Global Administrator` directory role, or the `Privileged Role Administrator` role in Identity Governance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = new azuread.Group("example", {
 *     displayName: "group-name",
 *     securityEnabled: true,
 * });
 * const member = new azuread.User("member", {
 *     userPrincipalName: "jdoe@example.com",
 *     displayName: "J. Doe",
 *     mailNickname: "jdoe",
 *     password: "SecretP@sswd99!",
 * });
 * const examplePrivilegedAccessGroupEligibilitySchedule = new azuread.PrivilegedAccessGroupEligibilitySchedule("example", {
 *     groupId: pim.id,
 *     principalId: member.id,
 *     assignmentType: "member",
 *     duration: "P30D",
 *     justification: "as requested",
 * });
 * ```
 *
 * ## Import
 *
 * An assignment schedule can be imported using the schedule ID, e.g.
 *
 * ```sh
 * $ pulumi import azuread:index/privilegedAccessGroupEligibilitySchedule:PrivilegedAccessGroupEligibilitySchedule example 00000000-0000-0000-0000-000000000000_member_00000000-0000-0000-0000-000000000000
 * ```
 */
export class PrivilegedAccessGroupEligibilitySchedule extends pulumi.CustomResource {
    /**
     * Get an existing PrivilegedAccessGroupEligibilitySchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivilegedAccessGroupEligibilityScheduleState, opts?: pulumi.CustomResourceOptions): PrivilegedAccessGroupEligibilitySchedule {
        return new PrivilegedAccessGroupEligibilitySchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuread:index/privilegedAccessGroupEligibilitySchedule:PrivilegedAccessGroupEligibilitySchedule';

    /**
     * Returns true if the given object is an instance of PrivilegedAccessGroupEligibilitySchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivilegedAccessGroupEligibilitySchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivilegedAccessGroupEligibilitySchedule.__pulumiType;
    }

    /**
     * The type of assignment to the group. Can be either `member` or `owner`.
     */
    public readonly assignmentType!: pulumi.Output<string>;
    /**
     * The duration that this assignment is valid for, formatted as an ISO8601 duration (e.g. P30D for 30 days, PT3H for three hours).
     */
    public readonly duration!: pulumi.Output<string | undefined>;
    /**
     * The date that this assignment expires, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).
     */
    public readonly expirationDate!: pulumi.Output<string>;
    /**
     * The Object ID of the Azure AD group to which the principal will be assigned.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * The justification for this assignment. May be required by the role policy.
     */
    public readonly justification!: pulumi.Output<string | undefined>;
    /**
     * Is this assigment permanently valid.
     *
     * At least one of `expirationDate`, `duration`, or `permanentAssignment` must be supplied. The role policy may limit the maximum duration which can be supplied.
     */
    public readonly permanentAssignment!: pulumi.Output<boolean>;
    /**
     * The Object ID of the principal to be assigned to the above group. Can be either a user or a group.
     */
    public readonly principalId!: pulumi.Output<string>;
    /**
     * The date from which this assignment is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If not provided, the assignment is immediately valid.
     */
    public readonly startDate!: pulumi.Output<string>;
    /**
     * (String) The provisioning status of this request.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ticket number in the ticket system approving this assignment. May be required by the role policy.
     */
    public readonly ticketNumber!: pulumi.Output<string | undefined>;
    /**
     * The ticket system containing the ticket number approving this assignment. May be required by the role policy.
     */
    public readonly ticketSystem!: pulumi.Output<string | undefined>;

    /**
     * Create a PrivilegedAccessGroupEligibilitySchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivilegedAccessGroupEligibilityScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivilegedAccessGroupEligibilityScheduleArgs | PrivilegedAccessGroupEligibilityScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivilegedAccessGroupEligibilityScheduleState | undefined;
            resourceInputs["assignmentType"] = state ? state.assignmentType : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["justification"] = state ? state.justification : undefined;
            resourceInputs["permanentAssignment"] = state ? state.permanentAssignment : undefined;
            resourceInputs["principalId"] = state ? state.principalId : undefined;
            resourceInputs["startDate"] = state ? state.startDate : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["ticketNumber"] = state ? state.ticketNumber : undefined;
            resourceInputs["ticketSystem"] = state ? state.ticketSystem : undefined;
        } else {
            const args = argsOrState as PrivilegedAccessGroupEligibilityScheduleArgs | undefined;
            if ((!args || args.assignmentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assignmentType'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.principalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalId'");
            }
            resourceInputs["assignmentType"] = args ? args.assignmentType : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["justification"] = args ? args.justification : undefined;
            resourceInputs["permanentAssignment"] = args ? args.permanentAssignment : undefined;
            resourceInputs["principalId"] = args ? args.principalId : undefined;
            resourceInputs["startDate"] = args ? args.startDate : undefined;
            resourceInputs["ticketNumber"] = args ? args.ticketNumber : undefined;
            resourceInputs["ticketSystem"] = args ? args.ticketSystem : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivilegedAccessGroupEligibilitySchedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivilegedAccessGroupEligibilitySchedule resources.
 */
export interface PrivilegedAccessGroupEligibilityScheduleState {
    /**
     * The type of assignment to the group. Can be either `member` or `owner`.
     */
    assignmentType?: pulumi.Input<string>;
    /**
     * The duration that this assignment is valid for, formatted as an ISO8601 duration (e.g. P30D for 30 days, PT3H for three hours).
     */
    duration?: pulumi.Input<string>;
    /**
     * The date that this assignment expires, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The Object ID of the Azure AD group to which the principal will be assigned.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The justification for this assignment. May be required by the role policy.
     */
    justification?: pulumi.Input<string>;
    /**
     * Is this assigment permanently valid.
     *
     * At least one of `expirationDate`, `duration`, or `permanentAssignment` must be supplied. The role policy may limit the maximum duration which can be supplied.
     */
    permanentAssignment?: pulumi.Input<boolean>;
    /**
     * The Object ID of the principal to be assigned to the above group. Can be either a user or a group.
     */
    principalId?: pulumi.Input<string>;
    /**
     * The date from which this assignment is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If not provided, the assignment is immediately valid.
     */
    startDate?: pulumi.Input<string>;
    /**
     * (String) The provisioning status of this request.
     */
    status?: pulumi.Input<string>;
    /**
     * The ticket number in the ticket system approving this assignment. May be required by the role policy.
     */
    ticketNumber?: pulumi.Input<string>;
    /**
     * The ticket system containing the ticket number approving this assignment. May be required by the role policy.
     */
    ticketSystem?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivilegedAccessGroupEligibilitySchedule resource.
 */
export interface PrivilegedAccessGroupEligibilityScheduleArgs {
    /**
     * The type of assignment to the group. Can be either `member` or `owner`.
     */
    assignmentType: pulumi.Input<string>;
    /**
     * The duration that this assignment is valid for, formatted as an ISO8601 duration (e.g. P30D for 30 days, PT3H for three hours).
     */
    duration?: pulumi.Input<string>;
    /**
     * The date that this assignment expires, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The Object ID of the Azure AD group to which the principal will be assigned.
     */
    groupId: pulumi.Input<string>;
    /**
     * The justification for this assignment. May be required by the role policy.
     */
    justification?: pulumi.Input<string>;
    /**
     * Is this assigment permanently valid.
     *
     * At least one of `expirationDate`, `duration`, or `permanentAssignment` must be supplied. The role policy may limit the maximum duration which can be supplied.
     */
    permanentAssignment?: pulumi.Input<boolean>;
    /**
     * The Object ID of the principal to be assigned to the above group. Can be either a user or a group.
     */
    principalId: pulumi.Input<string>;
    /**
     * The date from which this assignment is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If not provided, the assignment is immediately valid.
     */
    startDate?: pulumi.Input<string>;
    /**
     * The ticket number in the ticket system approving this assignment. May be required by the role policy.
     */
    ticketNumber?: pulumi.Input<string>;
    /**
     * The ticket system containing the ticket number approving this assignment. May be required by the role policy.
     */
    ticketSystem?: pulumi.Input<string>;
}
