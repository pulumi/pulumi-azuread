// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Manages an Application within Azure Active Directory.
 *
 * > **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write owned by applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const current = azuread.getClientConfig({});
 * const example = new azuread.Application("example", {
 *     displayName: "example",
 *     identifierUris: ["api://example-app"],
 *     owners: [current.then(current => current.objectId)],
 *     signInAudience: "AzureADMultipleOrgs",
 *     api: {
 *         oauth2PermissionScopes: [
 *             {
 *                 adminConsentDescription: "Allow the application to access example on behalf of the signed-in user.",
 *                 adminConsentDisplayName: "Access example",
 *                 enabled: true,
 *                 id: "96183846-204b-4b43-82e1-5d2222eb4b9b",
 *                 type: "User",
 *                 userConsentDescription: "Allow the application to access example on your behalf.",
 *                 userConsentDisplayName: "Access example",
 *                 value: "user_impersonation",
 *             },
 *             {
 *                 adminConsentDescription: "Administer the example application",
 *                 adminConsentDisplayName: "Administer",
 *                 enabled: true,
 *                 id: "be98fa3e-ab5b-4b11-83d9-04ba2b7946bc",
 *                 type: "Admin",
 *                 value: "administer",
 *             },
 *         ],
 *     },
 *     appRoles: [{
 *         allowedMemberTypes: [
 *             "User",
 *             "Application",
 *         ],
 *         description: "Admins can manage roles and perform all task actions",
 *         displayName: "Admin",
 *         isEnabled: true,
 *         value: "admin",
 *     }],
 *     optionalClaims: {
 *         accessTokens: [
 *             {
 *                 name: "myclaim",
 *             },
 *             {
 *                 name: "otherclaim",
 *             },
 *         ],
 *         idTokens: [{
 *             name: "userclaim",
 *             source: "user",
 *             essential: true,
 *             additionalProperties: ["emit_as_roles"],
 *         }],
 *     },
 *     requiredResourceAccesses: [
 *         {
 *             resourceAppId: "00000003-0000-0000-c000-000000000000",
 *             resourceAccesses: [
 *                 {
 *                     id: "...",
 *                     type: "Role",
 *                 },
 *                 {
 *                     id: "...",
 *                     type: "Scope",
 *                 },
 *                 {
 *                     id: "...",
 *                     type: "Scope",
 *                 },
 *             ],
 *         },
 *         {
 *             resourceAppId: "00000002-0000-0000-c000-000000000000",
 *             resourceAccesses: [{
 *                 id: "...",
 *                 type: "Scope",
 *             }],
 *         },
 *     ],
 *     web: {
 *         homepageUrl: "https://app.example.net",
 *         logoutUrl: "https://app.example.net/logout",
 *         redirectUris: ["https://app.example.net/account"],
 *         implicitGrant: {
 *             accessTokenIssuanceEnabled: true,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Azure Active Directory Applications can be imported using the `object id`, e.g.
 *
 * ```sh
 *  $ pulumi import azuread:index/application:Application test 00000000-0000-0000-0000-000000000000
 * ```
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuread:index/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * An `api` block as documented below, which configures API related settings for this Application.
     */
    public readonly api!: pulumi.Output<outputs.ApplicationApi>;
    /**
     * A collection of `appRole` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
     */
    public readonly appRoles!: pulumi.Output<outputs.ApplicationAppRole[]>;
    /**
     * The Application ID (Also called Client ID).
     */
    public /*out*/ readonly applicationId!: pulumi.Output<string>;
    /**
     * Is this Azure AD Application available to other tenants? Defaults to `false`. This property is deprecated and has been replaced by the `signInAudience` property.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider
     */
    public readonly availableToOtherTenants!: pulumi.Output<boolean>;
    /**
     * The display name for the application.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The fallback application type as public client, such as an installed application running on a mobile device. Defaults to `false`.
     */
    public readonly fallbackPublicClientEnabled!: pulumi.Output<boolean>;
    /**
     * Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Defaults to `SecurityGroup`. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.
     *
     * @deprecated [NOTE] This attribute will become a list in version 2.0 of the AzureAD provider
     */
    public readonly groupMembershipClaims!: pulumi.Output<string | undefined>;
    /**
     * The URL to the application's home page. This property is deprecated and has been replaced by the `homepageUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `homepage_url` in the `web` block in version 2.0 of the AzureAD provider
     */
    public readonly homepage!: pulumi.Output<string>;
    /**
     * The user-defined URI(s) that uniquely identify an application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
     */
    public readonly identifierUris!: pulumi.Output<string[]>;
    /**
     * The URL of the logout page. This property is deprecated and has been replaced by the `logoutUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
     */
    public readonly logoutUrl!: pulumi.Output<string>;
    /**
     * The name of the optional claim.
     *
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Does this Azure AD Application allow OAuth 2.0 implicit flow tokens? Defaults to `false`. This property is deprecated and has been replaced by the `accessTokenIssuanceEnabled` property in the `implicitGrant` block.
     *
     * @deprecated [NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider
     */
    public readonly oauth2AllowImplicitFlow!: pulumi.Output<boolean>;
    /**
     * A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by `oauth2Permissions` blocks as documented below. This block is deprecated and has been replaced by the `oauth2PermissionScope` block in the `api` block.
     *
     * @deprecated [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scope` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
     */
    public readonly oauth2Permissions!: pulumi.Output<outputs.ApplicationOauth2Permission[]>;
    /**
     * The application's Object ID.
     */
    public /*out*/ readonly objectId!: pulumi.Output<string>;
    /**
     * A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
     */
    public readonly optionalClaims!: pulumi.Output<outputs.ApplicationOptionalClaims | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * If `true`, will return an error when an existing Application is found with the same name. Defaults to `false`.
     */
    public readonly preventDuplicateNames!: pulumi.Output<boolean | undefined>;
    /**
     * Is this Azure AD Application a public client? Defaults to `false`. This property is deprecated and has been replaced by the `fallbackPublicClientEnabled` property.
     *
     * @deprecated [NOTE] This legacy attribute will be renamed to `fallback_public_client_enabled` in version 2.0 of the AzureAD provider
     */
    public readonly publicClient!: pulumi.Output<boolean>;
    /**
     * A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirectUris` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider
     */
    public readonly replyUrls!: pulumi.Output<string[]>;
    /**
     * A collection of `requiredResourceAccess` blocks as documented below.
     */
    public readonly requiredResourceAccesses!: pulumi.Output<outputs.ApplicationRequiredResourceAccess[] | undefined>;
    /**
     * The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg` or `AzureADMultipleOrgs`. Defaults to `AzureADMyOrg`.
     */
    public readonly signInAudience!: pulumi.Output<string>;
    /**
     * The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifierUris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.
     *
     * @deprecated [NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * A `web` block as documented below, which configures web related settings for this Application.
     */
    public readonly web!: pulumi.Output<outputs.ApplicationWeb>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            inputs["api"] = state ? state.api : undefined;
            inputs["appRoles"] = state ? state.appRoles : undefined;
            inputs["applicationId"] = state ? state.applicationId : undefined;
            inputs["availableToOtherTenants"] = state ? state.availableToOtherTenants : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["fallbackPublicClientEnabled"] = state ? state.fallbackPublicClientEnabled : undefined;
            inputs["groupMembershipClaims"] = state ? state.groupMembershipClaims : undefined;
            inputs["homepage"] = state ? state.homepage : undefined;
            inputs["identifierUris"] = state ? state.identifierUris : undefined;
            inputs["logoutUrl"] = state ? state.logoutUrl : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["oauth2AllowImplicitFlow"] = state ? state.oauth2AllowImplicitFlow : undefined;
            inputs["oauth2Permissions"] = state ? state.oauth2Permissions : undefined;
            inputs["objectId"] = state ? state.objectId : undefined;
            inputs["optionalClaims"] = state ? state.optionalClaims : undefined;
            inputs["owners"] = state ? state.owners : undefined;
            inputs["preventDuplicateNames"] = state ? state.preventDuplicateNames : undefined;
            inputs["publicClient"] = state ? state.publicClient : undefined;
            inputs["replyUrls"] = state ? state.replyUrls : undefined;
            inputs["requiredResourceAccesses"] = state ? state.requiredResourceAccesses : undefined;
            inputs["signInAudience"] = state ? state.signInAudience : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["web"] = state ? state.web : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            inputs["api"] = args ? args.api : undefined;
            inputs["appRoles"] = args ? args.appRoles : undefined;
            inputs["availableToOtherTenants"] = args ? args.availableToOtherTenants : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["fallbackPublicClientEnabled"] = args ? args.fallbackPublicClientEnabled : undefined;
            inputs["groupMembershipClaims"] = args ? args.groupMembershipClaims : undefined;
            inputs["homepage"] = args ? args.homepage : undefined;
            inputs["identifierUris"] = args ? args.identifierUris : undefined;
            inputs["logoutUrl"] = args ? args.logoutUrl : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["oauth2AllowImplicitFlow"] = args ? args.oauth2AllowImplicitFlow : undefined;
            inputs["oauth2Permissions"] = args ? args.oauth2Permissions : undefined;
            inputs["optionalClaims"] = args ? args.optionalClaims : undefined;
            inputs["owners"] = args ? args.owners : undefined;
            inputs["preventDuplicateNames"] = args ? args.preventDuplicateNames : undefined;
            inputs["publicClient"] = args ? args.publicClient : undefined;
            inputs["replyUrls"] = args ? args.replyUrls : undefined;
            inputs["requiredResourceAccesses"] = args ? args.requiredResourceAccesses : undefined;
            inputs["signInAudience"] = args ? args.signInAudience : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["web"] = args ? args.web : undefined;
            inputs["applicationId"] = undefined /*out*/;
            inputs["objectId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Application.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * An `api` block as documented below, which configures API related settings for this Application.
     */
    api?: pulumi.Input<inputs.ApplicationApi>;
    /**
     * A collection of `appRole` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
     */
    appRoles?: pulumi.Input<pulumi.Input<inputs.ApplicationAppRole>[]>;
    /**
     * The Application ID (Also called Client ID).
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Is this Azure AD Application available to other tenants? Defaults to `false`. This property is deprecated and has been replaced by the `signInAudience` property.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider
     */
    availableToOtherTenants?: pulumi.Input<boolean>;
    /**
     * The display name for the application.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The fallback application type as public client, such as an installed application running on a mobile device. Defaults to `false`.
     */
    fallbackPublicClientEnabled?: pulumi.Input<boolean>;
    /**
     * Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Defaults to `SecurityGroup`. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.
     *
     * @deprecated [NOTE] This attribute will become a list in version 2.0 of the AzureAD provider
     */
    groupMembershipClaims?: pulumi.Input<string>;
    /**
     * The URL to the application's home page. This property is deprecated and has been replaced by the `homepageUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `homepage_url` in the `web` block in version 2.0 of the AzureAD provider
     */
    homepage?: pulumi.Input<string>;
    /**
     * The user-defined URI(s) that uniquely identify an application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
     */
    identifierUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL of the logout page. This property is deprecated and has been replaced by the `logoutUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
     */
    logoutUrl?: pulumi.Input<string>;
    /**
     * The name of the optional claim.
     *
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    name?: pulumi.Input<string>;
    /**
     * Does this Azure AD Application allow OAuth 2.0 implicit flow tokens? Defaults to `false`. This property is deprecated and has been replaced by the `accessTokenIssuanceEnabled` property in the `implicitGrant` block.
     *
     * @deprecated [NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider
     */
    oauth2AllowImplicitFlow?: pulumi.Input<boolean>;
    /**
     * A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by `oauth2Permissions` blocks as documented below. This block is deprecated and has been replaced by the `oauth2PermissionScope` block in the `api` block.
     *
     * @deprecated [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scope` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
     */
    oauth2Permissions?: pulumi.Input<pulumi.Input<inputs.ApplicationOauth2Permission>[]>;
    /**
     * The application's Object ID.
     */
    objectId?: pulumi.Input<string>;
    /**
     * A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
     */
    optionalClaims?: pulumi.Input<inputs.ApplicationOptionalClaims>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If `true`, will return an error when an existing Application is found with the same name. Defaults to `false`.
     */
    preventDuplicateNames?: pulumi.Input<boolean>;
    /**
     * Is this Azure AD Application a public client? Defaults to `false`. This property is deprecated and has been replaced by the `fallbackPublicClientEnabled` property.
     *
     * @deprecated [NOTE] This legacy attribute will be renamed to `fallback_public_client_enabled` in version 2.0 of the AzureAD provider
     */
    publicClient?: pulumi.Input<boolean>;
    /**
     * A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirectUris` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider
     */
    replyUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A collection of `requiredResourceAccess` blocks as documented below.
     */
    requiredResourceAccesses?: pulumi.Input<pulumi.Input<inputs.ApplicationRequiredResourceAccess>[]>;
    /**
     * The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg` or `AzureADMultipleOrgs`. Defaults to `AzureADMyOrg`.
     */
    signInAudience?: pulumi.Input<string>;
    /**
     * The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifierUris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.
     *
     * @deprecated [NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider
     */
    type?: pulumi.Input<string>;
    /**
     * A `web` block as documented below, which configures web related settings for this Application.
     */
    web?: pulumi.Input<inputs.ApplicationWeb>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * An `api` block as documented below, which configures API related settings for this Application.
     */
    api?: pulumi.Input<inputs.ApplicationApi>;
    /**
     * A collection of `appRole` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
     */
    appRoles?: pulumi.Input<pulumi.Input<inputs.ApplicationAppRole>[]>;
    /**
     * Is this Azure AD Application available to other tenants? Defaults to `false`. This property is deprecated and has been replaced by the `signInAudience` property.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider
     */
    availableToOtherTenants?: pulumi.Input<boolean>;
    /**
     * The display name for the application.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The fallback application type as public client, such as an installed application running on a mobile device. Defaults to `false`.
     */
    fallbackPublicClientEnabled?: pulumi.Input<boolean>;
    /**
     * Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Defaults to `SecurityGroup`. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.
     *
     * @deprecated [NOTE] This attribute will become a list in version 2.0 of the AzureAD provider
     */
    groupMembershipClaims?: pulumi.Input<string>;
    /**
     * The URL to the application's home page. This property is deprecated and has been replaced by the `homepageUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `homepage_url` in the `web` block in version 2.0 of the AzureAD provider
     */
    homepage?: pulumi.Input<string>;
    /**
     * The user-defined URI(s) that uniquely identify an application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
     */
    identifierUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL of the logout page. This property is deprecated and has been replaced by the `logoutUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
     */
    logoutUrl?: pulumi.Input<string>;
    /**
     * The name of the optional claim.
     *
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    name?: pulumi.Input<string>;
    /**
     * Does this Azure AD Application allow OAuth 2.0 implicit flow tokens? Defaults to `false`. This property is deprecated and has been replaced by the `accessTokenIssuanceEnabled` property in the `implicitGrant` block.
     *
     * @deprecated [NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider
     */
    oauth2AllowImplicitFlow?: pulumi.Input<boolean>;
    /**
     * A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by `oauth2Permissions` blocks as documented below. This block is deprecated and has been replaced by the `oauth2PermissionScope` block in the `api` block.
     *
     * @deprecated [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scope` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
     */
    oauth2Permissions?: pulumi.Input<pulumi.Input<inputs.ApplicationOauth2Permission>[]>;
    /**
     * A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
     */
    optionalClaims?: pulumi.Input<inputs.ApplicationOptionalClaims>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If `true`, will return an error when an existing Application is found with the same name. Defaults to `false`.
     */
    preventDuplicateNames?: pulumi.Input<boolean>;
    /**
     * Is this Azure AD Application a public client? Defaults to `false`. This property is deprecated and has been replaced by the `fallbackPublicClientEnabled` property.
     *
     * @deprecated [NOTE] This legacy attribute will be renamed to `fallback_public_client_enabled` in version 2.0 of the AzureAD provider
     */
    publicClient?: pulumi.Input<boolean>;
    /**
     * A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirectUris` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider
     */
    replyUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A collection of `requiredResourceAccess` blocks as documented below.
     */
    requiredResourceAccesses?: pulumi.Input<pulumi.Input<inputs.ApplicationRequiredResourceAccess>[]>;
    /**
     * The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg` or `AzureADMultipleOrgs`. Defaults to `AzureADMyOrg`.
     */
    signInAudience?: pulumi.Input<string>;
    /**
     * The type of the application: `webapp/api` or `native`. Defaults to `webapp/api`. For `native` apps type `identifierUris` property can not be set. **This legacy property is deprecated and will be removed in version 2.0 of the provider**.
     *
     * @deprecated [NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider
     */
    type?: pulumi.Input<string>;
    /**
     * A `web` block as documented below, which configures web related settings for this Application.
     */
    web?: pulumi.Input<inputs.ApplicationWeb>;
}
