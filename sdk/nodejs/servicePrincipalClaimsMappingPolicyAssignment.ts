// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## 
 *
 * ***
 * subcategory: "Service Principals"
 * ---
 *
 * # Resource: azuread.ServicePrincipalClaimsMappingPolicyAssignment
 *
 * Manages a Claims Mapping Policy Assignment within Azure Active Directory.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this resource.
 *
 * When authenticated with a service principal, this resource requires the following application roles: `Policy.ReadWrite.ApplicationConfiguration`
 *
 * When authenticated with a user principal, this resource requires one of the following directory roles: `Application Administrator` or `Global Administrator`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const app = new azuread.ServicePrincipalClaimsMappingPolicyAssignment("app", {
 *     claimsMappingPolicyId: azuread_claims_mapping_policy.my_policy.id,
 *     servicePrincipalId: azuread_service_principal.my_principal.id,
 * });
 * ```
 *
 * ## Import
 *
 * Claims Mapping Policy can be imported using the `id`, in the form `service-principal-uuid/claimsMappingPolicy/claims-mapping-policy-uuid`, e.g
 *
 * ```sh
 *  $ pulumi import azuread:index/servicePrincipalClaimsMappingPolicyAssignment:ServicePrincipalClaimsMappingPolicyAssignment app 00000000-0000-0000-0000-000000000000/claimsMappingPolicy/11111111-0000-0000-0000-000000000000
 * ```
 */
export class ServicePrincipalClaimsMappingPolicyAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ServicePrincipalClaimsMappingPolicyAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicePrincipalClaimsMappingPolicyAssignmentState, opts?: pulumi.CustomResourceOptions): ServicePrincipalClaimsMappingPolicyAssignment {
        return new ServicePrincipalClaimsMappingPolicyAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuread:index/servicePrincipalClaimsMappingPolicyAssignment:ServicePrincipalClaimsMappingPolicyAssignment';

    /**
     * Returns true if the given object is an instance of ServicePrincipalClaimsMappingPolicyAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePrincipalClaimsMappingPolicyAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicePrincipalClaimsMappingPolicyAssignment.__pulumiType;
    }

    /**
     * The ID of the claims mapping policy to assign.
     */
    public readonly claimsMappingPolicyId!: pulumi.Output<string>;
    /**
     * The object ID of the service principal for the policy assignment.
     */
    public readonly servicePrincipalId!: pulumi.Output<string>;

    /**
     * Create a ServicePrincipalClaimsMappingPolicyAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicePrincipalClaimsMappingPolicyAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePrincipalClaimsMappingPolicyAssignmentArgs | ServicePrincipalClaimsMappingPolicyAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicePrincipalClaimsMappingPolicyAssignmentState | undefined;
            resourceInputs["claimsMappingPolicyId"] = state ? state.claimsMappingPolicyId : undefined;
            resourceInputs["servicePrincipalId"] = state ? state.servicePrincipalId : undefined;
        } else {
            const args = argsOrState as ServicePrincipalClaimsMappingPolicyAssignmentArgs | undefined;
            if ((!args || args.claimsMappingPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'claimsMappingPolicyId'");
            }
            if ((!args || args.servicePrincipalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicePrincipalId'");
            }
            resourceInputs["claimsMappingPolicyId"] = args ? args.claimsMappingPolicyId : undefined;
            resourceInputs["servicePrincipalId"] = args ? args.servicePrincipalId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServicePrincipalClaimsMappingPolicyAssignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePrincipalClaimsMappingPolicyAssignment resources.
 */
export interface ServicePrincipalClaimsMappingPolicyAssignmentState {
    /**
     * The ID of the claims mapping policy to assign.
     */
    claimsMappingPolicyId?: pulumi.Input<string>;
    /**
     * The object ID of the service principal for the policy assignment.
     */
    servicePrincipalId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServicePrincipalClaimsMappingPolicyAssignment resource.
 */
export interface ServicePrincipalClaimsMappingPolicyAssignmentArgs {
    /**
     * The ID of the claims mapping policy to assign.
     */
    claimsMappingPolicyId: pulumi.Input<string>;
    /**
     * The object ID of the service principal for the policy assignment.
     */
    servicePrincipalId: pulumi.Input<string>;
}
