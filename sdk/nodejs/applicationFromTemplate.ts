// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates an application registration and associated service principal from a gallery template.
 *
 * > The azuread.Application resource can also be used to instantiate a gallery application, however unlike the `azuread.Application` resource, this resource does not attempt to manage any properties of the resulting application.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this resource.
 *
 * When authenticated with a service principal, this resource requires one of the following application roles: `Application.ReadWrite.OwnedBy` or `Application.ReadWrite.All`
 *
 * When authenticated with a user principal, this resource may require one of the following directory roles: `Application Administrator` or `Global Administrator`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const exampleApplicationTemplate = azuread.getApplicationTemplate({
 *     displayName: "Marketo",
 * });
 * const exampleApplicationFromTemplate = new azuread.ApplicationFromTemplate("exampleApplicationFromTemplate", {
 *     displayName: "Example Application",
 *     templateId: exampleApplicationTemplate.then(exampleApplicationTemplate => exampleApplicationTemplate.templateId),
 * });
 * const exampleApplication = azuread.getApplicationOutput({
 *     objectId: exampleApplicationFromTemplate.applicationObjectId,
 * });
 * const exampleServicePrincipal = azuread.getServicePrincipalOutput({
 *     objectId: exampleApplicationFromTemplate.servicePrincipalObjectId,
 * });
 * ```
 *
 * ## Import
 *
 * Templated Applications can be imported using the template ID, the object ID of the application, and the object ID of the service principal, in the following format.
 *
 * ```sh
 * $ pulumi import azuread:index/applicationFromTemplate:ApplicationFromTemplate example /applicationTemplates/00000000-0000-0000-0000-000000000000/instantiate/11111111-1111-1111-1111-111111111111/22222222-2222-2222-2222-222222222222
 * ```
 */
export class ApplicationFromTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationFromTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationFromTemplateState, opts?: pulumi.CustomResourceOptions): ApplicationFromTemplate {
        return new ApplicationFromTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuread:index/applicationFromTemplate:ApplicationFromTemplate';

    /**
     * Returns true if the given object is an instance of ApplicationFromTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationFromTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationFromTemplate.__pulumiType;
    }

    /**
     * The resource ID for the application.
     */
    public /*out*/ readonly applicationId!: pulumi.Output<string>;
    /**
     * The object ID for the application.
     */
    public /*out*/ readonly applicationObjectId!: pulumi.Output<string>;
    /**
     * The display name for the application.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The resource ID for the service principal.
     */
    public /*out*/ readonly servicePrincipalId!: pulumi.Output<string>;
    /**
     * The object ID for the service principal.
     */
    public /*out*/ readonly servicePrincipalObjectId!: pulumi.Output<string>;
    /**
     * Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     */
    public readonly templateId!: pulumi.Output<string>;

    /**
     * Create a ApplicationFromTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationFromTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationFromTemplateArgs | ApplicationFromTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationFromTemplateState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["applicationObjectId"] = state ? state.applicationObjectId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["servicePrincipalId"] = state ? state.servicePrincipalId : undefined;
            resourceInputs["servicePrincipalObjectId"] = state ? state.servicePrincipalObjectId : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
        } else {
            const args = argsOrState as ApplicationFromTemplateArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.templateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateId'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["applicationObjectId"] = undefined /*out*/;
            resourceInputs["servicePrincipalId"] = undefined /*out*/;
            resourceInputs["servicePrincipalObjectId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationFromTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationFromTemplate resources.
 */
export interface ApplicationFromTemplateState {
    /**
     * The resource ID for the application.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The object ID for the application.
     */
    applicationObjectId?: pulumi.Input<string>;
    /**
     * The display name for the application.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The resource ID for the service principal.
     */
    servicePrincipalId?: pulumi.Input<string>;
    /**
     * The object ID for the service principal.
     */
    servicePrincipalObjectId?: pulumi.Input<string>;
    /**
     * Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     */
    templateId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationFromTemplate resource.
 */
export interface ApplicationFromTemplateArgs {
    /**
     * The display name for the application.
     */
    displayName: pulumi.Input<string>;
    /**
     * Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     */
    templateId: pulumi.Input<string>;
}
