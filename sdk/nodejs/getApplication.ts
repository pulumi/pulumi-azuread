// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to access information about an existing Application within Azure Active Directory.
 *
 * > **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all (or owned by) applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azuread.getApplication({
 *     displayName: "My First AzureAD Application",
 * });
 * export const azureAdObjectId = example.then(example => example.id);
 * ```
 */
export function getApplication(args?: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azuread:index/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "displayName": args.displayName,
        "name": args.name,
        "oauth2Permissions": args.oauth2Permissions,
        "objectId": args.objectId,
        "optionalClaims": args.optionalClaims,
        "web": args.web,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    /**
     * Specifies the Application ID (also called Client ID).
     */
    readonly applicationId?: string;
    /**
     * Specifies the display name of the application.
     */
    readonly displayName?: string;
    /**
     * The name of the optional claim.
     *
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    readonly name?: string;
    /**
     * (**Deprecated**) A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by a `oauth2Permission` block as documented below.
     *
     * @deprecated [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
     */
    readonly oauth2Permissions?: inputs.GetApplicationOauth2Permission[];
    /**
     * Specifies the Object ID of the application.
     */
    readonly objectId?: string;
    /**
     * A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
     */
    readonly optionalClaims?: inputs.GetApplicationOptionalClaims;
    /**
     * A `web` block as documented below.
     */
    readonly web?: inputs.GetApplicationWeb;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    /**
     * An `api` block as documented below.
     */
    readonly apis: outputs.GetApplicationApi[];
    /**
     * A collection of `appRole` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
     */
    readonly appRoles: outputs.GetApplicationAppRole[];
    /**
     * the Application ID (also called Client ID).
     */
    readonly applicationId: string;
    /**
     * (**Deprecated**) Is this Azure AD Application available to other tenants?
     *
     * @deprecated [NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider
     */
    readonly availableToOtherTenants: boolean;
    /**
     * Display name for the app role that appears during app role assignment and in consent experiences.
     */
    readonly displayName: string;
    /**
     * The fallback application type as public client, such as an installed application running on a mobile device.
     */
    readonly fallbackPublicClientEnabled: boolean;
    /**
     * The `groups` claim issued in a user or OAuth 2.0 access token that the app expects.
     */
    readonly groupMembershipClaims: string;
    /**
     * (**Deprecated**) The URL to the application's home page. This property is deprecated and has been replaced by the `homepageUrl` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
     */
    readonly homepage: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
     */
    readonly identifierUris: string[];
    /**
     * The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
     *
     * @deprecated [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
     */
    readonly logoutUrl: string;
    /**
     * The name of the optional claim.
     *
     * @deprecated This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
     */
    readonly name: string;
    /**
     * (**Deprecated**) Does this Azure AD Application allow OAuth2.0 implicit flow tokens?
     *
     * @deprecated [NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider
     */
    readonly oauth2AllowImplicitFlow: boolean;
    /**
     * (**Deprecated**) A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by a `oauth2Permission` block as documented below.
     *
     * @deprecated [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
     */
    readonly oauth2Permissions: outputs.GetApplicationOauth2Permission[];
    /**
     * The application's Object ID.
     */
    readonly objectId: string;
    /**
     * A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
     */
    readonly optionalClaims?: outputs.GetApplicationOptionalClaims;
    /**
     * A list of Object IDs for principals that are assigned ownership of the application.
     */
    readonly owners: string[];
    /**
     * (**Deprecated**) A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirectUris` property in the `web` block.
     *
     * @deprecated [NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider
     */
    readonly replyUrls: string[];
    /**
     * A collection of `requiredResourceAccess` blocks as documented below.
     */
    readonly requiredResourceAccesses: outputs.GetApplicationRequiredResourceAccess[];
    /**
     * The Microsoft account types that are supported for the current application. One of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.
     */
    readonly signInAudience: string;
    /**
     * Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.
     *
     * @deprecated [NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider
     */
    readonly type: string;
    /**
     * A `web` block as documented below.
     */
    readonly web: outputs.GetApplicationWeb;
}
