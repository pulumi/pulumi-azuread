// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroup(args?: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getGroup:getGroup", {
        "displayName": args.displayName,
        "mailEnabled": args.mailEnabled,
        "objectId": args.objectId,
        "securityEnabled": args.securityEnabled,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    displayName?: string;
    mailEnabled?: boolean;
    objectId?: string;
    securityEnabled?: boolean;
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    readonly assignableToRole: boolean;
    readonly autoSubscribeNewMembers: boolean;
    readonly behaviors: string[];
    readonly description: string;
    readonly displayName: string;
    readonly dynamicMemberships: outputs.GetGroupDynamicMembership[];
    readonly externalSendersAllowed: boolean;
    readonly hideFromAddressLists: boolean;
    readonly hideFromOutlookClients: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mail: string;
    readonly mailEnabled: boolean;
    readonly mailNickname: string;
    readonly members: string[];
    readonly objectId: string;
    readonly onpremisesDomainName: string;
    readonly onpremisesGroupType: string;
    readonly onpremisesNetbiosName: string;
    readonly onpremisesSamAccountName: string;
    readonly onpremisesSecurityIdentifier: string;
    readonly onpremisesSyncEnabled: boolean;
    readonly owners: string[];
    readonly preferredLanguage: string;
    readonly provisioningOptions: string[];
    readonly proxyAddresses: string[];
    readonly securityEnabled: boolean;
    readonly theme: string;
    readonly types: string[];
    readonly visibility: string;
    readonly writebackEnabled: boolean;
}
export function getGroupOutput(args?: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    displayName?: pulumi.Input<string>;
    mailEnabled?: pulumi.Input<boolean>;
    objectId?: pulumi.Input<string>;
    securityEnabled?: pulumi.Input<boolean>;
}
