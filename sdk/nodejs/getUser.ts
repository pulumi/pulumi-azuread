// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getUser:getUser", {
        "employeeId": args.employeeId,
        "mail": args.mail,
        "mailNickname": args.mailNickname,
        "objectId": args.objectId,
        "userPrincipalName": args.userPrincipalName,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    employeeId?: string;
    mail?: string;
    mailNickname?: string;
    objectId?: string;
    userPrincipalName?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly accountEnabled: boolean;
    readonly ageGroup: string;
    readonly businessPhones: string[];
    readonly city: string;
    readonly companyName: string;
    readonly consentProvidedForMinor: string;
    readonly costCenter: string;
    readonly country: string;
    readonly creationType: string;
    readonly department: string;
    readonly displayName: string;
    readonly division: string;
    readonly employeeId: string;
    readonly employeeType: string;
    readonly externalUserState: string;
    readonly faxNumber: string;
    readonly givenName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imAddresses: string[];
    readonly jobTitle: string;
    readonly mail: string;
    readonly mailNickname: string;
    readonly managerId: string;
    readonly mobilePhone: string;
    readonly objectId: string;
    readonly officeLocation: string;
    readonly onpremisesDistinguishedName: string;
    readonly onpremisesDomainName: string;
    readonly onpremisesImmutableId: string;
    readonly onpremisesSamAccountName: string;
    readonly onpremisesSecurityIdentifier: string;
    readonly onpremisesSyncEnabled: boolean;
    readonly onpremisesUserPrincipalName: string;
    readonly otherMails: string[];
    readonly postalCode: string;
    readonly preferredLanguage: string;
    readonly proxyAddresses: string[];
    readonly showInAddressList: boolean;
    readonly state: string;
    readonly streetAddress: string;
    readonly surname: string;
    readonly usageLocation: string;
    readonly userPrincipalName: string;
    readonly userType: string;
}
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    employeeId?: pulumi.Input<string>;
    mail?: pulumi.Input<string>;
    mailNickname?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
    userPrincipalName?: pulumi.Input<string>;
}
