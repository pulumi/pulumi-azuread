// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * *Basic example*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = new azuread.ApplicationRegistration("example", {displayName: "example"});
 * const exampleApplicationPassword = new azuread.ApplicationPassword("example", {applicationId: example.id});
 * ```
 *
 * *Time-based rotation*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 * import * as time from "@pulumiverse/time";
 *
 * const example = new azuread.ApplicationRegistration("example", {displayName: "example"});
 * const exampleRotating = new time.Rotating("example", {rotationDays: 7});
 * const exampleApplicationPassword = new azuread.ApplicationPassword("example", {
 *     applicationId: example.id,
 *     rotateWhenChanged: {
 *         rotation: exampleRotating.id,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * This resource does not support importing.
 */
export class ApplicationPassword extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationPassword resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationPasswordState, opts?: pulumi.CustomResourceOptions): ApplicationPassword {
        return new ApplicationPassword(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuread:index/applicationPassword:ApplicationPassword';

    /**
     * Returns true if the given object is an instance of ApplicationPassword.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationPassword {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationPassword.__pulumiType;
    }

    /**
     * The resource ID of the application for which this password should be created. Changing this field forces a new resource to be created.
     */
    declare public readonly applicationId: pulumi.Output<string>;
    /**
     * A display name for the password. Changing this field forces a new resource to be created.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.
     */
    declare public readonly endDate: pulumi.Output<string>;
    /**
     * A relative duration for which the password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.
     *
     * @deprecated The `endDateRelative` property is deprecated and will be removed in a future version of the AzureAD provider. Please instead use the Terraform `timeadd()` function to calculate a value for the `endDate` property.
     */
    declare public readonly endDateRelative: pulumi.Output<string | undefined>;
    /**
     * A UUID used to uniquely identify this password credential.
     */
    declare public /*out*/ readonly keyId: pulumi.Output<string>;
    /**
     * A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
     */
    declare public readonly rotateWhenChanged: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.
     */
    declare public readonly startDate: pulumi.Output<string>;
    /**
     * The password for this application, which is generated by Azure Active Directory.
     */
    declare public /*out*/ readonly value: pulumi.Output<string>;

    /**
     * Create a ApplicationPassword resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationPasswordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationPasswordArgs | ApplicationPasswordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationPasswordState | undefined;
            resourceInputs["applicationId"] = state?.applicationId;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["endDate"] = state?.endDate;
            resourceInputs["endDateRelative"] = state?.endDateRelative;
            resourceInputs["keyId"] = state?.keyId;
            resourceInputs["rotateWhenChanged"] = state?.rotateWhenChanged;
            resourceInputs["startDate"] = state?.startDate;
            resourceInputs["value"] = state?.value;
        } else {
            const args = argsOrState as ApplicationPasswordArgs | undefined;
            if (args?.applicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            resourceInputs["applicationId"] = args?.applicationId;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["endDate"] = args?.endDate;
            resourceInputs["endDateRelative"] = args?.endDateRelative;
            resourceInputs["rotateWhenChanged"] = args?.rotateWhenChanged;
            resourceInputs["startDate"] = args?.startDate;
            resourceInputs["keyId"] = undefined /*out*/;
            resourceInputs["value"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["value"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApplicationPassword.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationPassword resources.
 */
export interface ApplicationPasswordState {
    /**
     * The resource ID of the application for which this password should be created. Changing this field forces a new resource to be created.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * A display name for the password. Changing this field forces a new resource to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.
     */
    endDate?: pulumi.Input<string>;
    /**
     * A relative duration for which the password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.
     *
     * @deprecated The `endDateRelative` property is deprecated and will be removed in a future version of the AzureAD provider. Please instead use the Terraform `timeadd()` function to calculate a value for the `endDate` property.
     */
    endDateRelative?: pulumi.Input<string>;
    /**
     * A UUID used to uniquely identify this password credential.
     */
    keyId?: pulumi.Input<string>;
    /**
     * A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
     */
    rotateWhenChanged?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.
     */
    startDate?: pulumi.Input<string>;
    /**
     * The password for this application, which is generated by Azure Active Directory.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationPassword resource.
 */
export interface ApplicationPasswordArgs {
    /**
     * The resource ID of the application for which this password should be created. Changing this field forces a new resource to be created.
     */
    applicationId: pulumi.Input<string>;
    /**
     * A display name for the password. Changing this field forces a new resource to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.
     */
    endDate?: pulumi.Input<string>;
    /**
     * A relative duration for which the password is valid until, for example `240h` (10 days) or `2400h30m`. Changing this field forces a new resource to be created.
     *
     * @deprecated The `endDateRelative` property is deprecated and will be removed in a future version of the AzureAD provider. Please instead use the Terraform `timeadd()` function to calculate a value for the `endDate` property.
     */
    endDateRelative?: pulumi.Input<string>;
    /**
     * A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
     */
    rotateWhenChanged?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.
     */
    startDate?: pulumi.Input<string>;
}
