// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApplicationRegistration, err := azuread.NewApplicationRegistration(ctx, "exampleApplicationRegistration", &azuread.ApplicationRegistrationArgs{
//				DisplayName: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuread.NewApplicationIdentifierUri(ctx, "exampleApplicationIdentifierUri", &azuread.ApplicationIdentifierUriArgs{
//				ApplicationId: exampleApplicationRegistration.ID(),
//				IdentifierUri: pulumi.String("https://app.hashitown.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// > **Tip** For managing multiple identifier URIs for the same application, create another instance of this resource
//
// *Usage with Application resource*
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApplication, err := azuread.NewApplication(ctx, "exampleApplication", &azuread.ApplicationArgs{
//				DisplayName: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuread.NewApplicationIdentifierUri(ctx, "exampleApplicationIdentifierUri", &azuread.ApplicationIdentifierUriArgs{
//				ApplicationId: exampleApplication.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Application Identifier URIs can be imported using the object ID of the application and the base64-encoded identifier URI, in the following format.
//
// ```sh
//
//	$ pulumi import azuread:index/applicationIdentifierUri:ApplicationIdentifierUri example /applications/00000000-0000-0000-0000-000000000000/identifierUris/aHR0cHM6Ly9leGFtcGxlLm5ldC8=
//
// ```
type ApplicationIdentifierUri struct {
	pulumi.CustomResourceState

	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.
	IdentifierUri pulumi.StringOutput `pulumi:"identifierUri"`
}

// NewApplicationIdentifierUri registers a new resource with the given unique name, arguments, and options.
func NewApplicationIdentifierUri(ctx *pulumi.Context,
	name string, args *ApplicationIdentifierUriArgs, opts ...pulumi.ResourceOption) (*ApplicationIdentifierUri, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.IdentifierUri == nil {
		return nil, errors.New("invalid value for required argument 'IdentifierUri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationIdentifierUri
	err := ctx.RegisterResource("azuread:index/applicationIdentifierUri:ApplicationIdentifierUri", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationIdentifierUri gets an existing ApplicationIdentifierUri resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationIdentifierUri(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationIdentifierUriState, opts ...pulumi.ResourceOption) (*ApplicationIdentifierUri, error) {
	var resource ApplicationIdentifierUri
	err := ctx.ReadResource("azuread:index/applicationIdentifierUri:ApplicationIdentifierUri", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationIdentifierUri resources.
type applicationIdentifierUriState struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId *string `pulumi:"applicationId"`
	// The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.
	IdentifierUri *string `pulumi:"identifierUri"`
}

type ApplicationIdentifierUriState struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringPtrInput
	// The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.
	IdentifierUri pulumi.StringPtrInput
}

func (ApplicationIdentifierUriState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationIdentifierUriState)(nil)).Elem()
}

type applicationIdentifierUriArgs struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId string `pulumi:"applicationId"`
	// The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.
	IdentifierUri string `pulumi:"identifierUri"`
}

// The set of arguments for constructing a ApplicationIdentifierUri resource.
type ApplicationIdentifierUriArgs struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringInput
	// The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.
	IdentifierUri pulumi.StringInput
}

func (ApplicationIdentifierUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationIdentifierUriArgs)(nil)).Elem()
}

type ApplicationIdentifierUriInput interface {
	pulumi.Input

	ToApplicationIdentifierUriOutput() ApplicationIdentifierUriOutput
	ToApplicationIdentifierUriOutputWithContext(ctx context.Context) ApplicationIdentifierUriOutput
}

func (*ApplicationIdentifierUri) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationIdentifierUri)(nil)).Elem()
}

func (i *ApplicationIdentifierUri) ToApplicationIdentifierUriOutput() ApplicationIdentifierUriOutput {
	return i.ToApplicationIdentifierUriOutputWithContext(context.Background())
}

func (i *ApplicationIdentifierUri) ToApplicationIdentifierUriOutputWithContext(ctx context.Context) ApplicationIdentifierUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationIdentifierUriOutput)
}

// ApplicationIdentifierUriArrayInput is an input type that accepts ApplicationIdentifierUriArray and ApplicationIdentifierUriArrayOutput values.
// You can construct a concrete instance of `ApplicationIdentifierUriArrayInput` via:
//
//	ApplicationIdentifierUriArray{ ApplicationIdentifierUriArgs{...} }
type ApplicationIdentifierUriArrayInput interface {
	pulumi.Input

	ToApplicationIdentifierUriArrayOutput() ApplicationIdentifierUriArrayOutput
	ToApplicationIdentifierUriArrayOutputWithContext(context.Context) ApplicationIdentifierUriArrayOutput
}

type ApplicationIdentifierUriArray []ApplicationIdentifierUriInput

func (ApplicationIdentifierUriArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationIdentifierUri)(nil)).Elem()
}

func (i ApplicationIdentifierUriArray) ToApplicationIdentifierUriArrayOutput() ApplicationIdentifierUriArrayOutput {
	return i.ToApplicationIdentifierUriArrayOutputWithContext(context.Background())
}

func (i ApplicationIdentifierUriArray) ToApplicationIdentifierUriArrayOutputWithContext(ctx context.Context) ApplicationIdentifierUriArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationIdentifierUriArrayOutput)
}

// ApplicationIdentifierUriMapInput is an input type that accepts ApplicationIdentifierUriMap and ApplicationIdentifierUriMapOutput values.
// You can construct a concrete instance of `ApplicationIdentifierUriMapInput` via:
//
//	ApplicationIdentifierUriMap{ "key": ApplicationIdentifierUriArgs{...} }
type ApplicationIdentifierUriMapInput interface {
	pulumi.Input

	ToApplicationIdentifierUriMapOutput() ApplicationIdentifierUriMapOutput
	ToApplicationIdentifierUriMapOutputWithContext(context.Context) ApplicationIdentifierUriMapOutput
}

type ApplicationIdentifierUriMap map[string]ApplicationIdentifierUriInput

func (ApplicationIdentifierUriMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationIdentifierUri)(nil)).Elem()
}

func (i ApplicationIdentifierUriMap) ToApplicationIdentifierUriMapOutput() ApplicationIdentifierUriMapOutput {
	return i.ToApplicationIdentifierUriMapOutputWithContext(context.Background())
}

func (i ApplicationIdentifierUriMap) ToApplicationIdentifierUriMapOutputWithContext(ctx context.Context) ApplicationIdentifierUriMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationIdentifierUriMapOutput)
}

type ApplicationIdentifierUriOutput struct{ *pulumi.OutputState }

func (ApplicationIdentifierUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationIdentifierUri)(nil)).Elem()
}

func (o ApplicationIdentifierUriOutput) ToApplicationIdentifierUriOutput() ApplicationIdentifierUriOutput {
	return o
}

func (o ApplicationIdentifierUriOutput) ToApplicationIdentifierUriOutputWithContext(ctx context.Context) ApplicationIdentifierUriOutput {
	return o
}

// The resource ID of the application registration. Changing this forces a new resource to be created.
func (o ApplicationIdentifierUriOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationIdentifierUri) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.
func (o ApplicationIdentifierUriOutput) IdentifierUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationIdentifierUri) pulumi.StringOutput { return v.IdentifierUri }).(pulumi.StringOutput)
}

type ApplicationIdentifierUriArrayOutput struct{ *pulumi.OutputState }

func (ApplicationIdentifierUriArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationIdentifierUri)(nil)).Elem()
}

func (o ApplicationIdentifierUriArrayOutput) ToApplicationIdentifierUriArrayOutput() ApplicationIdentifierUriArrayOutput {
	return o
}

func (o ApplicationIdentifierUriArrayOutput) ToApplicationIdentifierUriArrayOutputWithContext(ctx context.Context) ApplicationIdentifierUriArrayOutput {
	return o
}

func (o ApplicationIdentifierUriArrayOutput) Index(i pulumi.IntInput) ApplicationIdentifierUriOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationIdentifierUri {
		return vs[0].([]*ApplicationIdentifierUri)[vs[1].(int)]
	}).(ApplicationIdentifierUriOutput)
}

type ApplicationIdentifierUriMapOutput struct{ *pulumi.OutputState }

func (ApplicationIdentifierUriMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationIdentifierUri)(nil)).Elem()
}

func (o ApplicationIdentifierUriMapOutput) ToApplicationIdentifierUriMapOutput() ApplicationIdentifierUriMapOutput {
	return o
}

func (o ApplicationIdentifierUriMapOutput) ToApplicationIdentifierUriMapOutputWithContext(ctx context.Context) ApplicationIdentifierUriMapOutput {
	return o
}

func (o ApplicationIdentifierUriMapOutput) MapIndex(k pulumi.StringInput) ApplicationIdentifierUriOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationIdentifierUri {
		return vs[0].(map[string]*ApplicationIdentifierUri)[vs[1].(string)]
	}).(ApplicationIdentifierUriOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationIdentifierUriInput)(nil)).Elem(), &ApplicationIdentifierUri{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationIdentifierUriArrayInput)(nil)).Elem(), ApplicationIdentifierUriArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationIdentifierUriMapInput)(nil)).Elem(), ApplicationIdentifierUriMap{})
	pulumi.RegisterOutputType(ApplicationIdentifierUriOutput{})
	pulumi.RegisterOutputType(ApplicationIdentifierUriArrayOutput{})
	pulumi.RegisterOutputType(ApplicationIdentifierUriMapOutput{})
}
