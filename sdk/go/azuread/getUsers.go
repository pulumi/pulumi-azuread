// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	var rv GetUsersResult
	err := ctx.Invoke("azuread:index/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	EmployeeIds        []string `pulumi:"employeeIds"`
	IgnoreMissing      *bool    `pulumi:"ignoreMissing"`
	MailNicknames      []string `pulumi:"mailNicknames"`
	ObjectIds          []string `pulumi:"objectIds"`
	ReturnAll          *bool    `pulumi:"returnAll"`
	UserPrincipalNames []string `pulumi:"userPrincipalNames"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	EmployeeIds []string `pulumi:"employeeIds"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string         `pulumi:"id"`
	IgnoreMissing      *bool          `pulumi:"ignoreMissing"`
	MailNicknames      []string       `pulumi:"mailNicknames"`
	ObjectIds          []string       `pulumi:"objectIds"`
	ReturnAll          *bool          `pulumi:"returnAll"`
	UserPrincipalNames []string       `pulumi:"userPrincipalNames"`
	Users              []GetUsersUser `pulumi:"users"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsersResult, error) {
			args := v.(GetUsersArgs)
			r, err := GetUsers(ctx, &args, opts...)
			var s GetUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	EmployeeIds        pulumi.StringArrayInput `pulumi:"employeeIds"`
	IgnoreMissing      pulumi.BoolPtrInput     `pulumi:"ignoreMissing"`
	MailNicknames      pulumi.StringArrayInput `pulumi:"mailNicknames"`
	ObjectIds          pulumi.StringArrayInput `pulumi:"objectIds"`
	ReturnAll          pulumi.BoolPtrInput     `pulumi:"returnAll"`
	UserPrincipalNames pulumi.StringArrayInput `pulumi:"userPrincipalNames"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) EmployeeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []string { return v.EmployeeIds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersResultOutput) IgnoreMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *bool { return v.IgnoreMissing }).(pulumi.BoolPtrOutput)
}

func (o GetUsersResultOutput) MailNicknames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []string { return v.MailNicknames }).(pulumi.StringArrayOutput)
}

func (o GetUsersResultOutput) ObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []string { return v.ObjectIds }).(pulumi.StringArrayOutput)
}

func (o GetUsersResultOutput) ReturnAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *bool { return v.ReturnAll }).(pulumi.BoolPtrOutput)
}

func (o GetUsersResultOutput) UserPrincipalNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []string { return v.UserPrincipalNames }).(pulumi.StringArrayOutput)
}

func (o GetUsersResultOutput) Users() GetUsersUserArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersUser { return v.Users }).(GetUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
