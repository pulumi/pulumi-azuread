// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupAccessPackage(ctx *pulumi.Context, args *LookupAccessPackageArgs, opts ...pulumi.InvokeOption) (*LookupAccessPackageResult, error) {
	var rv LookupAccessPackageResult
	err := ctx.Invoke("azuread:index/getAccessPackage:getAccessPackage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessPackage.
type LookupAccessPackageArgs struct {
	CatalogId   *string `pulumi:"catalogId"`
	DisplayName *string `pulumi:"displayName"`
	ObjectId    *string `pulumi:"objectId"`
}

// A collection of values returned by getAccessPackage.
type LookupAccessPackageResult struct {
	CatalogId   *string `pulumi:"catalogId"`
	Description string  `pulumi:"description"`
	DisplayName string  `pulumi:"displayName"`
	Hidden      bool    `pulumi:"hidden"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	ObjectId string `pulumi:"objectId"`
}

func LookupAccessPackageOutput(ctx *pulumi.Context, args LookupAccessPackageOutputArgs, opts ...pulumi.InvokeOption) LookupAccessPackageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessPackageResult, error) {
			args := v.(LookupAccessPackageArgs)
			r, err := LookupAccessPackage(ctx, &args, opts...)
			var s LookupAccessPackageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccessPackageResultOutput)
}

// A collection of arguments for invoking getAccessPackage.
type LookupAccessPackageOutputArgs struct {
	CatalogId   pulumi.StringPtrInput `pulumi:"catalogId"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	ObjectId    pulumi.StringPtrInput `pulumi:"objectId"`
}

func (LookupAccessPackageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPackageArgs)(nil)).Elem()
}

// A collection of values returned by getAccessPackage.
type LookupAccessPackageResultOutput struct{ *pulumi.OutputState }

func (LookupAccessPackageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPackageResult)(nil)).Elem()
}

func (o LookupAccessPackageResultOutput) ToLookupAccessPackageResultOutput() LookupAccessPackageResultOutput {
	return o
}

func (o LookupAccessPackageResultOutput) ToLookupAccessPackageResultOutputWithContext(ctx context.Context) LookupAccessPackageResultOutput {
	return o
}

func (o LookupAccessPackageResultOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessPackageResult) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o LookupAccessPackageResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPackageResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupAccessPackageResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPackageResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupAccessPackageResultOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccessPackageResult) bool { return v.Hidden }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccessPackageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPackageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAccessPackageResultOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPackageResult) string { return v.ObjectId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessPackageResultOutput{})
}
