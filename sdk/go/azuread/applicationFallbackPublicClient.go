// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApplicationRegistration, err := azuread.NewApplicationRegistration(ctx, "exampleApplicationRegistration", &azuread.ApplicationRegistrationArgs{
//				DisplayName: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuread.NewApplicationFallbackPublicClient(ctx, "exampleApplicationFallbackPublicClient", &azuread.ApplicationFallbackPublicClientArgs{
//				ApplicationId: exampleApplicationRegistration.ID(),
//				Enabled:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The Application Fallback Public Client setting can be imported using the object ID of the application, in the following format.
//
// ```sh
// $ pulumi import azuread:index/applicationFallbackPublicClient:ApplicationFallbackPublicClient example /applications/00000000-0000-0000-0000-000000000000/fallbackPublicClient
// ```
type ApplicationFallbackPublicClient struct {
	pulumi.CustomResourceState

	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Whether to enable the application as a fallback public client.
	//
	// > Some configurations may require the Fallback Public Client setting to be `null`, for this case simply destroy this resource (or don't use it)
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
}

// NewApplicationFallbackPublicClient registers a new resource with the given unique name, arguments, and options.
func NewApplicationFallbackPublicClient(ctx *pulumi.Context,
	name string, args *ApplicationFallbackPublicClientArgs, opts ...pulumi.ResourceOption) (*ApplicationFallbackPublicClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationFallbackPublicClient
	err := ctx.RegisterResource("azuread:index/applicationFallbackPublicClient:ApplicationFallbackPublicClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationFallbackPublicClient gets an existing ApplicationFallbackPublicClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationFallbackPublicClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationFallbackPublicClientState, opts ...pulumi.ResourceOption) (*ApplicationFallbackPublicClient, error) {
	var resource ApplicationFallbackPublicClient
	err := ctx.ReadResource("azuread:index/applicationFallbackPublicClient:ApplicationFallbackPublicClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationFallbackPublicClient resources.
type applicationFallbackPublicClientState struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId *string `pulumi:"applicationId"`
	// Whether to enable the application as a fallback public client.
	//
	// > Some configurations may require the Fallback Public Client setting to be `null`, for this case simply destroy this resource (or don't use it)
	Enabled *bool `pulumi:"enabled"`
}

type ApplicationFallbackPublicClientState struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringPtrInput
	// Whether to enable the application as a fallback public client.
	//
	// > Some configurations may require the Fallback Public Client setting to be `null`, for this case simply destroy this resource (or don't use it)
	Enabled pulumi.BoolPtrInput
}

func (ApplicationFallbackPublicClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationFallbackPublicClientState)(nil)).Elem()
}

type applicationFallbackPublicClientArgs struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId string `pulumi:"applicationId"`
	// Whether to enable the application as a fallback public client.
	//
	// > Some configurations may require the Fallback Public Client setting to be `null`, for this case simply destroy this resource (or don't use it)
	Enabled *bool `pulumi:"enabled"`
}

// The set of arguments for constructing a ApplicationFallbackPublicClient resource.
type ApplicationFallbackPublicClientArgs struct {
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringInput
	// Whether to enable the application as a fallback public client.
	//
	// > Some configurations may require the Fallback Public Client setting to be `null`, for this case simply destroy this resource (or don't use it)
	Enabled pulumi.BoolPtrInput
}

func (ApplicationFallbackPublicClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationFallbackPublicClientArgs)(nil)).Elem()
}

type ApplicationFallbackPublicClientInput interface {
	pulumi.Input

	ToApplicationFallbackPublicClientOutput() ApplicationFallbackPublicClientOutput
	ToApplicationFallbackPublicClientOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientOutput
}

func (*ApplicationFallbackPublicClient) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationFallbackPublicClient)(nil)).Elem()
}

func (i *ApplicationFallbackPublicClient) ToApplicationFallbackPublicClientOutput() ApplicationFallbackPublicClientOutput {
	return i.ToApplicationFallbackPublicClientOutputWithContext(context.Background())
}

func (i *ApplicationFallbackPublicClient) ToApplicationFallbackPublicClientOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationFallbackPublicClientOutput)
}

// ApplicationFallbackPublicClientArrayInput is an input type that accepts ApplicationFallbackPublicClientArray and ApplicationFallbackPublicClientArrayOutput values.
// You can construct a concrete instance of `ApplicationFallbackPublicClientArrayInput` via:
//
//	ApplicationFallbackPublicClientArray{ ApplicationFallbackPublicClientArgs{...} }
type ApplicationFallbackPublicClientArrayInput interface {
	pulumi.Input

	ToApplicationFallbackPublicClientArrayOutput() ApplicationFallbackPublicClientArrayOutput
	ToApplicationFallbackPublicClientArrayOutputWithContext(context.Context) ApplicationFallbackPublicClientArrayOutput
}

type ApplicationFallbackPublicClientArray []ApplicationFallbackPublicClientInput

func (ApplicationFallbackPublicClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationFallbackPublicClient)(nil)).Elem()
}

func (i ApplicationFallbackPublicClientArray) ToApplicationFallbackPublicClientArrayOutput() ApplicationFallbackPublicClientArrayOutput {
	return i.ToApplicationFallbackPublicClientArrayOutputWithContext(context.Background())
}

func (i ApplicationFallbackPublicClientArray) ToApplicationFallbackPublicClientArrayOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationFallbackPublicClientArrayOutput)
}

// ApplicationFallbackPublicClientMapInput is an input type that accepts ApplicationFallbackPublicClientMap and ApplicationFallbackPublicClientMapOutput values.
// You can construct a concrete instance of `ApplicationFallbackPublicClientMapInput` via:
//
//	ApplicationFallbackPublicClientMap{ "key": ApplicationFallbackPublicClientArgs{...} }
type ApplicationFallbackPublicClientMapInput interface {
	pulumi.Input

	ToApplicationFallbackPublicClientMapOutput() ApplicationFallbackPublicClientMapOutput
	ToApplicationFallbackPublicClientMapOutputWithContext(context.Context) ApplicationFallbackPublicClientMapOutput
}

type ApplicationFallbackPublicClientMap map[string]ApplicationFallbackPublicClientInput

func (ApplicationFallbackPublicClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationFallbackPublicClient)(nil)).Elem()
}

func (i ApplicationFallbackPublicClientMap) ToApplicationFallbackPublicClientMapOutput() ApplicationFallbackPublicClientMapOutput {
	return i.ToApplicationFallbackPublicClientMapOutputWithContext(context.Background())
}

func (i ApplicationFallbackPublicClientMap) ToApplicationFallbackPublicClientMapOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationFallbackPublicClientMapOutput)
}

type ApplicationFallbackPublicClientOutput struct{ *pulumi.OutputState }

func (ApplicationFallbackPublicClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationFallbackPublicClient)(nil)).Elem()
}

func (o ApplicationFallbackPublicClientOutput) ToApplicationFallbackPublicClientOutput() ApplicationFallbackPublicClientOutput {
	return o
}

func (o ApplicationFallbackPublicClientOutput) ToApplicationFallbackPublicClientOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientOutput {
	return o
}

// The resource ID of the application registration. Changing this forces a new resource to be created.
func (o ApplicationFallbackPublicClientOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationFallbackPublicClient) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Whether to enable the application as a fallback public client.
//
// > Some configurations may require the Fallback Public Client setting to be `null`, for this case simply destroy this resource (or don't use it)
func (o ApplicationFallbackPublicClientOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationFallbackPublicClient) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApplicationFallbackPublicClientArrayOutput struct{ *pulumi.OutputState }

func (ApplicationFallbackPublicClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationFallbackPublicClient)(nil)).Elem()
}

func (o ApplicationFallbackPublicClientArrayOutput) ToApplicationFallbackPublicClientArrayOutput() ApplicationFallbackPublicClientArrayOutput {
	return o
}

func (o ApplicationFallbackPublicClientArrayOutput) ToApplicationFallbackPublicClientArrayOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientArrayOutput {
	return o
}

func (o ApplicationFallbackPublicClientArrayOutput) Index(i pulumi.IntInput) ApplicationFallbackPublicClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationFallbackPublicClient {
		return vs[0].([]*ApplicationFallbackPublicClient)[vs[1].(int)]
	}).(ApplicationFallbackPublicClientOutput)
}

type ApplicationFallbackPublicClientMapOutput struct{ *pulumi.OutputState }

func (ApplicationFallbackPublicClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationFallbackPublicClient)(nil)).Elem()
}

func (o ApplicationFallbackPublicClientMapOutput) ToApplicationFallbackPublicClientMapOutput() ApplicationFallbackPublicClientMapOutput {
	return o
}

func (o ApplicationFallbackPublicClientMapOutput) ToApplicationFallbackPublicClientMapOutputWithContext(ctx context.Context) ApplicationFallbackPublicClientMapOutput {
	return o
}

func (o ApplicationFallbackPublicClientMapOutput) MapIndex(k pulumi.StringInput) ApplicationFallbackPublicClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationFallbackPublicClient {
		return vs[0].(map[string]*ApplicationFallbackPublicClient)[vs[1].(string)]
	}).(ApplicationFallbackPublicClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationFallbackPublicClientInput)(nil)).Elem(), &ApplicationFallbackPublicClient{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationFallbackPublicClientArrayInput)(nil)).Elem(), ApplicationFallbackPublicClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationFallbackPublicClientMapInput)(nil)).Elem(), ApplicationFallbackPublicClientMap{})
	pulumi.RegisterOutputType(ApplicationFallbackPublicClientOutput{})
	pulumi.RegisterOutputType(ApplicationFallbackPublicClientArrayOutput{})
	pulumi.RegisterOutputType(ApplicationFallbackPublicClientMapOutput{})
}
