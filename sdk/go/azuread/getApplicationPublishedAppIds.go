// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to discover application IDs for APIs published by Microsoft.
//
// This data source uses an [unofficial source of application IDs](https://github.com/manicminer/hamilton/blob/main/environments/published.go), as there is currently no available official indexed source for applications or APIs published by Microsoft.
//
// The app IDs returned by this data source are sourced from the Azure Global (Public) Cloud, however some of them are known to work in government and national clouds.
//
// ## Example Usage
//
// *Listing well-known application IDs*
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			wellKnown, err := azuread.GetApplicationPublishedAppIds(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("publishedAppIds", wellKnown.Result)
//			return nil
//		})
//	}
//
// ```
//
// *Granting access to an application*
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			wellKnown, err := azuread.GetApplicationPublishedAppIds(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			msgraph, err := azuread.NewServicePrincipal(ctx, "msgraph", &azuread.ServicePrincipalArgs{
//				ApplicationId: pulumi.String(wellKnown.Result.MicrosoftGraph),
//				UseExisting:   pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuread.NewApplication(ctx, "example", &azuread.ApplicationArgs{
//				DisplayName: pulumi.String("example"),
//				RequiredResourceAccesses: ApplicationRequiredResourceAccessArray{
//					&ApplicationRequiredResourceAccessArgs{
//						ResourceAppId: pulumi.String(wellKnown.Result.MicrosoftGraph),
//						ResourceAccesses: ApplicationRequiredResourceAccessResourceAccessArray{
//							&ApplicationRequiredResourceAccessResourceAccessArgs{
//								Id: msgraph.AppRoleIds.ApplyT(func(appRoleIds map[string]string) (string, error) {
//									return appRoleIds.User.Read.All, nil
//								}).(pulumi.StringOutput),
//								Type: pulumi.String("Role"),
//							},
//							&ApplicationRequiredResourceAccessResourceAccessArgs{
//								Id: msgraph.Oauth2PermissionScopeIds.ApplyT(func(oauth2PermissionScopeIds map[string]string) (string, error) {
//									return oauth2PermissionScopeIds.User.ReadWrite, nil
//								}).(pulumi.StringOutput),
//								Type: pulumi.String("Scope"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetApplicationPublishedAppIds(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetApplicationPublishedAppIdsResult, error) {
	var rv GetApplicationPublishedAppIdsResult
	err := ctx.Invoke("azuread:index/getApplicationPublishedAppIds:getApplicationPublishedAppIds", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getApplicationPublishedAppIds.
type GetApplicationPublishedAppIdsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A map of application names to application IDs.
	Result map[string]string `pulumi:"result"`
}
