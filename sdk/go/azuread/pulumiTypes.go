// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationApi struct {
	// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
	KnownClientApplications []string `pulumi:"knownClientApplications"`
	// Allows an application to use claims mapping without specifying a custom signing key. Defaults to `false`.
	MappedClaimsEnabled *bool `pulumi:"mappedClaimsEnabled"`
	// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
	Oauth2PermissionScopes []ApplicationApiOauth2PermissionScope `pulumi:"oauth2PermissionScopes"`
	// The access token version expected by this resource. Must be one of `1` or `2`, and must be `2` when `signInAudience` is either `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount` Defaults to `1`.
	RequestedAccessTokenVersion *int `pulumi:"requestedAccessTokenVersion"`
}

// ApplicationApiInput is an input type that accepts ApplicationApiArgs and ApplicationApiOutput values.
// You can construct a concrete instance of `ApplicationApiInput` via:
//
//          ApplicationApiArgs{...}
type ApplicationApiInput interface {
	pulumi.Input

	ToApplicationApiOutput() ApplicationApiOutput
	ToApplicationApiOutputWithContext(context.Context) ApplicationApiOutput
}

type ApplicationApiArgs struct {
	// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
	KnownClientApplications pulumi.StringArrayInput `pulumi:"knownClientApplications"`
	// Allows an application to use claims mapping without specifying a custom signing key. Defaults to `false`.
	MappedClaimsEnabled pulumi.BoolPtrInput `pulumi:"mappedClaimsEnabled"`
	// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
	Oauth2PermissionScopes ApplicationApiOauth2PermissionScopeArrayInput `pulumi:"oauth2PermissionScopes"`
	// The access token version expected by this resource. Must be one of `1` or `2`, and must be `2` when `signInAudience` is either `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount` Defaults to `1`.
	RequestedAccessTokenVersion pulumi.IntPtrInput `pulumi:"requestedAccessTokenVersion"`
}

func (ApplicationApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApi)(nil)).Elem()
}

func (i ApplicationApiArgs) ToApplicationApiOutput() ApplicationApiOutput {
	return i.ToApplicationApiOutputWithContext(context.Background())
}

func (i ApplicationApiArgs) ToApplicationApiOutputWithContext(ctx context.Context) ApplicationApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApiOutput)
}

func (i ApplicationApiArgs) ToApplicationApiPtrOutput() ApplicationApiPtrOutput {
	return i.ToApplicationApiPtrOutputWithContext(context.Background())
}

func (i ApplicationApiArgs) ToApplicationApiPtrOutputWithContext(ctx context.Context) ApplicationApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApiOutput).ToApplicationApiPtrOutputWithContext(ctx)
}

// ApplicationApiPtrInput is an input type that accepts ApplicationApiArgs, ApplicationApiPtr and ApplicationApiPtrOutput values.
// You can construct a concrete instance of `ApplicationApiPtrInput` via:
//
//          ApplicationApiArgs{...}
//
//  or:
//
//          nil
type ApplicationApiPtrInput interface {
	pulumi.Input

	ToApplicationApiPtrOutput() ApplicationApiPtrOutput
	ToApplicationApiPtrOutputWithContext(context.Context) ApplicationApiPtrOutput
}

type applicationApiPtrType ApplicationApiArgs

func ApplicationApiPtr(v *ApplicationApiArgs) ApplicationApiPtrInput {
	return (*applicationApiPtrType)(v)
}

func (*applicationApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationApi)(nil)).Elem()
}

func (i *applicationApiPtrType) ToApplicationApiPtrOutput() ApplicationApiPtrOutput {
	return i.ToApplicationApiPtrOutputWithContext(context.Background())
}

func (i *applicationApiPtrType) ToApplicationApiPtrOutputWithContext(ctx context.Context) ApplicationApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApiPtrOutput)
}

type ApplicationApiOutput struct{ *pulumi.OutputState }

func (ApplicationApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApi)(nil)).Elem()
}

func (o ApplicationApiOutput) ToApplicationApiOutput() ApplicationApiOutput {
	return o
}

func (o ApplicationApiOutput) ToApplicationApiOutputWithContext(ctx context.Context) ApplicationApiOutput {
	return o
}

func (o ApplicationApiOutput) ToApplicationApiPtrOutput() ApplicationApiPtrOutput {
	return o.ToApplicationApiPtrOutputWithContext(context.Background())
}

func (o ApplicationApiOutput) ToApplicationApiPtrOutputWithContext(ctx context.Context) ApplicationApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationApi) *ApplicationApi {
		return &v
	}).(ApplicationApiPtrOutput)
}

// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
func (o ApplicationApiOutput) KnownClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationApi) []string { return v.KnownClientApplications }).(pulumi.StringArrayOutput)
}

// Allows an application to use claims mapping without specifying a custom signing key. Defaults to `false`.
func (o ApplicationApiOutput) MappedClaimsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationApi) *bool { return v.MappedClaimsEnabled }).(pulumi.BoolPtrOutput)
}

// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
func (o ApplicationApiOutput) Oauth2PermissionScopes() ApplicationApiOauth2PermissionScopeArrayOutput {
	return o.ApplyT(func(v ApplicationApi) []ApplicationApiOauth2PermissionScope { return v.Oauth2PermissionScopes }).(ApplicationApiOauth2PermissionScopeArrayOutput)
}

// The access token version expected by this resource. Must be one of `1` or `2`, and must be `2` when `signInAudience` is either `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount` Defaults to `1`.
func (o ApplicationApiOutput) RequestedAccessTokenVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationApi) *int { return v.RequestedAccessTokenVersion }).(pulumi.IntPtrOutput)
}

type ApplicationApiPtrOutput struct{ *pulumi.OutputState }

func (ApplicationApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationApi)(nil)).Elem()
}

func (o ApplicationApiPtrOutput) ToApplicationApiPtrOutput() ApplicationApiPtrOutput {
	return o
}

func (o ApplicationApiPtrOutput) ToApplicationApiPtrOutputWithContext(ctx context.Context) ApplicationApiPtrOutput {
	return o
}

func (o ApplicationApiPtrOutput) Elem() ApplicationApiOutput {
	return o.ApplyT(func(v *ApplicationApi) ApplicationApi {
		if v != nil {
			return *v
		}
		var ret ApplicationApi
		return ret
	}).(ApplicationApiOutput)
}

// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
func (o ApplicationApiPtrOutput) KnownClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationApi) []string {
		if v == nil {
			return nil
		}
		return v.KnownClientApplications
	}).(pulumi.StringArrayOutput)
}

// Allows an application to use claims mapping without specifying a custom signing key. Defaults to `false`.
func (o ApplicationApiPtrOutput) MappedClaimsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationApi) *bool {
		if v == nil {
			return nil
		}
		return v.MappedClaimsEnabled
	}).(pulumi.BoolPtrOutput)
}

// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
func (o ApplicationApiPtrOutput) Oauth2PermissionScopes() ApplicationApiOauth2PermissionScopeArrayOutput {
	return o.ApplyT(func(v *ApplicationApi) []ApplicationApiOauth2PermissionScope {
		if v == nil {
			return nil
		}
		return v.Oauth2PermissionScopes
	}).(ApplicationApiOauth2PermissionScopeArrayOutput)
}

// The access token version expected by this resource. Must be one of `1` or `2`, and must be `2` when `signInAudience` is either `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount` Defaults to `1`.
func (o ApplicationApiPtrOutput) RequestedAccessTokenVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationApi) *int {
		if v == nil {
			return nil
		}
		return v.RequestedAccessTokenVersion
	}).(pulumi.IntPtrOutput)
}

type ApplicationApiOauth2PermissionScope struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription *string `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName *string `pulumi:"adminConsentDisplayName"`
	// Determines if the permission scope is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The unique identifier of the delegated permission. Must be a valid UUID.
	Id string `pulumi:"id"`
	// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.
	Type *string `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription *string `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName *string `pulumi:"userConsentDisplayName"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value *string `pulumi:"value"`
}

// ApplicationApiOauth2PermissionScopeInput is an input type that accepts ApplicationApiOauth2PermissionScopeArgs and ApplicationApiOauth2PermissionScopeOutput values.
// You can construct a concrete instance of `ApplicationApiOauth2PermissionScopeInput` via:
//
//          ApplicationApiOauth2PermissionScopeArgs{...}
type ApplicationApiOauth2PermissionScopeInput interface {
	pulumi.Input

	ToApplicationApiOauth2PermissionScopeOutput() ApplicationApiOauth2PermissionScopeOutput
	ToApplicationApiOauth2PermissionScopeOutputWithContext(context.Context) ApplicationApiOauth2PermissionScopeOutput
}

type ApplicationApiOauth2PermissionScopeArgs struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription pulumi.StringPtrInput `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName pulumi.StringPtrInput `pulumi:"adminConsentDisplayName"`
	// Determines if the permission scope is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The unique identifier of the delegated permission. Must be a valid UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription pulumi.StringPtrInput `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName pulumi.StringPtrInput `pulumi:"userConsentDisplayName"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationApiOauth2PermissionScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (i ApplicationApiOauth2PermissionScopeArgs) ToApplicationApiOauth2PermissionScopeOutput() ApplicationApiOauth2PermissionScopeOutput {
	return i.ToApplicationApiOauth2PermissionScopeOutputWithContext(context.Background())
}

func (i ApplicationApiOauth2PermissionScopeArgs) ToApplicationApiOauth2PermissionScopeOutputWithContext(ctx context.Context) ApplicationApiOauth2PermissionScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApiOauth2PermissionScopeOutput)
}

// ApplicationApiOauth2PermissionScopeArrayInput is an input type that accepts ApplicationApiOauth2PermissionScopeArray and ApplicationApiOauth2PermissionScopeArrayOutput values.
// You can construct a concrete instance of `ApplicationApiOauth2PermissionScopeArrayInput` via:
//
//          ApplicationApiOauth2PermissionScopeArray{ ApplicationApiOauth2PermissionScopeArgs{...} }
type ApplicationApiOauth2PermissionScopeArrayInput interface {
	pulumi.Input

	ToApplicationApiOauth2PermissionScopeArrayOutput() ApplicationApiOauth2PermissionScopeArrayOutput
	ToApplicationApiOauth2PermissionScopeArrayOutputWithContext(context.Context) ApplicationApiOauth2PermissionScopeArrayOutput
}

type ApplicationApiOauth2PermissionScopeArray []ApplicationApiOauth2PermissionScopeInput

func (ApplicationApiOauth2PermissionScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (i ApplicationApiOauth2PermissionScopeArray) ToApplicationApiOauth2PermissionScopeArrayOutput() ApplicationApiOauth2PermissionScopeArrayOutput {
	return i.ToApplicationApiOauth2PermissionScopeArrayOutputWithContext(context.Background())
}

func (i ApplicationApiOauth2PermissionScopeArray) ToApplicationApiOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) ApplicationApiOauth2PermissionScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApiOauth2PermissionScopeArrayOutput)
}

type ApplicationApiOauth2PermissionScopeOutput struct{ *pulumi.OutputState }

func (ApplicationApiOauth2PermissionScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (o ApplicationApiOauth2PermissionScopeOutput) ToApplicationApiOauth2PermissionScopeOutput() ApplicationApiOauth2PermissionScopeOutput {
	return o
}

func (o ApplicationApiOauth2PermissionScopeOutput) ToApplicationApiOauth2PermissionScopeOutputWithContext(ctx context.Context) ApplicationApiOauth2PermissionScopeOutput {
	return o
}

// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
func (o ApplicationApiOauth2PermissionScopeOutput) AdminConsentDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *string { return v.AdminConsentDescription }).(pulumi.StringPtrOutput)
}

// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
func (o ApplicationApiOauth2PermissionScopeOutput) AdminConsentDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *string { return v.AdminConsentDisplayName }).(pulumi.StringPtrOutput)
}

// Determines if the permission scope is enabled. Defaults to `true`.
func (o ApplicationApiOauth2PermissionScopeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The unique identifier of the delegated permission. Must be a valid UUID.
func (o ApplicationApiOauth2PermissionScopeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) string { return v.Id }).(pulumi.StringOutput)
}

// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to `User`. Possible values are `User` or `Admin`.
func (o ApplicationApiOauth2PermissionScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
func (o ApplicationApiOauth2PermissionScopeOutput) UserConsentDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *string { return v.UserConsentDescription }).(pulumi.StringPtrOutput)
}

// Display name for the delegated permission that appears in the end user consent experience.
func (o ApplicationApiOauth2PermissionScopeOutput) UserConsentDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *string { return v.UserConsentDisplayName }).(pulumi.StringPtrOutput)
}

// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
func (o ApplicationApiOauth2PermissionScopeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationApiOauth2PermissionScope) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationApiOauth2PermissionScopeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationApiOauth2PermissionScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (o ApplicationApiOauth2PermissionScopeArrayOutput) ToApplicationApiOauth2PermissionScopeArrayOutput() ApplicationApiOauth2PermissionScopeArrayOutput {
	return o
}

func (o ApplicationApiOauth2PermissionScopeArrayOutput) ToApplicationApiOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) ApplicationApiOauth2PermissionScopeArrayOutput {
	return o
}

func (o ApplicationApiOauth2PermissionScopeArrayOutput) Index(i pulumi.IntInput) ApplicationApiOauth2PermissionScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationApiOauth2PermissionScope {
		return vs[0].([]ApplicationApiOauth2PermissionScope)[vs[1].(int)]
	}).(ApplicationApiOauth2PermissionScopeOutput)
}

type ApplicationAppRole struct {
	// Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.
	AllowedMemberTypes []string `pulumi:"allowedMemberTypes"`
	// Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
	Description string `pulumi:"description"`
	// Display name for the app role that appears during app role assignment and in consent experiences.
	DisplayName string `pulumi:"displayName"`
	// Determines if the app role is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The unique identifier of the app role. Must be a valid UUID.
	Id string `pulumi:"id"`
	// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
	Value *string `pulumi:"value"`
}

// ApplicationAppRoleInput is an input type that accepts ApplicationAppRoleArgs and ApplicationAppRoleOutput values.
// You can construct a concrete instance of `ApplicationAppRoleInput` via:
//
//          ApplicationAppRoleArgs{...}
type ApplicationAppRoleInput interface {
	pulumi.Input

	ToApplicationAppRoleOutput() ApplicationAppRoleOutput
	ToApplicationAppRoleOutputWithContext(context.Context) ApplicationAppRoleOutput
}

type ApplicationAppRoleArgs struct {
	// Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.
	AllowedMemberTypes pulumi.StringArrayInput `pulumi:"allowedMemberTypes"`
	// Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
	Description pulumi.StringInput `pulumi:"description"`
	// Display name for the app role that appears during app role assignment and in consent experiences.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Determines if the app role is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The unique identifier of the app role. Must be a valid UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppRole)(nil)).Elem()
}

func (i ApplicationAppRoleArgs) ToApplicationAppRoleOutput() ApplicationAppRoleOutput {
	return i.ToApplicationAppRoleOutputWithContext(context.Background())
}

func (i ApplicationAppRoleArgs) ToApplicationAppRoleOutputWithContext(ctx context.Context) ApplicationAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppRoleOutput)
}

// ApplicationAppRoleArrayInput is an input type that accepts ApplicationAppRoleArray and ApplicationAppRoleArrayOutput values.
// You can construct a concrete instance of `ApplicationAppRoleArrayInput` via:
//
//          ApplicationAppRoleArray{ ApplicationAppRoleArgs{...} }
type ApplicationAppRoleArrayInput interface {
	pulumi.Input

	ToApplicationAppRoleArrayOutput() ApplicationAppRoleArrayOutput
	ToApplicationAppRoleArrayOutputWithContext(context.Context) ApplicationAppRoleArrayOutput
}

type ApplicationAppRoleArray []ApplicationAppRoleInput

func (ApplicationAppRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppRole)(nil)).Elem()
}

func (i ApplicationAppRoleArray) ToApplicationAppRoleArrayOutput() ApplicationAppRoleArrayOutput {
	return i.ToApplicationAppRoleArrayOutputWithContext(context.Background())
}

func (i ApplicationAppRoleArray) ToApplicationAppRoleArrayOutputWithContext(ctx context.Context) ApplicationAppRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppRoleArrayOutput)
}

type ApplicationAppRoleOutput struct{ *pulumi.OutputState }

func (ApplicationAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppRole)(nil)).Elem()
}

func (o ApplicationAppRoleOutput) ToApplicationAppRoleOutput() ApplicationAppRoleOutput {
	return o
}

func (o ApplicationAppRoleOutput) ToApplicationAppRoleOutputWithContext(ctx context.Context) ApplicationAppRoleOutput {
	return o
}

// Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.
func (o ApplicationAppRoleOutput) AllowedMemberTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationAppRole) []string { return v.AllowedMemberTypes }).(pulumi.StringArrayOutput)
}

// Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
func (o ApplicationAppRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAppRole) string { return v.Description }).(pulumi.StringOutput)
}

// Display name for the app role that appears during app role assignment and in consent experiences.
func (o ApplicationAppRoleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAppRole) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Determines if the app role is enabled. Defaults to `true`.
func (o ApplicationAppRoleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationAppRole) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The unique identifier of the app role. Must be a valid UUID.
func (o ApplicationAppRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAppRole) string { return v.Id }).(pulumi.StringOutput)
}

// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
func (o ApplicationAppRoleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppRole) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationAppRoleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAppRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppRole)(nil)).Elem()
}

func (o ApplicationAppRoleArrayOutput) ToApplicationAppRoleArrayOutput() ApplicationAppRoleArrayOutput {
	return o
}

func (o ApplicationAppRoleArrayOutput) ToApplicationAppRoleArrayOutputWithContext(ctx context.Context) ApplicationAppRoleArrayOutput {
	return o
}

func (o ApplicationAppRoleArrayOutput) Index(i pulumi.IntInput) ApplicationAppRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAppRole {
		return vs[0].([]ApplicationAppRole)[vs[1].(int)]
	}).(ApplicationAppRoleOutput)
}

type ApplicationFeatureTag struct {
	// Whether this application represents a custom SAML application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryCustomSingleSignOnApplication` tag. Defaults to `false`.
	CustomSingleSignOn *bool `pulumi:"customSingleSignOn"`
	// Whether this application represents an Enterprise Application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryIntegratedApp` tag. Defaults to `false`.
	Enterprise *bool `pulumi:"enterprise"`
	// Whether this application represents a gallery application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1` tag. Defaults to `false`.
	Gallery *bool `pulumi:"gallery"`
	// Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the `HideApp` tag. Defaults to `false`.
	Hide *bool `pulumi:"hide"`
}

// ApplicationFeatureTagInput is an input type that accepts ApplicationFeatureTagArgs and ApplicationFeatureTagOutput values.
// You can construct a concrete instance of `ApplicationFeatureTagInput` via:
//
//          ApplicationFeatureTagArgs{...}
type ApplicationFeatureTagInput interface {
	pulumi.Input

	ToApplicationFeatureTagOutput() ApplicationFeatureTagOutput
	ToApplicationFeatureTagOutputWithContext(context.Context) ApplicationFeatureTagOutput
}

type ApplicationFeatureTagArgs struct {
	// Whether this application represents a custom SAML application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryCustomSingleSignOnApplication` tag. Defaults to `false`.
	CustomSingleSignOn pulumi.BoolPtrInput `pulumi:"customSingleSignOn"`
	// Whether this application represents an Enterprise Application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryIntegratedApp` tag. Defaults to `false`.
	Enterprise pulumi.BoolPtrInput `pulumi:"enterprise"`
	// Whether this application represents a gallery application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1` tag. Defaults to `false`.
	Gallery pulumi.BoolPtrInput `pulumi:"gallery"`
	// Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the `HideApp` tag. Defaults to `false`.
	Hide pulumi.BoolPtrInput `pulumi:"hide"`
}

func (ApplicationFeatureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationFeatureTag)(nil)).Elem()
}

func (i ApplicationFeatureTagArgs) ToApplicationFeatureTagOutput() ApplicationFeatureTagOutput {
	return i.ToApplicationFeatureTagOutputWithContext(context.Background())
}

func (i ApplicationFeatureTagArgs) ToApplicationFeatureTagOutputWithContext(ctx context.Context) ApplicationFeatureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationFeatureTagOutput)
}

// ApplicationFeatureTagArrayInput is an input type that accepts ApplicationFeatureTagArray and ApplicationFeatureTagArrayOutput values.
// You can construct a concrete instance of `ApplicationFeatureTagArrayInput` via:
//
//          ApplicationFeatureTagArray{ ApplicationFeatureTagArgs{...} }
type ApplicationFeatureTagArrayInput interface {
	pulumi.Input

	ToApplicationFeatureTagArrayOutput() ApplicationFeatureTagArrayOutput
	ToApplicationFeatureTagArrayOutputWithContext(context.Context) ApplicationFeatureTagArrayOutput
}

type ApplicationFeatureTagArray []ApplicationFeatureTagInput

func (ApplicationFeatureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationFeatureTag)(nil)).Elem()
}

func (i ApplicationFeatureTagArray) ToApplicationFeatureTagArrayOutput() ApplicationFeatureTagArrayOutput {
	return i.ToApplicationFeatureTagArrayOutputWithContext(context.Background())
}

func (i ApplicationFeatureTagArray) ToApplicationFeatureTagArrayOutputWithContext(ctx context.Context) ApplicationFeatureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationFeatureTagArrayOutput)
}

type ApplicationFeatureTagOutput struct{ *pulumi.OutputState }

func (ApplicationFeatureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationFeatureTag)(nil)).Elem()
}

func (o ApplicationFeatureTagOutput) ToApplicationFeatureTagOutput() ApplicationFeatureTagOutput {
	return o
}

func (o ApplicationFeatureTagOutput) ToApplicationFeatureTagOutputWithContext(ctx context.Context) ApplicationFeatureTagOutput {
	return o
}

// Whether this application represents a custom SAML application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryCustomSingleSignOnApplication` tag. Defaults to `false`.
func (o ApplicationFeatureTagOutput) CustomSingleSignOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationFeatureTag) *bool { return v.CustomSingleSignOn }).(pulumi.BoolPtrOutput)
}

// Whether this application represents an Enterprise Application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryIntegratedApp` tag. Defaults to `false`.
func (o ApplicationFeatureTagOutput) Enterprise() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationFeatureTag) *bool { return v.Enterprise }).(pulumi.BoolPtrOutput)
}

// Whether this application represents a gallery application for linked service principals. Enabling this will assign the `WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1` tag. Defaults to `false`.
func (o ApplicationFeatureTagOutput) Gallery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationFeatureTag) *bool { return v.Gallery }).(pulumi.BoolPtrOutput)
}

// Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the `HideApp` tag. Defaults to `false`.
func (o ApplicationFeatureTagOutput) Hide() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationFeatureTag) *bool { return v.Hide }).(pulumi.BoolPtrOutput)
}

type ApplicationFeatureTagArrayOutput struct{ *pulumi.OutputState }

func (ApplicationFeatureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationFeatureTag)(nil)).Elem()
}

func (o ApplicationFeatureTagArrayOutput) ToApplicationFeatureTagArrayOutput() ApplicationFeatureTagArrayOutput {
	return o
}

func (o ApplicationFeatureTagArrayOutput) ToApplicationFeatureTagArrayOutputWithContext(ctx context.Context) ApplicationFeatureTagArrayOutput {
	return o
}

func (o ApplicationFeatureTagArrayOutput) Index(i pulumi.IntInput) ApplicationFeatureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationFeatureTag {
		return vs[0].([]ApplicationFeatureTag)[vs[1].(int)]
	}).(ApplicationFeatureTagOutput)
}

type ApplicationOptionalClaims struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens []ApplicationOptionalClaimsAccessToken `pulumi:"accessTokens"`
	// One or more `idToken` blocks as documented below.
	IdTokens []ApplicationOptionalClaimsIdToken `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	Saml2Tokens []ApplicationOptionalClaimsSaml2Token `pulumi:"saml2Tokens"`
}

// ApplicationOptionalClaimsInput is an input type that accepts ApplicationOptionalClaimsArgs and ApplicationOptionalClaimsOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsInput` via:
//
//          ApplicationOptionalClaimsArgs{...}
type ApplicationOptionalClaimsInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsOutput() ApplicationOptionalClaimsOutput
	ToApplicationOptionalClaimsOutputWithContext(context.Context) ApplicationOptionalClaimsOutput
}

type ApplicationOptionalClaimsArgs struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens ApplicationOptionalClaimsAccessTokenArrayInput `pulumi:"accessTokens"`
	// One or more `idToken` blocks as documented below.
	IdTokens ApplicationOptionalClaimsIdTokenArrayInput `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	Saml2Tokens ApplicationOptionalClaimsSaml2TokenArrayInput `pulumi:"saml2Tokens"`
}

func (ApplicationOptionalClaimsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaims)(nil)).Elem()
}

func (i ApplicationOptionalClaimsArgs) ToApplicationOptionalClaimsOutput() ApplicationOptionalClaimsOutput {
	return i.ToApplicationOptionalClaimsOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsArgs) ToApplicationOptionalClaimsOutputWithContext(ctx context.Context) ApplicationOptionalClaimsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsOutput)
}

func (i ApplicationOptionalClaimsArgs) ToApplicationOptionalClaimsPtrOutput() ApplicationOptionalClaimsPtrOutput {
	return i.ToApplicationOptionalClaimsPtrOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsArgs) ToApplicationOptionalClaimsPtrOutputWithContext(ctx context.Context) ApplicationOptionalClaimsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsOutput).ToApplicationOptionalClaimsPtrOutputWithContext(ctx)
}

// ApplicationOptionalClaimsPtrInput is an input type that accepts ApplicationOptionalClaimsArgs, ApplicationOptionalClaimsPtr and ApplicationOptionalClaimsPtrOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsPtrInput` via:
//
//          ApplicationOptionalClaimsArgs{...}
//
//  or:
//
//          nil
type ApplicationOptionalClaimsPtrInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsPtrOutput() ApplicationOptionalClaimsPtrOutput
	ToApplicationOptionalClaimsPtrOutputWithContext(context.Context) ApplicationOptionalClaimsPtrOutput
}

type applicationOptionalClaimsPtrType ApplicationOptionalClaimsArgs

func ApplicationOptionalClaimsPtr(v *ApplicationOptionalClaimsArgs) ApplicationOptionalClaimsPtrInput {
	return (*applicationOptionalClaimsPtrType)(v)
}

func (*applicationOptionalClaimsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOptionalClaims)(nil)).Elem()
}

func (i *applicationOptionalClaimsPtrType) ToApplicationOptionalClaimsPtrOutput() ApplicationOptionalClaimsPtrOutput {
	return i.ToApplicationOptionalClaimsPtrOutputWithContext(context.Background())
}

func (i *applicationOptionalClaimsPtrType) ToApplicationOptionalClaimsPtrOutputWithContext(ctx context.Context) ApplicationOptionalClaimsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsPtrOutput)
}

type ApplicationOptionalClaimsOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaims)(nil)).Elem()
}

func (o ApplicationOptionalClaimsOutput) ToApplicationOptionalClaimsOutput() ApplicationOptionalClaimsOutput {
	return o
}

func (o ApplicationOptionalClaimsOutput) ToApplicationOptionalClaimsOutputWithContext(ctx context.Context) ApplicationOptionalClaimsOutput {
	return o
}

func (o ApplicationOptionalClaimsOutput) ToApplicationOptionalClaimsPtrOutput() ApplicationOptionalClaimsPtrOutput {
	return o.ToApplicationOptionalClaimsPtrOutputWithContext(context.Background())
}

func (o ApplicationOptionalClaimsOutput) ToApplicationOptionalClaimsPtrOutputWithContext(ctx context.Context) ApplicationOptionalClaimsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationOptionalClaims) *ApplicationOptionalClaims {
		return &v
	}).(ApplicationOptionalClaimsPtrOutput)
}

// One or more `accessToken` blocks as documented below.
func (o ApplicationOptionalClaimsOutput) AccessTokens() ApplicationOptionalClaimsAccessTokenArrayOutput {
	return o.ApplyT(func(v ApplicationOptionalClaims) []ApplicationOptionalClaimsAccessToken { return v.AccessTokens }).(ApplicationOptionalClaimsAccessTokenArrayOutput)
}

// One or more `idToken` blocks as documented below.
func (o ApplicationOptionalClaimsOutput) IdTokens() ApplicationOptionalClaimsIdTokenArrayOutput {
	return o.ApplyT(func(v ApplicationOptionalClaims) []ApplicationOptionalClaimsIdToken { return v.IdTokens }).(ApplicationOptionalClaimsIdTokenArrayOutput)
}

// One or more `saml2Token` blocks as documented below.
func (o ApplicationOptionalClaimsOutput) Saml2Tokens() ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return o.ApplyT(func(v ApplicationOptionalClaims) []ApplicationOptionalClaimsSaml2Token { return v.Saml2Tokens }).(ApplicationOptionalClaimsSaml2TokenArrayOutput)
}

type ApplicationOptionalClaimsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOptionalClaims)(nil)).Elem()
}

func (o ApplicationOptionalClaimsPtrOutput) ToApplicationOptionalClaimsPtrOutput() ApplicationOptionalClaimsPtrOutput {
	return o
}

func (o ApplicationOptionalClaimsPtrOutput) ToApplicationOptionalClaimsPtrOutputWithContext(ctx context.Context) ApplicationOptionalClaimsPtrOutput {
	return o
}

func (o ApplicationOptionalClaimsPtrOutput) Elem() ApplicationOptionalClaimsOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) ApplicationOptionalClaims {
		if v != nil {
			return *v
		}
		var ret ApplicationOptionalClaims
		return ret
	}).(ApplicationOptionalClaimsOutput)
}

// One or more `accessToken` blocks as documented below.
func (o ApplicationOptionalClaimsPtrOutput) AccessTokens() ApplicationOptionalClaimsAccessTokenArrayOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) []ApplicationOptionalClaimsAccessToken {
		if v == nil {
			return nil
		}
		return v.AccessTokens
	}).(ApplicationOptionalClaimsAccessTokenArrayOutput)
}

// One or more `idToken` blocks as documented below.
func (o ApplicationOptionalClaimsPtrOutput) IdTokens() ApplicationOptionalClaimsIdTokenArrayOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) []ApplicationOptionalClaimsIdToken {
		if v == nil {
			return nil
		}
		return v.IdTokens
	}).(ApplicationOptionalClaimsIdTokenArrayOutput)
}

// One or more `saml2Token` blocks as documented below.
func (o ApplicationOptionalClaimsPtrOutput) Saml2Tokens() ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) []ApplicationOptionalClaimsSaml2Token {
		if v == nil {
			return nil
		}
		return v.Saml2Tokens
	}).(ApplicationOptionalClaimsSaml2TokenArrayOutput)
}

type ApplicationOptionalClaimsAccessToken struct {
	// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties []string `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential *bool `pulumi:"essential"`
	// The name of the optional claim.
	Name string `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source *string `pulumi:"source"`
}

// ApplicationOptionalClaimsAccessTokenInput is an input type that accepts ApplicationOptionalClaimsAccessTokenArgs and ApplicationOptionalClaimsAccessTokenOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsAccessTokenInput` via:
//
//          ApplicationOptionalClaimsAccessTokenArgs{...}
type ApplicationOptionalClaimsAccessTokenInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsAccessTokenOutput() ApplicationOptionalClaimsAccessTokenOutput
	ToApplicationOptionalClaimsAccessTokenOutputWithContext(context.Context) ApplicationOptionalClaimsAccessTokenOutput
}

type ApplicationOptionalClaimsAccessTokenArgs struct {
	// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties pulumi.StringArrayInput `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential pulumi.BoolPtrInput `pulumi:"essential"`
	// The name of the optional claim.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (ApplicationOptionalClaimsAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaimsAccessToken)(nil)).Elem()
}

func (i ApplicationOptionalClaimsAccessTokenArgs) ToApplicationOptionalClaimsAccessTokenOutput() ApplicationOptionalClaimsAccessTokenOutput {
	return i.ToApplicationOptionalClaimsAccessTokenOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsAccessTokenArgs) ToApplicationOptionalClaimsAccessTokenOutputWithContext(ctx context.Context) ApplicationOptionalClaimsAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsAccessTokenOutput)
}

// ApplicationOptionalClaimsAccessTokenArrayInput is an input type that accepts ApplicationOptionalClaimsAccessTokenArray and ApplicationOptionalClaimsAccessTokenArrayOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsAccessTokenArrayInput` via:
//
//          ApplicationOptionalClaimsAccessTokenArray{ ApplicationOptionalClaimsAccessTokenArgs{...} }
type ApplicationOptionalClaimsAccessTokenArrayInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsAccessTokenArrayOutput() ApplicationOptionalClaimsAccessTokenArrayOutput
	ToApplicationOptionalClaimsAccessTokenArrayOutputWithContext(context.Context) ApplicationOptionalClaimsAccessTokenArrayOutput
}

type ApplicationOptionalClaimsAccessTokenArray []ApplicationOptionalClaimsAccessTokenInput

func (ApplicationOptionalClaimsAccessTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOptionalClaimsAccessToken)(nil)).Elem()
}

func (i ApplicationOptionalClaimsAccessTokenArray) ToApplicationOptionalClaimsAccessTokenArrayOutput() ApplicationOptionalClaimsAccessTokenArrayOutput {
	return i.ToApplicationOptionalClaimsAccessTokenArrayOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsAccessTokenArray) ToApplicationOptionalClaimsAccessTokenArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsAccessTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsAccessTokenArrayOutput)
}

type ApplicationOptionalClaimsAccessTokenOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaimsAccessToken)(nil)).Elem()
}

func (o ApplicationOptionalClaimsAccessTokenOutput) ToApplicationOptionalClaimsAccessTokenOutput() ApplicationOptionalClaimsAccessTokenOutput {
	return o
}

func (o ApplicationOptionalClaimsAccessTokenOutput) ToApplicationOptionalClaimsAccessTokenOutputWithContext(ctx context.Context) ApplicationOptionalClaimsAccessTokenOutput {
	return o
}

// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
func (o ApplicationOptionalClaimsAccessTokenOutput) AdditionalProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsAccessToken) []string { return v.AdditionalProperties }).(pulumi.StringArrayOutput)
}

// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
func (o ApplicationOptionalClaimsAccessTokenOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsAccessToken) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

// The name of the optional claim.
func (o ApplicationOptionalClaimsAccessTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsAccessToken) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
func (o ApplicationOptionalClaimsAccessTokenOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsAccessToken) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type ApplicationOptionalClaimsAccessTokenArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsAccessTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOptionalClaimsAccessToken)(nil)).Elem()
}

func (o ApplicationOptionalClaimsAccessTokenArrayOutput) ToApplicationOptionalClaimsAccessTokenArrayOutput() ApplicationOptionalClaimsAccessTokenArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsAccessTokenArrayOutput) ToApplicationOptionalClaimsAccessTokenArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsAccessTokenArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsAccessTokenArrayOutput) Index(i pulumi.IntInput) ApplicationOptionalClaimsAccessTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOptionalClaimsAccessToken {
		return vs[0].([]ApplicationOptionalClaimsAccessToken)[vs[1].(int)]
	}).(ApplicationOptionalClaimsAccessTokenOutput)
}

type ApplicationOptionalClaimsIdToken struct {
	// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties []string `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential *bool `pulumi:"essential"`
	// The name of the optional claim.
	Name string `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source *string `pulumi:"source"`
}

// ApplicationOptionalClaimsIdTokenInput is an input type that accepts ApplicationOptionalClaimsIdTokenArgs and ApplicationOptionalClaimsIdTokenOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsIdTokenInput` via:
//
//          ApplicationOptionalClaimsIdTokenArgs{...}
type ApplicationOptionalClaimsIdTokenInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsIdTokenOutput() ApplicationOptionalClaimsIdTokenOutput
	ToApplicationOptionalClaimsIdTokenOutputWithContext(context.Context) ApplicationOptionalClaimsIdTokenOutput
}

type ApplicationOptionalClaimsIdTokenArgs struct {
	// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties pulumi.StringArrayInput `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential pulumi.BoolPtrInput `pulumi:"essential"`
	// The name of the optional claim.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (ApplicationOptionalClaimsIdTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaimsIdToken)(nil)).Elem()
}

func (i ApplicationOptionalClaimsIdTokenArgs) ToApplicationOptionalClaimsIdTokenOutput() ApplicationOptionalClaimsIdTokenOutput {
	return i.ToApplicationOptionalClaimsIdTokenOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsIdTokenArgs) ToApplicationOptionalClaimsIdTokenOutputWithContext(ctx context.Context) ApplicationOptionalClaimsIdTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsIdTokenOutput)
}

// ApplicationOptionalClaimsIdTokenArrayInput is an input type that accepts ApplicationOptionalClaimsIdTokenArray and ApplicationOptionalClaimsIdTokenArrayOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsIdTokenArrayInput` via:
//
//          ApplicationOptionalClaimsIdTokenArray{ ApplicationOptionalClaimsIdTokenArgs{...} }
type ApplicationOptionalClaimsIdTokenArrayInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsIdTokenArrayOutput() ApplicationOptionalClaimsIdTokenArrayOutput
	ToApplicationOptionalClaimsIdTokenArrayOutputWithContext(context.Context) ApplicationOptionalClaimsIdTokenArrayOutput
}

type ApplicationOptionalClaimsIdTokenArray []ApplicationOptionalClaimsIdTokenInput

func (ApplicationOptionalClaimsIdTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOptionalClaimsIdToken)(nil)).Elem()
}

func (i ApplicationOptionalClaimsIdTokenArray) ToApplicationOptionalClaimsIdTokenArrayOutput() ApplicationOptionalClaimsIdTokenArrayOutput {
	return i.ToApplicationOptionalClaimsIdTokenArrayOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsIdTokenArray) ToApplicationOptionalClaimsIdTokenArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsIdTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsIdTokenArrayOutput)
}

type ApplicationOptionalClaimsIdTokenOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsIdTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaimsIdToken)(nil)).Elem()
}

func (o ApplicationOptionalClaimsIdTokenOutput) ToApplicationOptionalClaimsIdTokenOutput() ApplicationOptionalClaimsIdTokenOutput {
	return o
}

func (o ApplicationOptionalClaimsIdTokenOutput) ToApplicationOptionalClaimsIdTokenOutputWithContext(ctx context.Context) ApplicationOptionalClaimsIdTokenOutput {
	return o
}

// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
func (o ApplicationOptionalClaimsIdTokenOutput) AdditionalProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsIdToken) []string { return v.AdditionalProperties }).(pulumi.StringArrayOutput)
}

// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
func (o ApplicationOptionalClaimsIdTokenOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsIdToken) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

// The name of the optional claim.
func (o ApplicationOptionalClaimsIdTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsIdToken) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
func (o ApplicationOptionalClaimsIdTokenOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsIdToken) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type ApplicationOptionalClaimsIdTokenArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsIdTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOptionalClaimsIdToken)(nil)).Elem()
}

func (o ApplicationOptionalClaimsIdTokenArrayOutput) ToApplicationOptionalClaimsIdTokenArrayOutput() ApplicationOptionalClaimsIdTokenArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsIdTokenArrayOutput) ToApplicationOptionalClaimsIdTokenArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsIdTokenArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsIdTokenArrayOutput) Index(i pulumi.IntInput) ApplicationOptionalClaimsIdTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOptionalClaimsIdToken {
		return vs[0].([]ApplicationOptionalClaimsIdToken)[vs[1].(int)]
	}).(ApplicationOptionalClaimsIdTokenOutput)
}

type ApplicationOptionalClaimsSaml2Token struct {
	// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties []string `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential *bool `pulumi:"essential"`
	// The name of the optional claim.
	Name string `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source *string `pulumi:"source"`
}

// ApplicationOptionalClaimsSaml2TokenInput is an input type that accepts ApplicationOptionalClaimsSaml2TokenArgs and ApplicationOptionalClaimsSaml2TokenOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsSaml2TokenInput` via:
//
//          ApplicationOptionalClaimsSaml2TokenArgs{...}
type ApplicationOptionalClaimsSaml2TokenInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsSaml2TokenOutput() ApplicationOptionalClaimsSaml2TokenOutput
	ToApplicationOptionalClaimsSaml2TokenOutputWithContext(context.Context) ApplicationOptionalClaimsSaml2TokenOutput
}

type ApplicationOptionalClaimsSaml2TokenArgs struct {
	// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties pulumi.StringArrayInput `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential pulumi.BoolPtrInput `pulumi:"essential"`
	// The name of the optional claim.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (ApplicationOptionalClaimsSaml2TokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaimsSaml2Token)(nil)).Elem()
}

func (i ApplicationOptionalClaimsSaml2TokenArgs) ToApplicationOptionalClaimsSaml2TokenOutput() ApplicationOptionalClaimsSaml2TokenOutput {
	return i.ToApplicationOptionalClaimsSaml2TokenOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsSaml2TokenArgs) ToApplicationOptionalClaimsSaml2TokenOutputWithContext(ctx context.Context) ApplicationOptionalClaimsSaml2TokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsSaml2TokenOutput)
}

// ApplicationOptionalClaimsSaml2TokenArrayInput is an input type that accepts ApplicationOptionalClaimsSaml2TokenArray and ApplicationOptionalClaimsSaml2TokenArrayOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsSaml2TokenArrayInput` via:
//
//          ApplicationOptionalClaimsSaml2TokenArray{ ApplicationOptionalClaimsSaml2TokenArgs{...} }
type ApplicationOptionalClaimsSaml2TokenArrayInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsSaml2TokenArrayOutput() ApplicationOptionalClaimsSaml2TokenArrayOutput
	ToApplicationOptionalClaimsSaml2TokenArrayOutputWithContext(context.Context) ApplicationOptionalClaimsSaml2TokenArrayOutput
}

type ApplicationOptionalClaimsSaml2TokenArray []ApplicationOptionalClaimsSaml2TokenInput

func (ApplicationOptionalClaimsSaml2TokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOptionalClaimsSaml2Token)(nil)).Elem()
}

func (i ApplicationOptionalClaimsSaml2TokenArray) ToApplicationOptionalClaimsSaml2TokenArrayOutput() ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return i.ToApplicationOptionalClaimsSaml2TokenArrayOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsSaml2TokenArray) ToApplicationOptionalClaimsSaml2TokenArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsSaml2TokenArrayOutput)
}

type ApplicationOptionalClaimsSaml2TokenOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsSaml2TokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOptionalClaimsSaml2Token)(nil)).Elem()
}

func (o ApplicationOptionalClaimsSaml2TokenOutput) ToApplicationOptionalClaimsSaml2TokenOutput() ApplicationOptionalClaimsSaml2TokenOutput {
	return o
}

func (o ApplicationOptionalClaimsSaml2TokenOutput) ToApplicationOptionalClaimsSaml2TokenOutputWithContext(ctx context.Context) ApplicationOptionalClaimsSaml2TokenOutput {
	return o
}

// List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
func (o ApplicationOptionalClaimsSaml2TokenOutput) AdditionalProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsSaml2Token) []string { return v.AdditionalProperties }).(pulumi.StringArrayOutput)
}

// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
func (o ApplicationOptionalClaimsSaml2TokenOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsSaml2Token) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

// The name of the optional claim.
func (o ApplicationOptionalClaimsSaml2TokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsSaml2Token) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
func (o ApplicationOptionalClaimsSaml2TokenOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOptionalClaimsSaml2Token) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type ApplicationOptionalClaimsSaml2TokenArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsSaml2TokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationOptionalClaimsSaml2Token)(nil)).Elem()
}

func (o ApplicationOptionalClaimsSaml2TokenArrayOutput) ToApplicationOptionalClaimsSaml2TokenArrayOutput() ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsSaml2TokenArrayOutput) ToApplicationOptionalClaimsSaml2TokenArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsSaml2TokenArrayOutput) Index(i pulumi.IntInput) ApplicationOptionalClaimsSaml2TokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationOptionalClaimsSaml2Token {
		return vs[0].([]ApplicationOptionalClaimsSaml2Token)[vs[1].(int)]
	}).(ApplicationOptionalClaimsSaml2TokenOutput)
}

type ApplicationPublicClient struct {
	// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` or `ms-appx-web` URL.
	RedirectUris []string `pulumi:"redirectUris"`
}

// ApplicationPublicClientInput is an input type that accepts ApplicationPublicClientArgs and ApplicationPublicClientOutput values.
// You can construct a concrete instance of `ApplicationPublicClientInput` via:
//
//          ApplicationPublicClientArgs{...}
type ApplicationPublicClientInput interface {
	pulumi.Input

	ToApplicationPublicClientOutput() ApplicationPublicClientOutput
	ToApplicationPublicClientOutputWithContext(context.Context) ApplicationPublicClientOutput
}

type ApplicationPublicClientArgs struct {
	// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` or `ms-appx-web` URL.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
}

func (ApplicationPublicClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPublicClient)(nil)).Elem()
}

func (i ApplicationPublicClientArgs) ToApplicationPublicClientOutput() ApplicationPublicClientOutput {
	return i.ToApplicationPublicClientOutputWithContext(context.Background())
}

func (i ApplicationPublicClientArgs) ToApplicationPublicClientOutputWithContext(ctx context.Context) ApplicationPublicClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPublicClientOutput)
}

func (i ApplicationPublicClientArgs) ToApplicationPublicClientPtrOutput() ApplicationPublicClientPtrOutput {
	return i.ToApplicationPublicClientPtrOutputWithContext(context.Background())
}

func (i ApplicationPublicClientArgs) ToApplicationPublicClientPtrOutputWithContext(ctx context.Context) ApplicationPublicClientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPublicClientOutput).ToApplicationPublicClientPtrOutputWithContext(ctx)
}

// ApplicationPublicClientPtrInput is an input type that accepts ApplicationPublicClientArgs, ApplicationPublicClientPtr and ApplicationPublicClientPtrOutput values.
// You can construct a concrete instance of `ApplicationPublicClientPtrInput` via:
//
//          ApplicationPublicClientArgs{...}
//
//  or:
//
//          nil
type ApplicationPublicClientPtrInput interface {
	pulumi.Input

	ToApplicationPublicClientPtrOutput() ApplicationPublicClientPtrOutput
	ToApplicationPublicClientPtrOutputWithContext(context.Context) ApplicationPublicClientPtrOutput
}

type applicationPublicClientPtrType ApplicationPublicClientArgs

func ApplicationPublicClientPtr(v *ApplicationPublicClientArgs) ApplicationPublicClientPtrInput {
	return (*applicationPublicClientPtrType)(v)
}

func (*applicationPublicClientPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPublicClient)(nil)).Elem()
}

func (i *applicationPublicClientPtrType) ToApplicationPublicClientPtrOutput() ApplicationPublicClientPtrOutput {
	return i.ToApplicationPublicClientPtrOutputWithContext(context.Background())
}

func (i *applicationPublicClientPtrType) ToApplicationPublicClientPtrOutputWithContext(ctx context.Context) ApplicationPublicClientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPublicClientPtrOutput)
}

type ApplicationPublicClientOutput struct{ *pulumi.OutputState }

func (ApplicationPublicClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPublicClient)(nil)).Elem()
}

func (o ApplicationPublicClientOutput) ToApplicationPublicClientOutput() ApplicationPublicClientOutput {
	return o
}

func (o ApplicationPublicClientOutput) ToApplicationPublicClientOutputWithContext(ctx context.Context) ApplicationPublicClientOutput {
	return o
}

func (o ApplicationPublicClientOutput) ToApplicationPublicClientPtrOutput() ApplicationPublicClientPtrOutput {
	return o.ToApplicationPublicClientPtrOutputWithContext(context.Background())
}

func (o ApplicationPublicClientOutput) ToApplicationPublicClientPtrOutputWithContext(ctx context.Context) ApplicationPublicClientPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationPublicClient) *ApplicationPublicClient {
		return &v
	}).(ApplicationPublicClientPtrOutput)
}

// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` or `ms-appx-web` URL.
func (o ApplicationPublicClientOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationPublicClient) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type ApplicationPublicClientPtrOutput struct{ *pulumi.OutputState }

func (ApplicationPublicClientPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPublicClient)(nil)).Elem()
}

func (o ApplicationPublicClientPtrOutput) ToApplicationPublicClientPtrOutput() ApplicationPublicClientPtrOutput {
	return o
}

func (o ApplicationPublicClientPtrOutput) ToApplicationPublicClientPtrOutputWithContext(ctx context.Context) ApplicationPublicClientPtrOutput {
	return o
}

func (o ApplicationPublicClientPtrOutput) Elem() ApplicationPublicClientOutput {
	return o.ApplyT(func(v *ApplicationPublicClient) ApplicationPublicClient {
		if v != nil {
			return *v
		}
		var ret ApplicationPublicClient
		return ret
	}).(ApplicationPublicClientOutput)
}

// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` or `ms-appx-web` URL.
func (o ApplicationPublicClientPtrOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationPublicClient) []string {
		if v == nil {
			return nil
		}
		return v.RedirectUris
	}).(pulumi.StringArrayOutput)
}

type ApplicationRequiredResourceAccess struct {
	// A collection of `resourceAccess` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
	ResourceAccesses []ApplicationRequiredResourceAccessResourceAccess `pulumi:"resourceAccesses"`
	// The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
	ResourceAppId string `pulumi:"resourceAppId"`
}

// ApplicationRequiredResourceAccessInput is an input type that accepts ApplicationRequiredResourceAccessArgs and ApplicationRequiredResourceAccessOutput values.
// You can construct a concrete instance of `ApplicationRequiredResourceAccessInput` via:
//
//          ApplicationRequiredResourceAccessArgs{...}
type ApplicationRequiredResourceAccessInput interface {
	pulumi.Input

	ToApplicationRequiredResourceAccessOutput() ApplicationRequiredResourceAccessOutput
	ToApplicationRequiredResourceAccessOutputWithContext(context.Context) ApplicationRequiredResourceAccessOutput
}

type ApplicationRequiredResourceAccessArgs struct {
	// A collection of `resourceAccess` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
	ResourceAccesses ApplicationRequiredResourceAccessResourceAccessArrayInput `pulumi:"resourceAccesses"`
	// The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
	ResourceAppId pulumi.StringInput `pulumi:"resourceAppId"`
}

func (ApplicationRequiredResourceAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRequiredResourceAccess)(nil)).Elem()
}

func (i ApplicationRequiredResourceAccessArgs) ToApplicationRequiredResourceAccessOutput() ApplicationRequiredResourceAccessOutput {
	return i.ToApplicationRequiredResourceAccessOutputWithContext(context.Background())
}

func (i ApplicationRequiredResourceAccessArgs) ToApplicationRequiredResourceAccessOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRequiredResourceAccessOutput)
}

// ApplicationRequiredResourceAccessArrayInput is an input type that accepts ApplicationRequiredResourceAccessArray and ApplicationRequiredResourceAccessArrayOutput values.
// You can construct a concrete instance of `ApplicationRequiredResourceAccessArrayInput` via:
//
//          ApplicationRequiredResourceAccessArray{ ApplicationRequiredResourceAccessArgs{...} }
type ApplicationRequiredResourceAccessArrayInput interface {
	pulumi.Input

	ToApplicationRequiredResourceAccessArrayOutput() ApplicationRequiredResourceAccessArrayOutput
	ToApplicationRequiredResourceAccessArrayOutputWithContext(context.Context) ApplicationRequiredResourceAccessArrayOutput
}

type ApplicationRequiredResourceAccessArray []ApplicationRequiredResourceAccessInput

func (ApplicationRequiredResourceAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationRequiredResourceAccess)(nil)).Elem()
}

func (i ApplicationRequiredResourceAccessArray) ToApplicationRequiredResourceAccessArrayOutput() ApplicationRequiredResourceAccessArrayOutput {
	return i.ToApplicationRequiredResourceAccessArrayOutputWithContext(context.Background())
}

func (i ApplicationRequiredResourceAccessArray) ToApplicationRequiredResourceAccessArrayOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRequiredResourceAccessArrayOutput)
}

type ApplicationRequiredResourceAccessOutput struct{ *pulumi.OutputState }

func (ApplicationRequiredResourceAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRequiredResourceAccess)(nil)).Elem()
}

func (o ApplicationRequiredResourceAccessOutput) ToApplicationRequiredResourceAccessOutput() ApplicationRequiredResourceAccessOutput {
	return o
}

func (o ApplicationRequiredResourceAccessOutput) ToApplicationRequiredResourceAccessOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessOutput {
	return o
}

// A collection of `resourceAccess` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
func (o ApplicationRequiredResourceAccessOutput) ResourceAccesses() ApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return o.ApplyT(func(v ApplicationRequiredResourceAccess) []ApplicationRequiredResourceAccessResourceAccess {
		return v.ResourceAccesses
	}).(ApplicationRequiredResourceAccessResourceAccessArrayOutput)
}

// The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
func (o ApplicationRequiredResourceAccessOutput) ResourceAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRequiredResourceAccess) string { return v.ResourceAppId }).(pulumi.StringOutput)
}

type ApplicationRequiredResourceAccessArrayOutput struct{ *pulumi.OutputState }

func (ApplicationRequiredResourceAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationRequiredResourceAccess)(nil)).Elem()
}

func (o ApplicationRequiredResourceAccessArrayOutput) ToApplicationRequiredResourceAccessArrayOutput() ApplicationRequiredResourceAccessArrayOutput {
	return o
}

func (o ApplicationRequiredResourceAccessArrayOutput) ToApplicationRequiredResourceAccessArrayOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessArrayOutput {
	return o
}

func (o ApplicationRequiredResourceAccessArrayOutput) Index(i pulumi.IntInput) ApplicationRequiredResourceAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationRequiredResourceAccess {
		return vs[0].([]ApplicationRequiredResourceAccess)[vs[1].(int)]
	}).(ApplicationRequiredResourceAccessOutput)
}

type ApplicationRequiredResourceAccessResourceAccess struct {
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id string `pulumi:"id"`
	// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
	Type string `pulumi:"type"`
}

// ApplicationRequiredResourceAccessResourceAccessInput is an input type that accepts ApplicationRequiredResourceAccessResourceAccessArgs and ApplicationRequiredResourceAccessResourceAccessOutput values.
// You can construct a concrete instance of `ApplicationRequiredResourceAccessResourceAccessInput` via:
//
//          ApplicationRequiredResourceAccessResourceAccessArgs{...}
type ApplicationRequiredResourceAccessResourceAccessInput interface {
	pulumi.Input

	ToApplicationRequiredResourceAccessResourceAccessOutput() ApplicationRequiredResourceAccessResourceAccessOutput
	ToApplicationRequiredResourceAccessResourceAccessOutputWithContext(context.Context) ApplicationRequiredResourceAccessResourceAccessOutput
}

type ApplicationRequiredResourceAccessResourceAccessArgs struct {
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationRequiredResourceAccessResourceAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (i ApplicationRequiredResourceAccessResourceAccessArgs) ToApplicationRequiredResourceAccessResourceAccessOutput() ApplicationRequiredResourceAccessResourceAccessOutput {
	return i.ToApplicationRequiredResourceAccessResourceAccessOutputWithContext(context.Background())
}

func (i ApplicationRequiredResourceAccessResourceAccessArgs) ToApplicationRequiredResourceAccessResourceAccessOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessResourceAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRequiredResourceAccessResourceAccessOutput)
}

// ApplicationRequiredResourceAccessResourceAccessArrayInput is an input type that accepts ApplicationRequiredResourceAccessResourceAccessArray and ApplicationRequiredResourceAccessResourceAccessArrayOutput values.
// You can construct a concrete instance of `ApplicationRequiredResourceAccessResourceAccessArrayInput` via:
//
//          ApplicationRequiredResourceAccessResourceAccessArray{ ApplicationRequiredResourceAccessResourceAccessArgs{...} }
type ApplicationRequiredResourceAccessResourceAccessArrayInput interface {
	pulumi.Input

	ToApplicationRequiredResourceAccessResourceAccessArrayOutput() ApplicationRequiredResourceAccessResourceAccessArrayOutput
	ToApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(context.Context) ApplicationRequiredResourceAccessResourceAccessArrayOutput
}

type ApplicationRequiredResourceAccessResourceAccessArray []ApplicationRequiredResourceAccessResourceAccessInput

func (ApplicationRequiredResourceAccessResourceAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (i ApplicationRequiredResourceAccessResourceAccessArray) ToApplicationRequiredResourceAccessResourceAccessArrayOutput() ApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return i.ToApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(context.Background())
}

func (i ApplicationRequiredResourceAccessResourceAccessArray) ToApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRequiredResourceAccessResourceAccessArrayOutput)
}

type ApplicationRequiredResourceAccessResourceAccessOutput struct{ *pulumi.OutputState }

func (ApplicationRequiredResourceAccessResourceAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (o ApplicationRequiredResourceAccessResourceAccessOutput) ToApplicationRequiredResourceAccessResourceAccessOutput() ApplicationRequiredResourceAccessResourceAccessOutput {
	return o
}

func (o ApplicationRequiredResourceAccessResourceAccessOutput) ToApplicationRequiredResourceAccessResourceAccessOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessResourceAccessOutput {
	return o
}

// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
func (o ApplicationRequiredResourceAccessResourceAccessOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRequiredResourceAccessResourceAccess) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
func (o ApplicationRequiredResourceAccessResourceAccessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRequiredResourceAccessResourceAccess) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationRequiredResourceAccessResourceAccessArrayOutput struct{ *pulumi.OutputState }

func (ApplicationRequiredResourceAccessResourceAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (o ApplicationRequiredResourceAccessResourceAccessArrayOutput) ToApplicationRequiredResourceAccessResourceAccessArrayOutput() ApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return o
}

func (o ApplicationRequiredResourceAccessResourceAccessArrayOutput) ToApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(ctx context.Context) ApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return o
}

func (o ApplicationRequiredResourceAccessResourceAccessArrayOutput) Index(i pulumi.IntInput) ApplicationRequiredResourceAccessResourceAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationRequiredResourceAccessResourceAccess {
		return vs[0].([]ApplicationRequiredResourceAccessResourceAccess)[vs[1].(int)]
	}).(ApplicationRequiredResourceAccessResourceAccessOutput)
}

type ApplicationSinglePageApplication struct {
	// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` URL.
	RedirectUris []string `pulumi:"redirectUris"`
}

// ApplicationSinglePageApplicationInput is an input type that accepts ApplicationSinglePageApplicationArgs and ApplicationSinglePageApplicationOutput values.
// You can construct a concrete instance of `ApplicationSinglePageApplicationInput` via:
//
//          ApplicationSinglePageApplicationArgs{...}
type ApplicationSinglePageApplicationInput interface {
	pulumi.Input

	ToApplicationSinglePageApplicationOutput() ApplicationSinglePageApplicationOutput
	ToApplicationSinglePageApplicationOutputWithContext(context.Context) ApplicationSinglePageApplicationOutput
}

type ApplicationSinglePageApplicationArgs struct {
	// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` URL.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
}

func (ApplicationSinglePageApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSinglePageApplication)(nil)).Elem()
}

func (i ApplicationSinglePageApplicationArgs) ToApplicationSinglePageApplicationOutput() ApplicationSinglePageApplicationOutput {
	return i.ToApplicationSinglePageApplicationOutputWithContext(context.Background())
}

func (i ApplicationSinglePageApplicationArgs) ToApplicationSinglePageApplicationOutputWithContext(ctx context.Context) ApplicationSinglePageApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSinglePageApplicationOutput)
}

func (i ApplicationSinglePageApplicationArgs) ToApplicationSinglePageApplicationPtrOutput() ApplicationSinglePageApplicationPtrOutput {
	return i.ToApplicationSinglePageApplicationPtrOutputWithContext(context.Background())
}

func (i ApplicationSinglePageApplicationArgs) ToApplicationSinglePageApplicationPtrOutputWithContext(ctx context.Context) ApplicationSinglePageApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSinglePageApplicationOutput).ToApplicationSinglePageApplicationPtrOutputWithContext(ctx)
}

// ApplicationSinglePageApplicationPtrInput is an input type that accepts ApplicationSinglePageApplicationArgs, ApplicationSinglePageApplicationPtr and ApplicationSinglePageApplicationPtrOutput values.
// You can construct a concrete instance of `ApplicationSinglePageApplicationPtrInput` via:
//
//          ApplicationSinglePageApplicationArgs{...}
//
//  or:
//
//          nil
type ApplicationSinglePageApplicationPtrInput interface {
	pulumi.Input

	ToApplicationSinglePageApplicationPtrOutput() ApplicationSinglePageApplicationPtrOutput
	ToApplicationSinglePageApplicationPtrOutputWithContext(context.Context) ApplicationSinglePageApplicationPtrOutput
}

type applicationSinglePageApplicationPtrType ApplicationSinglePageApplicationArgs

func ApplicationSinglePageApplicationPtr(v *ApplicationSinglePageApplicationArgs) ApplicationSinglePageApplicationPtrInput {
	return (*applicationSinglePageApplicationPtrType)(v)
}

func (*applicationSinglePageApplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSinglePageApplication)(nil)).Elem()
}

func (i *applicationSinglePageApplicationPtrType) ToApplicationSinglePageApplicationPtrOutput() ApplicationSinglePageApplicationPtrOutput {
	return i.ToApplicationSinglePageApplicationPtrOutputWithContext(context.Background())
}

func (i *applicationSinglePageApplicationPtrType) ToApplicationSinglePageApplicationPtrOutputWithContext(ctx context.Context) ApplicationSinglePageApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSinglePageApplicationPtrOutput)
}

type ApplicationSinglePageApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationSinglePageApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSinglePageApplication)(nil)).Elem()
}

func (o ApplicationSinglePageApplicationOutput) ToApplicationSinglePageApplicationOutput() ApplicationSinglePageApplicationOutput {
	return o
}

func (o ApplicationSinglePageApplicationOutput) ToApplicationSinglePageApplicationOutputWithContext(ctx context.Context) ApplicationSinglePageApplicationOutput {
	return o
}

func (o ApplicationSinglePageApplicationOutput) ToApplicationSinglePageApplicationPtrOutput() ApplicationSinglePageApplicationPtrOutput {
	return o.ToApplicationSinglePageApplicationPtrOutputWithContext(context.Background())
}

func (o ApplicationSinglePageApplicationOutput) ToApplicationSinglePageApplicationPtrOutputWithContext(ctx context.Context) ApplicationSinglePageApplicationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSinglePageApplication) *ApplicationSinglePageApplication {
		return &v
	}).(ApplicationSinglePageApplicationPtrOutput)
}

// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` URL.
func (o ApplicationSinglePageApplicationOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSinglePageApplication) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type ApplicationSinglePageApplicationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSinglePageApplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSinglePageApplication)(nil)).Elem()
}

func (o ApplicationSinglePageApplicationPtrOutput) ToApplicationSinglePageApplicationPtrOutput() ApplicationSinglePageApplicationPtrOutput {
	return o
}

func (o ApplicationSinglePageApplicationPtrOutput) ToApplicationSinglePageApplicationPtrOutputWithContext(ctx context.Context) ApplicationSinglePageApplicationPtrOutput {
	return o
}

func (o ApplicationSinglePageApplicationPtrOutput) Elem() ApplicationSinglePageApplicationOutput {
	return o.ApplyT(func(v *ApplicationSinglePageApplication) ApplicationSinglePageApplication {
		if v != nil {
			return *v
		}
		var ret ApplicationSinglePageApplication
		return ret
	}).(ApplicationSinglePageApplicationOutput)
}

// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `https` URL.
func (o ApplicationSinglePageApplicationPtrOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationSinglePageApplication) []string {
		if v == nil {
			return nil
		}
		return v.RedirectUris
	}).(pulumi.StringArrayOutput)
}

type ApplicationWeb struct {
	// Home page or landing page of the application.
	HomepageUrl *string `pulumi:"homepageUrl"`
	// An `implicitGrant` block as documented above.
	ImplicitGrant *ApplicationWebImplicitGrant `pulumi:"implicitGrant"`
	// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
	LogoutUrl *string `pulumi:"logoutUrl"`
	// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `http` URL or a URN.
	RedirectUris []string `pulumi:"redirectUris"`
}

// ApplicationWebInput is an input type that accepts ApplicationWebArgs and ApplicationWebOutput values.
// You can construct a concrete instance of `ApplicationWebInput` via:
//
//          ApplicationWebArgs{...}
type ApplicationWebInput interface {
	pulumi.Input

	ToApplicationWebOutput() ApplicationWebOutput
	ToApplicationWebOutputWithContext(context.Context) ApplicationWebOutput
}

type ApplicationWebArgs struct {
	// Home page or landing page of the application.
	HomepageUrl pulumi.StringPtrInput `pulumi:"homepageUrl"`
	// An `implicitGrant` block as documented above.
	ImplicitGrant ApplicationWebImplicitGrantPtrInput `pulumi:"implicitGrant"`
	// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
	LogoutUrl pulumi.StringPtrInput `pulumi:"logoutUrl"`
	// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `http` URL or a URN.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
}

func (ApplicationWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWeb)(nil)).Elem()
}

func (i ApplicationWebArgs) ToApplicationWebOutput() ApplicationWebOutput {
	return i.ToApplicationWebOutputWithContext(context.Background())
}

func (i ApplicationWebArgs) ToApplicationWebOutputWithContext(ctx context.Context) ApplicationWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWebOutput)
}

func (i ApplicationWebArgs) ToApplicationWebPtrOutput() ApplicationWebPtrOutput {
	return i.ToApplicationWebPtrOutputWithContext(context.Background())
}

func (i ApplicationWebArgs) ToApplicationWebPtrOutputWithContext(ctx context.Context) ApplicationWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWebOutput).ToApplicationWebPtrOutputWithContext(ctx)
}

// ApplicationWebPtrInput is an input type that accepts ApplicationWebArgs, ApplicationWebPtr and ApplicationWebPtrOutput values.
// You can construct a concrete instance of `ApplicationWebPtrInput` via:
//
//          ApplicationWebArgs{...}
//
//  or:
//
//          nil
type ApplicationWebPtrInput interface {
	pulumi.Input

	ToApplicationWebPtrOutput() ApplicationWebPtrOutput
	ToApplicationWebPtrOutputWithContext(context.Context) ApplicationWebPtrOutput
}

type applicationWebPtrType ApplicationWebArgs

func ApplicationWebPtr(v *ApplicationWebArgs) ApplicationWebPtrInput {
	return (*applicationWebPtrType)(v)
}

func (*applicationWebPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationWeb)(nil)).Elem()
}

func (i *applicationWebPtrType) ToApplicationWebPtrOutput() ApplicationWebPtrOutput {
	return i.ToApplicationWebPtrOutputWithContext(context.Background())
}

func (i *applicationWebPtrType) ToApplicationWebPtrOutputWithContext(ctx context.Context) ApplicationWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWebPtrOutput)
}

type ApplicationWebOutput struct{ *pulumi.OutputState }

func (ApplicationWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWeb)(nil)).Elem()
}

func (o ApplicationWebOutput) ToApplicationWebOutput() ApplicationWebOutput {
	return o
}

func (o ApplicationWebOutput) ToApplicationWebOutputWithContext(ctx context.Context) ApplicationWebOutput {
	return o
}

func (o ApplicationWebOutput) ToApplicationWebPtrOutput() ApplicationWebPtrOutput {
	return o.ToApplicationWebPtrOutputWithContext(context.Background())
}

func (o ApplicationWebOutput) ToApplicationWebPtrOutputWithContext(ctx context.Context) ApplicationWebPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationWeb) *ApplicationWeb {
		return &v
	}).(ApplicationWebPtrOutput)
}

// Home page or landing page of the application.
func (o ApplicationWebOutput) HomepageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationWeb) *string { return v.HomepageUrl }).(pulumi.StringPtrOutput)
}

// An `implicitGrant` block as documented above.
func (o ApplicationWebOutput) ImplicitGrant() ApplicationWebImplicitGrantPtrOutput {
	return o.ApplyT(func(v ApplicationWeb) *ApplicationWebImplicitGrant { return v.ImplicitGrant }).(ApplicationWebImplicitGrantPtrOutput)
}

// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
func (o ApplicationWebOutput) LogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationWeb) *string { return v.LogoutUrl }).(pulumi.StringPtrOutput)
}

// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `http` URL or a URN.
func (o ApplicationWebOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationWeb) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type ApplicationWebPtrOutput struct{ *pulumi.OutputState }

func (ApplicationWebPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationWeb)(nil)).Elem()
}

func (o ApplicationWebPtrOutput) ToApplicationWebPtrOutput() ApplicationWebPtrOutput {
	return o
}

func (o ApplicationWebPtrOutput) ToApplicationWebPtrOutputWithContext(ctx context.Context) ApplicationWebPtrOutput {
	return o
}

func (o ApplicationWebPtrOutput) Elem() ApplicationWebOutput {
	return o.ApplyT(func(v *ApplicationWeb) ApplicationWeb {
		if v != nil {
			return *v
		}
		var ret ApplicationWeb
		return ret
	}).(ApplicationWebOutput)
}

// Home page or landing page of the application.
func (o ApplicationWebPtrOutput) HomepageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationWeb) *string {
		if v == nil {
			return nil
		}
		return v.HomepageUrl
	}).(pulumi.StringPtrOutput)
}

// An `implicitGrant` block as documented above.
func (o ApplicationWebPtrOutput) ImplicitGrant() ApplicationWebImplicitGrantPtrOutput {
	return o.ApplyT(func(v *ApplicationWeb) *ApplicationWebImplicitGrant {
		if v == nil {
			return nil
		}
		return v.ImplicitGrant
	}).(ApplicationWebImplicitGrantPtrOutput)
}

// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
func (o ApplicationWebPtrOutput) LogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationWeb) *string {
		if v == nil {
			return nil
		}
		return v.LogoutUrl
	}).(pulumi.StringPtrOutput)
}

// A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `http` URL or a URN.
func (o ApplicationWebPtrOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationWeb) []string {
		if v == nil {
			return nil
		}
		return v.RedirectUris
	}).(pulumi.StringArrayOutput)
}

type ApplicationWebImplicitGrant struct {
	// Whether this web application can request an access token using OAuth 2.0 implicit flow.
	AccessTokenIssuanceEnabled *bool `pulumi:"accessTokenIssuanceEnabled"`
	// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
	IdTokenIssuanceEnabled *bool `pulumi:"idTokenIssuanceEnabled"`
}

// ApplicationWebImplicitGrantInput is an input type that accepts ApplicationWebImplicitGrantArgs and ApplicationWebImplicitGrantOutput values.
// You can construct a concrete instance of `ApplicationWebImplicitGrantInput` via:
//
//          ApplicationWebImplicitGrantArgs{...}
type ApplicationWebImplicitGrantInput interface {
	pulumi.Input

	ToApplicationWebImplicitGrantOutput() ApplicationWebImplicitGrantOutput
	ToApplicationWebImplicitGrantOutputWithContext(context.Context) ApplicationWebImplicitGrantOutput
}

type ApplicationWebImplicitGrantArgs struct {
	// Whether this web application can request an access token using OAuth 2.0 implicit flow.
	AccessTokenIssuanceEnabled pulumi.BoolPtrInput `pulumi:"accessTokenIssuanceEnabled"`
	// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
	IdTokenIssuanceEnabled pulumi.BoolPtrInput `pulumi:"idTokenIssuanceEnabled"`
}

func (ApplicationWebImplicitGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWebImplicitGrant)(nil)).Elem()
}

func (i ApplicationWebImplicitGrantArgs) ToApplicationWebImplicitGrantOutput() ApplicationWebImplicitGrantOutput {
	return i.ToApplicationWebImplicitGrantOutputWithContext(context.Background())
}

func (i ApplicationWebImplicitGrantArgs) ToApplicationWebImplicitGrantOutputWithContext(ctx context.Context) ApplicationWebImplicitGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWebImplicitGrantOutput)
}

func (i ApplicationWebImplicitGrantArgs) ToApplicationWebImplicitGrantPtrOutput() ApplicationWebImplicitGrantPtrOutput {
	return i.ToApplicationWebImplicitGrantPtrOutputWithContext(context.Background())
}

func (i ApplicationWebImplicitGrantArgs) ToApplicationWebImplicitGrantPtrOutputWithContext(ctx context.Context) ApplicationWebImplicitGrantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWebImplicitGrantOutput).ToApplicationWebImplicitGrantPtrOutputWithContext(ctx)
}

// ApplicationWebImplicitGrantPtrInput is an input type that accepts ApplicationWebImplicitGrantArgs, ApplicationWebImplicitGrantPtr and ApplicationWebImplicitGrantPtrOutput values.
// You can construct a concrete instance of `ApplicationWebImplicitGrantPtrInput` via:
//
//          ApplicationWebImplicitGrantArgs{...}
//
//  or:
//
//          nil
type ApplicationWebImplicitGrantPtrInput interface {
	pulumi.Input

	ToApplicationWebImplicitGrantPtrOutput() ApplicationWebImplicitGrantPtrOutput
	ToApplicationWebImplicitGrantPtrOutputWithContext(context.Context) ApplicationWebImplicitGrantPtrOutput
}

type applicationWebImplicitGrantPtrType ApplicationWebImplicitGrantArgs

func ApplicationWebImplicitGrantPtr(v *ApplicationWebImplicitGrantArgs) ApplicationWebImplicitGrantPtrInput {
	return (*applicationWebImplicitGrantPtrType)(v)
}

func (*applicationWebImplicitGrantPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationWebImplicitGrant)(nil)).Elem()
}

func (i *applicationWebImplicitGrantPtrType) ToApplicationWebImplicitGrantPtrOutput() ApplicationWebImplicitGrantPtrOutput {
	return i.ToApplicationWebImplicitGrantPtrOutputWithContext(context.Background())
}

func (i *applicationWebImplicitGrantPtrType) ToApplicationWebImplicitGrantPtrOutputWithContext(ctx context.Context) ApplicationWebImplicitGrantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWebImplicitGrantPtrOutput)
}

type ApplicationWebImplicitGrantOutput struct{ *pulumi.OutputState }

func (ApplicationWebImplicitGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWebImplicitGrant)(nil)).Elem()
}

func (o ApplicationWebImplicitGrantOutput) ToApplicationWebImplicitGrantOutput() ApplicationWebImplicitGrantOutput {
	return o
}

func (o ApplicationWebImplicitGrantOutput) ToApplicationWebImplicitGrantOutputWithContext(ctx context.Context) ApplicationWebImplicitGrantOutput {
	return o
}

func (o ApplicationWebImplicitGrantOutput) ToApplicationWebImplicitGrantPtrOutput() ApplicationWebImplicitGrantPtrOutput {
	return o.ToApplicationWebImplicitGrantPtrOutputWithContext(context.Background())
}

func (o ApplicationWebImplicitGrantOutput) ToApplicationWebImplicitGrantPtrOutputWithContext(ctx context.Context) ApplicationWebImplicitGrantPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationWebImplicitGrant) *ApplicationWebImplicitGrant {
		return &v
	}).(ApplicationWebImplicitGrantPtrOutput)
}

// Whether this web application can request an access token using OAuth 2.0 implicit flow.
func (o ApplicationWebImplicitGrantOutput) AccessTokenIssuanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationWebImplicitGrant) *bool { return v.AccessTokenIssuanceEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
func (o ApplicationWebImplicitGrantOutput) IdTokenIssuanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationWebImplicitGrant) *bool { return v.IdTokenIssuanceEnabled }).(pulumi.BoolPtrOutput)
}

type ApplicationWebImplicitGrantPtrOutput struct{ *pulumi.OutputState }

func (ApplicationWebImplicitGrantPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationWebImplicitGrant)(nil)).Elem()
}

func (o ApplicationWebImplicitGrantPtrOutput) ToApplicationWebImplicitGrantPtrOutput() ApplicationWebImplicitGrantPtrOutput {
	return o
}

func (o ApplicationWebImplicitGrantPtrOutput) ToApplicationWebImplicitGrantPtrOutputWithContext(ctx context.Context) ApplicationWebImplicitGrantPtrOutput {
	return o
}

func (o ApplicationWebImplicitGrantPtrOutput) Elem() ApplicationWebImplicitGrantOutput {
	return o.ApplyT(func(v *ApplicationWebImplicitGrant) ApplicationWebImplicitGrant {
		if v != nil {
			return *v
		}
		var ret ApplicationWebImplicitGrant
		return ret
	}).(ApplicationWebImplicitGrantOutput)
}

// Whether this web application can request an access token using OAuth 2.0 implicit flow.
func (o ApplicationWebImplicitGrantPtrOutput) AccessTokenIssuanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationWebImplicitGrant) *bool {
		if v == nil {
			return nil
		}
		return v.AccessTokenIssuanceEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
func (o ApplicationWebImplicitGrantPtrOutput) IdTokenIssuanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationWebImplicitGrant) *bool {
		if v == nil {
			return nil
		}
		return v.IdTokenIssuanceEnabled
	}).(pulumi.BoolPtrOutput)
}

type ConditionalAccessPolicyConditions struct {
	// An `applications` block as documented below, which specifies applications and user actions included in and excluded from the policy.
	Applications ConditionalAccessPolicyConditionsApplications `pulumi:"applications"`
	// A list of client application types included in the policy. Possible values are: `all`, `browser`, `mobileAppsAndDesktopClients`, `exchangeActiveSync`, `easSupported` and `other`.
	ClientAppTypes []string `pulumi:"clientAppTypes"`
	// A `devices` block as documented below, which describes devices to be included in and excluded from the policy. A `devices` block can be added to an existing policy, but removing the `devices` block forces a new resource to be created.
	Devices *ConditionalAccessPolicyConditionsDevices `pulumi:"devices"`
	// A `locations` block as documented below, which specifies locations included in and excluded from the policy.
	Locations ConditionalAccessPolicyConditionsLocations `pulumi:"locations"`
	// A `platforms` block as documented below, which specifies platforms included in and excluded from the policy.
	Platforms ConditionalAccessPolicyConditionsPlatforms `pulumi:"platforms"`
	// A list of sign-in risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
	SignInRiskLevels []string `pulumi:"signInRiskLevels"`
	// A list of user risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
	UserRiskLevels []string `pulumi:"userRiskLevels"`
	// A `users` block as documented below, which specifies users, groups, and roles included in and excluded from the policy.
	Users ConditionalAccessPolicyConditionsUsers `pulumi:"users"`
}

// ConditionalAccessPolicyConditionsInput is an input type that accepts ConditionalAccessPolicyConditionsArgs and ConditionalAccessPolicyConditionsOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsInput` via:
//
//          ConditionalAccessPolicyConditionsArgs{...}
type ConditionalAccessPolicyConditionsInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsOutput() ConditionalAccessPolicyConditionsOutput
	ToConditionalAccessPolicyConditionsOutputWithContext(context.Context) ConditionalAccessPolicyConditionsOutput
}

type ConditionalAccessPolicyConditionsArgs struct {
	// An `applications` block as documented below, which specifies applications and user actions included in and excluded from the policy.
	Applications ConditionalAccessPolicyConditionsApplicationsInput `pulumi:"applications"`
	// A list of client application types included in the policy. Possible values are: `all`, `browser`, `mobileAppsAndDesktopClients`, `exchangeActiveSync`, `easSupported` and `other`.
	ClientAppTypes pulumi.StringArrayInput `pulumi:"clientAppTypes"`
	// A `devices` block as documented below, which describes devices to be included in and excluded from the policy. A `devices` block can be added to an existing policy, but removing the `devices` block forces a new resource to be created.
	Devices ConditionalAccessPolicyConditionsDevicesPtrInput `pulumi:"devices"`
	// A `locations` block as documented below, which specifies locations included in and excluded from the policy.
	Locations ConditionalAccessPolicyConditionsLocationsInput `pulumi:"locations"`
	// A `platforms` block as documented below, which specifies platforms included in and excluded from the policy.
	Platforms ConditionalAccessPolicyConditionsPlatformsInput `pulumi:"platforms"`
	// A list of sign-in risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
	SignInRiskLevels pulumi.StringArrayInput `pulumi:"signInRiskLevels"`
	// A list of user risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
	UserRiskLevels pulumi.StringArrayInput `pulumi:"userRiskLevels"`
	// A `users` block as documented below, which specifies users, groups, and roles included in and excluded from the policy.
	Users ConditionalAccessPolicyConditionsUsersInput `pulumi:"users"`
}

func (ConditionalAccessPolicyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditions)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsArgs) ToConditionalAccessPolicyConditionsOutput() ConditionalAccessPolicyConditionsOutput {
	return i.ToConditionalAccessPolicyConditionsOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsArgs) ToConditionalAccessPolicyConditionsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsOutput)
}

func (i ConditionalAccessPolicyConditionsArgs) ToConditionalAccessPolicyConditionsPtrOutput() ConditionalAccessPolicyConditionsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsArgs) ToConditionalAccessPolicyConditionsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsOutput).ToConditionalAccessPolicyConditionsPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsPtrInput is an input type that accepts ConditionalAccessPolicyConditionsArgs, ConditionalAccessPolicyConditionsPtr and ConditionalAccessPolicyConditionsPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsPtrInput` via:
//
//          ConditionalAccessPolicyConditionsArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsPtrOutput() ConditionalAccessPolicyConditionsPtrOutput
	ToConditionalAccessPolicyConditionsPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsPtrOutput
}

type conditionalAccessPolicyConditionsPtrType ConditionalAccessPolicyConditionsArgs

func ConditionalAccessPolicyConditionsPtr(v *ConditionalAccessPolicyConditionsArgs) ConditionalAccessPolicyConditionsPtrInput {
	return (*conditionalAccessPolicyConditionsPtrType)(v)
}

func (*conditionalAccessPolicyConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditions)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsPtrType) ToConditionalAccessPolicyConditionsPtrOutput() ConditionalAccessPolicyConditionsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsPtrType) ToConditionalAccessPolicyConditionsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsPtrOutput)
}

type ConditionalAccessPolicyConditionsOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditions)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsOutput) ToConditionalAccessPolicyConditionsOutput() ConditionalAccessPolicyConditionsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsOutput) ToConditionalAccessPolicyConditionsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsOutput) ToConditionalAccessPolicyConditionsPtrOutput() ConditionalAccessPolicyConditionsPtrOutput {
	return o.ToConditionalAccessPolicyConditionsPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsOutput) ToConditionalAccessPolicyConditionsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditions {
		return &v
	}).(ConditionalAccessPolicyConditionsPtrOutput)
}

// An `applications` block as documented below, which specifies applications and user actions included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsOutput) Applications() ConditionalAccessPolicyConditionsApplicationsOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) ConditionalAccessPolicyConditionsApplications {
		return v.Applications
	}).(ConditionalAccessPolicyConditionsApplicationsOutput)
}

// A list of client application types included in the policy. Possible values are: `all`, `browser`, `mobileAppsAndDesktopClients`, `exchangeActiveSync`, `easSupported` and `other`.
func (o ConditionalAccessPolicyConditionsOutput) ClientAppTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) []string { return v.ClientAppTypes }).(pulumi.StringArrayOutput)
}

// A `devices` block as documented below, which describes devices to be included in and excluded from the policy. A `devices` block can be added to an existing policy, but removing the `devices` block forces a new resource to be created.
func (o ConditionalAccessPolicyConditionsOutput) Devices() ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditionsDevices { return v.Devices }).(ConditionalAccessPolicyConditionsDevicesPtrOutput)
}

// A `locations` block as documented below, which specifies locations included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsOutput) Locations() ConditionalAccessPolicyConditionsLocationsOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) ConditionalAccessPolicyConditionsLocations {
		return v.Locations
	}).(ConditionalAccessPolicyConditionsLocationsOutput)
}

// A `platforms` block as documented below, which specifies platforms included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsOutput) Platforms() ConditionalAccessPolicyConditionsPlatformsOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) ConditionalAccessPolicyConditionsPlatforms {
		return v.Platforms
	}).(ConditionalAccessPolicyConditionsPlatformsOutput)
}

// A list of sign-in risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsOutput) SignInRiskLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) []string { return v.SignInRiskLevels }).(pulumi.StringArrayOutput)
}

// A list of user risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsOutput) UserRiskLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) []string { return v.UserRiskLevels }).(pulumi.StringArrayOutput)
}

// A `users` block as documented below, which specifies users, groups, and roles included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsOutput) Users() ConditionalAccessPolicyConditionsUsersOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditions) ConditionalAccessPolicyConditionsUsers { return v.Users }).(ConditionalAccessPolicyConditionsUsersOutput)
}

type ConditionalAccessPolicyConditionsPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditions)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsPtrOutput) ToConditionalAccessPolicyConditionsPtrOutput() ConditionalAccessPolicyConditionsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsPtrOutput) ToConditionalAccessPolicyConditionsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsPtrOutput) Elem() ConditionalAccessPolicyConditionsOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) ConditionalAccessPolicyConditions {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditions
		return ret
	}).(ConditionalAccessPolicyConditionsOutput)
}

// An `applications` block as documented below, which specifies applications and user actions included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsPtrOutput) Applications() ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditionsApplications {
		if v == nil {
			return nil
		}
		return &v.Applications
	}).(ConditionalAccessPolicyConditionsApplicationsPtrOutput)
}

// A list of client application types included in the policy. Possible values are: `all`, `browser`, `mobileAppsAndDesktopClients`, `exchangeActiveSync`, `easSupported` and `other`.
func (o ConditionalAccessPolicyConditionsPtrOutput) ClientAppTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) []string {
		if v == nil {
			return nil
		}
		return v.ClientAppTypes
	}).(pulumi.StringArrayOutput)
}

// A `devices` block as documented below, which describes devices to be included in and excluded from the policy. A `devices` block can be added to an existing policy, but removing the `devices` block forces a new resource to be created.
func (o ConditionalAccessPolicyConditionsPtrOutput) Devices() ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditionsDevices {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(ConditionalAccessPolicyConditionsDevicesPtrOutput)
}

// A `locations` block as documented below, which specifies locations included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsPtrOutput) Locations() ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditionsLocations {
		if v == nil {
			return nil
		}
		return &v.Locations
	}).(ConditionalAccessPolicyConditionsLocationsPtrOutput)
}

// A `platforms` block as documented below, which specifies platforms included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsPtrOutput) Platforms() ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditionsPlatforms {
		if v == nil {
			return nil
		}
		return &v.Platforms
	}).(ConditionalAccessPolicyConditionsPlatformsPtrOutput)
}

// A list of sign-in risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsPtrOutput) SignInRiskLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) []string {
		if v == nil {
			return nil
		}
		return v.SignInRiskLevels
	}).(pulumi.StringArrayOutput)
}

// A list of user risk levels included in the policy. Possible values are: `low`, `medium`, `high`, `hidden`, `none`, `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsPtrOutput) UserRiskLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) []string {
		if v == nil {
			return nil
		}
		return v.UserRiskLevels
	}).(pulumi.StringArrayOutput)
}

// A `users` block as documented below, which specifies users, groups, and roles included in and excluded from the policy.
func (o ConditionalAccessPolicyConditionsPtrOutput) Users() ConditionalAccessPolicyConditionsUsersPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditions) *ConditionalAccessPolicyConditionsUsers {
		if v == nil {
			return nil
		}
		return &v.Users
	}).(ConditionalAccessPolicyConditionsUsersPtrOutput)
}

type ConditionalAccessPolicyConditionsApplications struct {
	// A list of application IDs explicitly excluded from the policy.
	ExcludedApplications []string `pulumi:"excludedApplications"`
	// A list of application IDs the policy applies to, unless explicitly excluded (in `excludedApplications`). Can also be set to `All`.
	IncludedApplications []string `pulumi:"includedApplications"`
	// A list of user actions to include. Supported values are `urn:user:registersecurityinfo` and `urn:user:registerdevice`.
	IncludedUserActions []string `pulumi:"includedUserActions"`
}

// ConditionalAccessPolicyConditionsApplicationsInput is an input type that accepts ConditionalAccessPolicyConditionsApplicationsArgs and ConditionalAccessPolicyConditionsApplicationsOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsApplicationsInput` via:
//
//          ConditionalAccessPolicyConditionsApplicationsArgs{...}
type ConditionalAccessPolicyConditionsApplicationsInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsApplicationsOutput() ConditionalAccessPolicyConditionsApplicationsOutput
	ToConditionalAccessPolicyConditionsApplicationsOutputWithContext(context.Context) ConditionalAccessPolicyConditionsApplicationsOutput
}

type ConditionalAccessPolicyConditionsApplicationsArgs struct {
	// A list of application IDs explicitly excluded from the policy.
	ExcludedApplications pulumi.StringArrayInput `pulumi:"excludedApplications"`
	// A list of application IDs the policy applies to, unless explicitly excluded (in `excludedApplications`). Can also be set to `All`.
	IncludedApplications pulumi.StringArrayInput `pulumi:"includedApplications"`
	// A list of user actions to include. Supported values are `urn:user:registersecurityinfo` and `urn:user:registerdevice`.
	IncludedUserActions pulumi.StringArrayInput `pulumi:"includedUserActions"`
}

func (ConditionalAccessPolicyConditionsApplicationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsApplications)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsApplicationsArgs) ToConditionalAccessPolicyConditionsApplicationsOutput() ConditionalAccessPolicyConditionsApplicationsOutput {
	return i.ToConditionalAccessPolicyConditionsApplicationsOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsApplicationsArgs) ToConditionalAccessPolicyConditionsApplicationsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsApplicationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsApplicationsOutput)
}

func (i ConditionalAccessPolicyConditionsApplicationsArgs) ToConditionalAccessPolicyConditionsApplicationsPtrOutput() ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsApplicationsArgs) ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsApplicationsOutput).ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsApplicationsPtrInput is an input type that accepts ConditionalAccessPolicyConditionsApplicationsArgs, ConditionalAccessPolicyConditionsApplicationsPtr and ConditionalAccessPolicyConditionsApplicationsPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsApplicationsPtrInput` via:
//
//          ConditionalAccessPolicyConditionsApplicationsArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsApplicationsPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsApplicationsPtrOutput() ConditionalAccessPolicyConditionsApplicationsPtrOutput
	ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsApplicationsPtrOutput
}

type conditionalAccessPolicyConditionsApplicationsPtrType ConditionalAccessPolicyConditionsApplicationsArgs

func ConditionalAccessPolicyConditionsApplicationsPtr(v *ConditionalAccessPolicyConditionsApplicationsArgs) ConditionalAccessPolicyConditionsApplicationsPtrInput {
	return (*conditionalAccessPolicyConditionsApplicationsPtrType)(v)
}

func (*conditionalAccessPolicyConditionsApplicationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsApplications)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsApplicationsPtrType) ToConditionalAccessPolicyConditionsApplicationsPtrOutput() ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsApplicationsPtrType) ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsApplicationsPtrOutput)
}

type ConditionalAccessPolicyConditionsApplicationsOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsApplicationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsApplications)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsApplicationsOutput) ToConditionalAccessPolicyConditionsApplicationsOutput() ConditionalAccessPolicyConditionsApplicationsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsApplicationsOutput) ToConditionalAccessPolicyConditionsApplicationsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsApplicationsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsApplicationsOutput) ToConditionalAccessPolicyConditionsApplicationsPtrOutput() ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return o.ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsApplicationsOutput) ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditionsApplications) *ConditionalAccessPolicyConditionsApplications {
		return &v
	}).(ConditionalAccessPolicyConditionsApplicationsPtrOutput)
}

// A list of application IDs explicitly excluded from the policy.
func (o ConditionalAccessPolicyConditionsApplicationsOutput) ExcludedApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsApplications) []string { return v.ExcludedApplications }).(pulumi.StringArrayOutput)
}

// A list of application IDs the policy applies to, unless explicitly excluded (in `excludedApplications`). Can also be set to `All`.
func (o ConditionalAccessPolicyConditionsApplicationsOutput) IncludedApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsApplications) []string { return v.IncludedApplications }).(pulumi.StringArrayOutput)
}

// A list of user actions to include. Supported values are `urn:user:registersecurityinfo` and `urn:user:registerdevice`.
func (o ConditionalAccessPolicyConditionsApplicationsOutput) IncludedUserActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsApplications) []string { return v.IncludedUserActions }).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsApplicationsPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsApplicationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsApplications)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsApplicationsPtrOutput) ToConditionalAccessPolicyConditionsApplicationsPtrOutput() ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsApplicationsPtrOutput) ToConditionalAccessPolicyConditionsApplicationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsApplicationsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsApplicationsPtrOutput) Elem() ConditionalAccessPolicyConditionsApplicationsOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsApplications) ConditionalAccessPolicyConditionsApplications {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditionsApplications
		return ret
	}).(ConditionalAccessPolicyConditionsApplicationsOutput)
}

// A list of application IDs explicitly excluded from the policy.
func (o ConditionalAccessPolicyConditionsApplicationsPtrOutput) ExcludedApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsApplications) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedApplications
	}).(pulumi.StringArrayOutput)
}

// A list of application IDs the policy applies to, unless explicitly excluded (in `excludedApplications`). Can also be set to `All`.
func (o ConditionalAccessPolicyConditionsApplicationsPtrOutput) IncludedApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsApplications) []string {
		if v == nil {
			return nil
		}
		return v.IncludedApplications
	}).(pulumi.StringArrayOutput)
}

// A list of user actions to include. Supported values are `urn:user:registersecurityinfo` and `urn:user:registerdevice`.
func (o ConditionalAccessPolicyConditionsApplicationsPtrOutput) IncludedUserActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsApplications) []string {
		if v == nil {
			return nil
		}
		return v.IncludedUserActions
	}).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsDevices struct {
	// A `filter` block as described below. A `filter` block can be added to an existing policy, but removing the `filter` block forces a new resource to be created.
	Filter *ConditionalAccessPolicyConditionsDevicesFilter `pulumi:"filter"`
}

// ConditionalAccessPolicyConditionsDevicesInput is an input type that accepts ConditionalAccessPolicyConditionsDevicesArgs and ConditionalAccessPolicyConditionsDevicesOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsDevicesInput` via:
//
//          ConditionalAccessPolicyConditionsDevicesArgs{...}
type ConditionalAccessPolicyConditionsDevicesInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsDevicesOutput() ConditionalAccessPolicyConditionsDevicesOutput
	ToConditionalAccessPolicyConditionsDevicesOutputWithContext(context.Context) ConditionalAccessPolicyConditionsDevicesOutput
}

type ConditionalAccessPolicyConditionsDevicesArgs struct {
	// A `filter` block as described below. A `filter` block can be added to an existing policy, but removing the `filter` block forces a new resource to be created.
	Filter ConditionalAccessPolicyConditionsDevicesFilterPtrInput `pulumi:"filter"`
}

func (ConditionalAccessPolicyConditionsDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsDevices)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsDevicesArgs) ToConditionalAccessPolicyConditionsDevicesOutput() ConditionalAccessPolicyConditionsDevicesOutput {
	return i.ToConditionalAccessPolicyConditionsDevicesOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsDevicesArgs) ToConditionalAccessPolicyConditionsDevicesOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsDevicesOutput)
}

func (i ConditionalAccessPolicyConditionsDevicesArgs) ToConditionalAccessPolicyConditionsDevicesPtrOutput() ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return i.ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsDevicesArgs) ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsDevicesOutput).ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsDevicesPtrInput is an input type that accepts ConditionalAccessPolicyConditionsDevicesArgs, ConditionalAccessPolicyConditionsDevicesPtr and ConditionalAccessPolicyConditionsDevicesPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsDevicesPtrInput` via:
//
//          ConditionalAccessPolicyConditionsDevicesArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsDevicesPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsDevicesPtrOutput() ConditionalAccessPolicyConditionsDevicesPtrOutput
	ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsDevicesPtrOutput
}

type conditionalAccessPolicyConditionsDevicesPtrType ConditionalAccessPolicyConditionsDevicesArgs

func ConditionalAccessPolicyConditionsDevicesPtr(v *ConditionalAccessPolicyConditionsDevicesArgs) ConditionalAccessPolicyConditionsDevicesPtrInput {
	return (*conditionalAccessPolicyConditionsDevicesPtrType)(v)
}

func (*conditionalAccessPolicyConditionsDevicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsDevices)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsDevicesPtrType) ToConditionalAccessPolicyConditionsDevicesPtrOutput() ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return i.ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsDevicesPtrType) ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsDevicesPtrOutput)
}

type ConditionalAccessPolicyConditionsDevicesOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsDevices)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsDevicesOutput) ToConditionalAccessPolicyConditionsDevicesOutput() ConditionalAccessPolicyConditionsDevicesOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesOutput) ToConditionalAccessPolicyConditionsDevicesOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesOutput) ToConditionalAccessPolicyConditionsDevicesPtrOutput() ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return o.ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsDevicesOutput) ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditionsDevices) *ConditionalAccessPolicyConditionsDevices {
		return &v
	}).(ConditionalAccessPolicyConditionsDevicesPtrOutput)
}

// A `filter` block as described below. A `filter` block can be added to an existing policy, but removing the `filter` block forces a new resource to be created.
func (o ConditionalAccessPolicyConditionsDevicesOutput) Filter() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsDevices) *ConditionalAccessPolicyConditionsDevicesFilter {
		return v.Filter
	}).(ConditionalAccessPolicyConditionsDevicesFilterPtrOutput)
}

type ConditionalAccessPolicyConditionsDevicesPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsDevicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsDevices)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsDevicesPtrOutput) ToConditionalAccessPolicyConditionsDevicesPtrOutput() ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesPtrOutput) ToConditionalAccessPolicyConditionsDevicesPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesPtrOutput) Elem() ConditionalAccessPolicyConditionsDevicesOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsDevices) ConditionalAccessPolicyConditionsDevices {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditionsDevices
		return ret
	}).(ConditionalAccessPolicyConditionsDevicesOutput)
}

// A `filter` block as described below. A `filter` block can be added to an existing policy, but removing the `filter` block forces a new resource to be created.
func (o ConditionalAccessPolicyConditionsDevicesPtrOutput) Filter() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsDevices) *ConditionalAccessPolicyConditionsDevicesFilter {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(ConditionalAccessPolicyConditionsDevicesFilterPtrOutput)
}

type ConditionalAccessPolicyConditionsDevicesFilter struct {
	// Whether to include in, or exclude from, matching devices from the policy. Supported values are `include` or `exclude`.
	Mode string `pulumi:"mode"`
	// Condition filter to match devices. For more information, see [official documentation](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-condition-filters-for-devices#supported-operators-and-device-properties-for-filters).
	Rule string `pulumi:"rule"`
}

// ConditionalAccessPolicyConditionsDevicesFilterInput is an input type that accepts ConditionalAccessPolicyConditionsDevicesFilterArgs and ConditionalAccessPolicyConditionsDevicesFilterOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsDevicesFilterInput` via:
//
//          ConditionalAccessPolicyConditionsDevicesFilterArgs{...}
type ConditionalAccessPolicyConditionsDevicesFilterInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsDevicesFilterOutput() ConditionalAccessPolicyConditionsDevicesFilterOutput
	ToConditionalAccessPolicyConditionsDevicesFilterOutputWithContext(context.Context) ConditionalAccessPolicyConditionsDevicesFilterOutput
}

type ConditionalAccessPolicyConditionsDevicesFilterArgs struct {
	// Whether to include in, or exclude from, matching devices from the policy. Supported values are `include` or `exclude`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Condition filter to match devices. For more information, see [official documentation](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-condition-filters-for-devices#supported-operators-and-device-properties-for-filters).
	Rule pulumi.StringInput `pulumi:"rule"`
}

func (ConditionalAccessPolicyConditionsDevicesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsDevicesFilter)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsDevicesFilterArgs) ToConditionalAccessPolicyConditionsDevicesFilterOutput() ConditionalAccessPolicyConditionsDevicesFilterOutput {
	return i.ToConditionalAccessPolicyConditionsDevicesFilterOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsDevicesFilterArgs) ToConditionalAccessPolicyConditionsDevicesFilterOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsDevicesFilterOutput)
}

func (i ConditionalAccessPolicyConditionsDevicesFilterArgs) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutput() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return i.ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsDevicesFilterArgs) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsDevicesFilterOutput).ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsDevicesFilterPtrInput is an input type that accepts ConditionalAccessPolicyConditionsDevicesFilterArgs, ConditionalAccessPolicyConditionsDevicesFilterPtr and ConditionalAccessPolicyConditionsDevicesFilterPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsDevicesFilterPtrInput` via:
//
//          ConditionalAccessPolicyConditionsDevicesFilterArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsDevicesFilterPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsDevicesFilterPtrOutput() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput
	ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsDevicesFilterPtrOutput
}

type conditionalAccessPolicyConditionsDevicesFilterPtrType ConditionalAccessPolicyConditionsDevicesFilterArgs

func ConditionalAccessPolicyConditionsDevicesFilterPtr(v *ConditionalAccessPolicyConditionsDevicesFilterArgs) ConditionalAccessPolicyConditionsDevicesFilterPtrInput {
	return (*conditionalAccessPolicyConditionsDevicesFilterPtrType)(v)
}

func (*conditionalAccessPolicyConditionsDevicesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsDevicesFilter)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsDevicesFilterPtrType) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutput() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return i.ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsDevicesFilterPtrType) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsDevicesFilterPtrOutput)
}

type ConditionalAccessPolicyConditionsDevicesFilterOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsDevicesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsDevicesFilter)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsDevicesFilterOutput) ToConditionalAccessPolicyConditionsDevicesFilterOutput() ConditionalAccessPolicyConditionsDevicesFilterOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesFilterOutput) ToConditionalAccessPolicyConditionsDevicesFilterOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesFilterOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesFilterOutput) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutput() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return o.ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsDevicesFilterOutput) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditionsDevicesFilter) *ConditionalAccessPolicyConditionsDevicesFilter {
		return &v
	}).(ConditionalAccessPolicyConditionsDevicesFilterPtrOutput)
}

// Whether to include in, or exclude from, matching devices from the policy. Supported values are `include` or `exclude`.
func (o ConditionalAccessPolicyConditionsDevicesFilterOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsDevicesFilter) string { return v.Mode }).(pulumi.StringOutput)
}

// Condition filter to match devices. For more information, see [official documentation](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-condition-filters-for-devices#supported-operators-and-device-properties-for-filters).
func (o ConditionalAccessPolicyConditionsDevicesFilterOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsDevicesFilter) string { return v.Rule }).(pulumi.StringOutput)
}

type ConditionalAccessPolicyConditionsDevicesFilterPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsDevicesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsDevicesFilter)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsDevicesFilterPtrOutput) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutput() ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesFilterPtrOutput) ToConditionalAccessPolicyConditionsDevicesFilterPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsDevicesFilterPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsDevicesFilterPtrOutput) Elem() ConditionalAccessPolicyConditionsDevicesFilterOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsDevicesFilter) ConditionalAccessPolicyConditionsDevicesFilter {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditionsDevicesFilter
		return ret
	}).(ConditionalAccessPolicyConditionsDevicesFilterOutput)
}

// Whether to include in, or exclude from, matching devices from the policy. Supported values are `include` or `exclude`.
func (o ConditionalAccessPolicyConditionsDevicesFilterPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsDevicesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Condition filter to match devices. For more information, see [official documentation](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-condition-filters-for-devices#supported-operators-and-device-properties-for-filters).
func (o ConditionalAccessPolicyConditionsDevicesFilterPtrOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsDevicesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Rule
	}).(pulumi.StringPtrOutput)
}

type ConditionalAccessPolicyConditionsLocations struct {
	// A list of location IDs excluded from scope of policy.
	ExcludedLocations []string `pulumi:"excludedLocations"`
	// A list of location IDs in scope of policy unless explicitly excluded. Can also be set to `All`, or `AllTrusted`.
	IncludedLocations []string `pulumi:"includedLocations"`
}

// ConditionalAccessPolicyConditionsLocationsInput is an input type that accepts ConditionalAccessPolicyConditionsLocationsArgs and ConditionalAccessPolicyConditionsLocationsOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsLocationsInput` via:
//
//          ConditionalAccessPolicyConditionsLocationsArgs{...}
type ConditionalAccessPolicyConditionsLocationsInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsLocationsOutput() ConditionalAccessPolicyConditionsLocationsOutput
	ToConditionalAccessPolicyConditionsLocationsOutputWithContext(context.Context) ConditionalAccessPolicyConditionsLocationsOutput
}

type ConditionalAccessPolicyConditionsLocationsArgs struct {
	// A list of location IDs excluded from scope of policy.
	ExcludedLocations pulumi.StringArrayInput `pulumi:"excludedLocations"`
	// A list of location IDs in scope of policy unless explicitly excluded. Can also be set to `All`, or `AllTrusted`.
	IncludedLocations pulumi.StringArrayInput `pulumi:"includedLocations"`
}

func (ConditionalAccessPolicyConditionsLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsLocations)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsLocationsArgs) ToConditionalAccessPolicyConditionsLocationsOutput() ConditionalAccessPolicyConditionsLocationsOutput {
	return i.ToConditionalAccessPolicyConditionsLocationsOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsLocationsArgs) ToConditionalAccessPolicyConditionsLocationsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsLocationsOutput)
}

func (i ConditionalAccessPolicyConditionsLocationsArgs) ToConditionalAccessPolicyConditionsLocationsPtrOutput() ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsLocationsArgs) ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsLocationsOutput).ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsLocationsPtrInput is an input type that accepts ConditionalAccessPolicyConditionsLocationsArgs, ConditionalAccessPolicyConditionsLocationsPtr and ConditionalAccessPolicyConditionsLocationsPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsLocationsPtrInput` via:
//
//          ConditionalAccessPolicyConditionsLocationsArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsLocationsPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsLocationsPtrOutput() ConditionalAccessPolicyConditionsLocationsPtrOutput
	ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsLocationsPtrOutput
}

type conditionalAccessPolicyConditionsLocationsPtrType ConditionalAccessPolicyConditionsLocationsArgs

func ConditionalAccessPolicyConditionsLocationsPtr(v *ConditionalAccessPolicyConditionsLocationsArgs) ConditionalAccessPolicyConditionsLocationsPtrInput {
	return (*conditionalAccessPolicyConditionsLocationsPtrType)(v)
}

func (*conditionalAccessPolicyConditionsLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsLocations)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsLocationsPtrType) ToConditionalAccessPolicyConditionsLocationsPtrOutput() ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsLocationsPtrType) ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsLocationsPtrOutput)
}

type ConditionalAccessPolicyConditionsLocationsOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsLocations)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsLocationsOutput) ToConditionalAccessPolicyConditionsLocationsOutput() ConditionalAccessPolicyConditionsLocationsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsLocationsOutput) ToConditionalAccessPolicyConditionsLocationsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsLocationsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsLocationsOutput) ToConditionalAccessPolicyConditionsLocationsPtrOutput() ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return o.ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsLocationsOutput) ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditionsLocations) *ConditionalAccessPolicyConditionsLocations {
		return &v
	}).(ConditionalAccessPolicyConditionsLocationsPtrOutput)
}

// A list of location IDs excluded from scope of policy.
func (o ConditionalAccessPolicyConditionsLocationsOutput) ExcludedLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsLocations) []string { return v.ExcludedLocations }).(pulumi.StringArrayOutput)
}

// A list of location IDs in scope of policy unless explicitly excluded. Can also be set to `All`, or `AllTrusted`.
func (o ConditionalAccessPolicyConditionsLocationsOutput) IncludedLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsLocations) []string { return v.IncludedLocations }).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsLocationsPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsLocations)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsLocationsPtrOutput) ToConditionalAccessPolicyConditionsLocationsPtrOutput() ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsLocationsPtrOutput) ToConditionalAccessPolicyConditionsLocationsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsLocationsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsLocationsPtrOutput) Elem() ConditionalAccessPolicyConditionsLocationsOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsLocations) ConditionalAccessPolicyConditionsLocations {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditionsLocations
		return ret
	}).(ConditionalAccessPolicyConditionsLocationsOutput)
}

// A list of location IDs excluded from scope of policy.
func (o ConditionalAccessPolicyConditionsLocationsPtrOutput) ExcludedLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsLocations) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedLocations
	}).(pulumi.StringArrayOutput)
}

// A list of location IDs in scope of policy unless explicitly excluded. Can also be set to `All`, or `AllTrusted`.
func (o ConditionalAccessPolicyConditionsLocationsPtrOutput) IncludedLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsLocations) []string {
		if v == nil {
			return nil
		}
		return v.IncludedLocations
	}).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsPlatforms struct {
	// A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
	ExcludedPlatforms []string `pulumi:"excludedPlatforms"`
	// A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
	IncludedPlatforms []string `pulumi:"includedPlatforms"`
}

// ConditionalAccessPolicyConditionsPlatformsInput is an input type that accepts ConditionalAccessPolicyConditionsPlatformsArgs and ConditionalAccessPolicyConditionsPlatformsOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsPlatformsInput` via:
//
//          ConditionalAccessPolicyConditionsPlatformsArgs{...}
type ConditionalAccessPolicyConditionsPlatformsInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsPlatformsOutput() ConditionalAccessPolicyConditionsPlatformsOutput
	ToConditionalAccessPolicyConditionsPlatformsOutputWithContext(context.Context) ConditionalAccessPolicyConditionsPlatformsOutput
}

type ConditionalAccessPolicyConditionsPlatformsArgs struct {
	// A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
	ExcludedPlatforms pulumi.StringArrayInput `pulumi:"excludedPlatforms"`
	// A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
	IncludedPlatforms pulumi.StringArrayInput `pulumi:"includedPlatforms"`
}

func (ConditionalAccessPolicyConditionsPlatformsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsPlatforms)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsPlatformsArgs) ToConditionalAccessPolicyConditionsPlatformsOutput() ConditionalAccessPolicyConditionsPlatformsOutput {
	return i.ToConditionalAccessPolicyConditionsPlatformsOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsPlatformsArgs) ToConditionalAccessPolicyConditionsPlatformsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPlatformsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsPlatformsOutput)
}

func (i ConditionalAccessPolicyConditionsPlatformsArgs) ToConditionalAccessPolicyConditionsPlatformsPtrOutput() ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsPlatformsArgs) ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsPlatformsOutput).ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsPlatformsPtrInput is an input type that accepts ConditionalAccessPolicyConditionsPlatformsArgs, ConditionalAccessPolicyConditionsPlatformsPtr and ConditionalAccessPolicyConditionsPlatformsPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsPlatformsPtrInput` via:
//
//          ConditionalAccessPolicyConditionsPlatformsArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsPlatformsPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsPlatformsPtrOutput() ConditionalAccessPolicyConditionsPlatformsPtrOutput
	ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsPlatformsPtrOutput
}

type conditionalAccessPolicyConditionsPlatformsPtrType ConditionalAccessPolicyConditionsPlatformsArgs

func ConditionalAccessPolicyConditionsPlatformsPtr(v *ConditionalAccessPolicyConditionsPlatformsArgs) ConditionalAccessPolicyConditionsPlatformsPtrInput {
	return (*conditionalAccessPolicyConditionsPlatformsPtrType)(v)
}

func (*conditionalAccessPolicyConditionsPlatformsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsPlatforms)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsPlatformsPtrType) ToConditionalAccessPolicyConditionsPlatformsPtrOutput() ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return i.ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsPlatformsPtrType) ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsPlatformsPtrOutput)
}

type ConditionalAccessPolicyConditionsPlatformsOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsPlatformsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsPlatforms)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsPlatformsOutput) ToConditionalAccessPolicyConditionsPlatformsOutput() ConditionalAccessPolicyConditionsPlatformsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsPlatformsOutput) ToConditionalAccessPolicyConditionsPlatformsOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPlatformsOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsPlatformsOutput) ToConditionalAccessPolicyConditionsPlatformsPtrOutput() ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return o.ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsPlatformsOutput) ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditionsPlatforms) *ConditionalAccessPolicyConditionsPlatforms {
		return &v
	}).(ConditionalAccessPolicyConditionsPlatformsPtrOutput)
}

// A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsPlatformsOutput) ExcludedPlatforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsPlatforms) []string { return v.ExcludedPlatforms }).(pulumi.StringArrayOutput)
}

// A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsPlatformsOutput) IncludedPlatforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsPlatforms) []string { return v.IncludedPlatforms }).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsPlatformsPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsPlatformsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsPlatforms)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsPlatformsPtrOutput) ToConditionalAccessPolicyConditionsPlatformsPtrOutput() ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsPlatformsPtrOutput) ToConditionalAccessPolicyConditionsPlatformsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsPlatformsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsPlatformsPtrOutput) Elem() ConditionalAccessPolicyConditionsPlatformsOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsPlatforms) ConditionalAccessPolicyConditionsPlatforms {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditionsPlatforms
		return ret
	}).(ConditionalAccessPolicyConditionsPlatformsOutput)
}

// A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsPlatformsPtrOutput) ExcludedPlatforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsPlatforms) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPlatforms
	}).(pulumi.StringArrayOutput)
}

// A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
func (o ConditionalAccessPolicyConditionsPlatformsPtrOutput) IncludedPlatforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsPlatforms) []string {
		if v == nil {
			return nil
		}
		return v.IncludedPlatforms
	}).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsUsers struct {
	// A list of group IDs excluded from scope of policy.
	ExcludedGroups []string `pulumi:"excludedGroups"`
	// A list of role IDs excluded from scope of policy.
	ExcludedRoles []string `pulumi:"excludedRoles"`
	// A list of user IDs excluded from scope of policy and/or `GuestsOrExternalUsers`.
	ExcludedUsers []string `pulumi:"excludedUsers"`
	// A list of group IDs in scope of policy unless explicitly excluded.
	IncludedGroups []string `pulumi:"includedGroups"`
	// A list of role IDs in scope of policy unless explicitly excluded.
	IncludedRoles []string `pulumi:"includedRoles"`
	// A list of user IDs in scope of policy unless explicitly excluded, or `None` or `All` or `GuestsOrExternalUsers`.
	IncludedUsers []string `pulumi:"includedUsers"`
}

// ConditionalAccessPolicyConditionsUsersInput is an input type that accepts ConditionalAccessPolicyConditionsUsersArgs and ConditionalAccessPolicyConditionsUsersOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsUsersInput` via:
//
//          ConditionalAccessPolicyConditionsUsersArgs{...}
type ConditionalAccessPolicyConditionsUsersInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsUsersOutput() ConditionalAccessPolicyConditionsUsersOutput
	ToConditionalAccessPolicyConditionsUsersOutputWithContext(context.Context) ConditionalAccessPolicyConditionsUsersOutput
}

type ConditionalAccessPolicyConditionsUsersArgs struct {
	// A list of group IDs excluded from scope of policy.
	ExcludedGroups pulumi.StringArrayInput `pulumi:"excludedGroups"`
	// A list of role IDs excluded from scope of policy.
	ExcludedRoles pulumi.StringArrayInput `pulumi:"excludedRoles"`
	// A list of user IDs excluded from scope of policy and/or `GuestsOrExternalUsers`.
	ExcludedUsers pulumi.StringArrayInput `pulumi:"excludedUsers"`
	// A list of group IDs in scope of policy unless explicitly excluded.
	IncludedGroups pulumi.StringArrayInput `pulumi:"includedGroups"`
	// A list of role IDs in scope of policy unless explicitly excluded.
	IncludedRoles pulumi.StringArrayInput `pulumi:"includedRoles"`
	// A list of user IDs in scope of policy unless explicitly excluded, or `None` or `All` or `GuestsOrExternalUsers`.
	IncludedUsers pulumi.StringArrayInput `pulumi:"includedUsers"`
}

func (ConditionalAccessPolicyConditionsUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsUsers)(nil)).Elem()
}

func (i ConditionalAccessPolicyConditionsUsersArgs) ToConditionalAccessPolicyConditionsUsersOutput() ConditionalAccessPolicyConditionsUsersOutput {
	return i.ToConditionalAccessPolicyConditionsUsersOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsUsersArgs) ToConditionalAccessPolicyConditionsUsersOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsUsersOutput)
}

func (i ConditionalAccessPolicyConditionsUsersArgs) ToConditionalAccessPolicyConditionsUsersPtrOutput() ConditionalAccessPolicyConditionsUsersPtrOutput {
	return i.ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyConditionsUsersArgs) ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsUsersOutput).ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyConditionsUsersPtrInput is an input type that accepts ConditionalAccessPolicyConditionsUsersArgs, ConditionalAccessPolicyConditionsUsersPtr and ConditionalAccessPolicyConditionsUsersPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyConditionsUsersPtrInput` via:
//
//          ConditionalAccessPolicyConditionsUsersArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyConditionsUsersPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyConditionsUsersPtrOutput() ConditionalAccessPolicyConditionsUsersPtrOutput
	ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(context.Context) ConditionalAccessPolicyConditionsUsersPtrOutput
}

type conditionalAccessPolicyConditionsUsersPtrType ConditionalAccessPolicyConditionsUsersArgs

func ConditionalAccessPolicyConditionsUsersPtr(v *ConditionalAccessPolicyConditionsUsersArgs) ConditionalAccessPolicyConditionsUsersPtrInput {
	return (*conditionalAccessPolicyConditionsUsersPtrType)(v)
}

func (*conditionalAccessPolicyConditionsUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsUsers)(nil)).Elem()
}

func (i *conditionalAccessPolicyConditionsUsersPtrType) ToConditionalAccessPolicyConditionsUsersPtrOutput() ConditionalAccessPolicyConditionsUsersPtrOutput {
	return i.ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyConditionsUsersPtrType) ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyConditionsUsersPtrOutput)
}

type ConditionalAccessPolicyConditionsUsersOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyConditionsUsers)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsUsersOutput) ToConditionalAccessPolicyConditionsUsersOutput() ConditionalAccessPolicyConditionsUsersOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsUsersOutput) ToConditionalAccessPolicyConditionsUsersOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsUsersOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsUsersOutput) ToConditionalAccessPolicyConditionsUsersPtrOutput() ConditionalAccessPolicyConditionsUsersPtrOutput {
	return o.ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyConditionsUsersOutput) ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyConditionsUsers) *ConditionalAccessPolicyConditionsUsers {
		return &v
	}).(ConditionalAccessPolicyConditionsUsersPtrOutput)
}

// A list of group IDs excluded from scope of policy.
func (o ConditionalAccessPolicyConditionsUsersOutput) ExcludedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsUsers) []string { return v.ExcludedGroups }).(pulumi.StringArrayOutput)
}

// A list of role IDs excluded from scope of policy.
func (o ConditionalAccessPolicyConditionsUsersOutput) ExcludedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsUsers) []string { return v.ExcludedRoles }).(pulumi.StringArrayOutput)
}

// A list of user IDs excluded from scope of policy and/or `GuestsOrExternalUsers`.
func (o ConditionalAccessPolicyConditionsUsersOutput) ExcludedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsUsers) []string { return v.ExcludedUsers }).(pulumi.StringArrayOutput)
}

// A list of group IDs in scope of policy unless explicitly excluded.
func (o ConditionalAccessPolicyConditionsUsersOutput) IncludedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsUsers) []string { return v.IncludedGroups }).(pulumi.StringArrayOutput)
}

// A list of role IDs in scope of policy unless explicitly excluded.
func (o ConditionalAccessPolicyConditionsUsersOutput) IncludedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsUsers) []string { return v.IncludedRoles }).(pulumi.StringArrayOutput)
}

// A list of user IDs in scope of policy unless explicitly excluded, or `None` or `All` or `GuestsOrExternalUsers`.
func (o ConditionalAccessPolicyConditionsUsersOutput) IncludedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyConditionsUsers) []string { return v.IncludedUsers }).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyConditionsUsersPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyConditionsUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyConditionsUsers)(nil)).Elem()
}

func (o ConditionalAccessPolicyConditionsUsersPtrOutput) ToConditionalAccessPolicyConditionsUsersPtrOutput() ConditionalAccessPolicyConditionsUsersPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsUsersPtrOutput) ToConditionalAccessPolicyConditionsUsersPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyConditionsUsersPtrOutput {
	return o
}

func (o ConditionalAccessPolicyConditionsUsersPtrOutput) Elem() ConditionalAccessPolicyConditionsUsersOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) ConditionalAccessPolicyConditionsUsers {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyConditionsUsers
		return ret
	}).(ConditionalAccessPolicyConditionsUsersOutput)
}

// A list of group IDs excluded from scope of policy.
func (o ConditionalAccessPolicyConditionsUsersPtrOutput) ExcludedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedGroups
	}).(pulumi.StringArrayOutput)
}

// A list of role IDs excluded from scope of policy.
func (o ConditionalAccessPolicyConditionsUsersPtrOutput) ExcludedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedRoles
	}).(pulumi.StringArrayOutput)
}

// A list of user IDs excluded from scope of policy and/or `GuestsOrExternalUsers`.
func (o ConditionalAccessPolicyConditionsUsersPtrOutput) ExcludedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedUsers
	}).(pulumi.StringArrayOutput)
}

// A list of group IDs in scope of policy unless explicitly excluded.
func (o ConditionalAccessPolicyConditionsUsersPtrOutput) IncludedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) []string {
		if v == nil {
			return nil
		}
		return v.IncludedGroups
	}).(pulumi.StringArrayOutput)
}

// A list of role IDs in scope of policy unless explicitly excluded.
func (o ConditionalAccessPolicyConditionsUsersPtrOutput) IncludedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) []string {
		if v == nil {
			return nil
		}
		return v.IncludedRoles
	}).(pulumi.StringArrayOutput)
}

// A list of user IDs in scope of policy unless explicitly excluded, or `None` or `All` or `GuestsOrExternalUsers`.
func (o ConditionalAccessPolicyConditionsUsersPtrOutput) IncludedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyConditionsUsers) []string {
		if v == nil {
			return nil
		}
		return v.IncludedUsers
	}).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyGrantControls struct {
	// List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
	BuiltInControls []string `pulumi:"builtInControls"`
	// List of custom controls IDs required by the policy.
	CustomAuthenticationFactors []string `pulumi:"customAuthenticationFactors"`
	// Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
	Operator string `pulumi:"operator"`
	// List of terms of use IDs required by the policy.
	TermsOfUses []string `pulumi:"termsOfUses"`
}

// ConditionalAccessPolicyGrantControlsInput is an input type that accepts ConditionalAccessPolicyGrantControlsArgs and ConditionalAccessPolicyGrantControlsOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyGrantControlsInput` via:
//
//          ConditionalAccessPolicyGrantControlsArgs{...}
type ConditionalAccessPolicyGrantControlsInput interface {
	pulumi.Input

	ToConditionalAccessPolicyGrantControlsOutput() ConditionalAccessPolicyGrantControlsOutput
	ToConditionalAccessPolicyGrantControlsOutputWithContext(context.Context) ConditionalAccessPolicyGrantControlsOutput
}

type ConditionalAccessPolicyGrantControlsArgs struct {
	// List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
	BuiltInControls pulumi.StringArrayInput `pulumi:"builtInControls"`
	// List of custom controls IDs required by the policy.
	CustomAuthenticationFactors pulumi.StringArrayInput `pulumi:"customAuthenticationFactors"`
	// Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of terms of use IDs required by the policy.
	TermsOfUses pulumi.StringArrayInput `pulumi:"termsOfUses"`
}

func (ConditionalAccessPolicyGrantControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyGrantControls)(nil)).Elem()
}

func (i ConditionalAccessPolicyGrantControlsArgs) ToConditionalAccessPolicyGrantControlsOutput() ConditionalAccessPolicyGrantControlsOutput {
	return i.ToConditionalAccessPolicyGrantControlsOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyGrantControlsArgs) ToConditionalAccessPolicyGrantControlsOutputWithContext(ctx context.Context) ConditionalAccessPolicyGrantControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyGrantControlsOutput)
}

func (i ConditionalAccessPolicyGrantControlsArgs) ToConditionalAccessPolicyGrantControlsPtrOutput() ConditionalAccessPolicyGrantControlsPtrOutput {
	return i.ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicyGrantControlsArgs) ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyGrantControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyGrantControlsOutput).ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicyGrantControlsPtrInput is an input type that accepts ConditionalAccessPolicyGrantControlsArgs, ConditionalAccessPolicyGrantControlsPtr and ConditionalAccessPolicyGrantControlsPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicyGrantControlsPtrInput` via:
//
//          ConditionalAccessPolicyGrantControlsArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicyGrantControlsPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicyGrantControlsPtrOutput() ConditionalAccessPolicyGrantControlsPtrOutput
	ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(context.Context) ConditionalAccessPolicyGrantControlsPtrOutput
}

type conditionalAccessPolicyGrantControlsPtrType ConditionalAccessPolicyGrantControlsArgs

func ConditionalAccessPolicyGrantControlsPtr(v *ConditionalAccessPolicyGrantControlsArgs) ConditionalAccessPolicyGrantControlsPtrInput {
	return (*conditionalAccessPolicyGrantControlsPtrType)(v)
}

func (*conditionalAccessPolicyGrantControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyGrantControls)(nil)).Elem()
}

func (i *conditionalAccessPolicyGrantControlsPtrType) ToConditionalAccessPolicyGrantControlsPtrOutput() ConditionalAccessPolicyGrantControlsPtrOutput {
	return i.ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicyGrantControlsPtrType) ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyGrantControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicyGrantControlsPtrOutput)
}

type ConditionalAccessPolicyGrantControlsOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyGrantControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicyGrantControls)(nil)).Elem()
}

func (o ConditionalAccessPolicyGrantControlsOutput) ToConditionalAccessPolicyGrantControlsOutput() ConditionalAccessPolicyGrantControlsOutput {
	return o
}

func (o ConditionalAccessPolicyGrantControlsOutput) ToConditionalAccessPolicyGrantControlsOutputWithContext(ctx context.Context) ConditionalAccessPolicyGrantControlsOutput {
	return o
}

func (o ConditionalAccessPolicyGrantControlsOutput) ToConditionalAccessPolicyGrantControlsPtrOutput() ConditionalAccessPolicyGrantControlsPtrOutput {
	return o.ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicyGrantControlsOutput) ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyGrantControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicyGrantControls) *ConditionalAccessPolicyGrantControls {
		return &v
	}).(ConditionalAccessPolicyGrantControlsPtrOutput)
}

// List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
func (o ConditionalAccessPolicyGrantControlsOutput) BuiltInControls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyGrantControls) []string { return v.BuiltInControls }).(pulumi.StringArrayOutput)
}

// List of custom controls IDs required by the policy.
func (o ConditionalAccessPolicyGrantControlsOutput) CustomAuthenticationFactors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyGrantControls) []string { return v.CustomAuthenticationFactors }).(pulumi.StringArrayOutput)
}

// Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
func (o ConditionalAccessPolicyGrantControlsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyGrantControls) string { return v.Operator }).(pulumi.StringOutput)
}

// List of terms of use IDs required by the policy.
func (o ConditionalAccessPolicyGrantControlsOutput) TermsOfUses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConditionalAccessPolicyGrantControls) []string { return v.TermsOfUses }).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicyGrantControlsPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicyGrantControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicyGrantControls)(nil)).Elem()
}

func (o ConditionalAccessPolicyGrantControlsPtrOutput) ToConditionalAccessPolicyGrantControlsPtrOutput() ConditionalAccessPolicyGrantControlsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyGrantControlsPtrOutput) ToConditionalAccessPolicyGrantControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicyGrantControlsPtrOutput {
	return o
}

func (o ConditionalAccessPolicyGrantControlsPtrOutput) Elem() ConditionalAccessPolicyGrantControlsOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyGrantControls) ConditionalAccessPolicyGrantControls {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicyGrantControls
		return ret
	}).(ConditionalAccessPolicyGrantControlsOutput)
}

// List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
func (o ConditionalAccessPolicyGrantControlsPtrOutput) BuiltInControls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyGrantControls) []string {
		if v == nil {
			return nil
		}
		return v.BuiltInControls
	}).(pulumi.StringArrayOutput)
}

// List of custom controls IDs required by the policy.
func (o ConditionalAccessPolicyGrantControlsPtrOutput) CustomAuthenticationFactors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyGrantControls) []string {
		if v == nil {
			return nil
		}
		return v.CustomAuthenticationFactors
	}).(pulumi.StringArrayOutput)
}

// Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
func (o ConditionalAccessPolicyGrantControlsPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyGrantControls) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// List of terms of use IDs required by the policy.
func (o ConditionalAccessPolicyGrantControlsPtrOutput) TermsOfUses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicyGrantControls) []string {
		if v == nil {
			return nil
		}
		return v.TermsOfUses
	}).(pulumi.StringArrayOutput)
}

type ConditionalAccessPolicySessionControls struct {
	// Whether or not application enforced restrictions are enabled. Defaults to `false`.
	ApplicationEnforcedRestrictionsEnabled *bool `pulumi:"applicationEnforcedRestrictionsEnabled"`
	// Enables cloud app security and specifies the cloud app security policy to use. Possible values are: `blockDownloads`, `mcasConfigured`, `monitorOnly` or `unknownFutureValue`.
	CloudAppSecurityPolicy *string `pulumi:"cloudAppSecurityPolicy"`
	// Session control to define whether to persist cookies or not. Possible values are: `always` or `never`.
	PersistentBrowserMode *string `pulumi:"persistentBrowserMode"`
	// Number of days or hours to enforce sign-in frequency. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
	SignInFrequency *int `pulumi:"signInFrequency"`
	// The time period to enforce sign-in frequency. Possible values are: `hours` or `days`. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
	SignInFrequencyPeriod *string `pulumi:"signInFrequencyPeriod"`
}

// ConditionalAccessPolicySessionControlsInput is an input type that accepts ConditionalAccessPolicySessionControlsArgs and ConditionalAccessPolicySessionControlsOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicySessionControlsInput` via:
//
//          ConditionalAccessPolicySessionControlsArgs{...}
type ConditionalAccessPolicySessionControlsInput interface {
	pulumi.Input

	ToConditionalAccessPolicySessionControlsOutput() ConditionalAccessPolicySessionControlsOutput
	ToConditionalAccessPolicySessionControlsOutputWithContext(context.Context) ConditionalAccessPolicySessionControlsOutput
}

type ConditionalAccessPolicySessionControlsArgs struct {
	// Whether or not application enforced restrictions are enabled. Defaults to `false`.
	ApplicationEnforcedRestrictionsEnabled pulumi.BoolPtrInput `pulumi:"applicationEnforcedRestrictionsEnabled"`
	// Enables cloud app security and specifies the cloud app security policy to use. Possible values are: `blockDownloads`, `mcasConfigured`, `monitorOnly` or `unknownFutureValue`.
	CloudAppSecurityPolicy pulumi.StringPtrInput `pulumi:"cloudAppSecurityPolicy"`
	// Session control to define whether to persist cookies or not. Possible values are: `always` or `never`.
	PersistentBrowserMode pulumi.StringPtrInput `pulumi:"persistentBrowserMode"`
	// Number of days or hours to enforce sign-in frequency. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
	SignInFrequency pulumi.IntPtrInput `pulumi:"signInFrequency"`
	// The time period to enforce sign-in frequency. Possible values are: `hours` or `days`. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
	SignInFrequencyPeriod pulumi.StringPtrInput `pulumi:"signInFrequencyPeriod"`
}

func (ConditionalAccessPolicySessionControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicySessionControls)(nil)).Elem()
}

func (i ConditionalAccessPolicySessionControlsArgs) ToConditionalAccessPolicySessionControlsOutput() ConditionalAccessPolicySessionControlsOutput {
	return i.ToConditionalAccessPolicySessionControlsOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicySessionControlsArgs) ToConditionalAccessPolicySessionControlsOutputWithContext(ctx context.Context) ConditionalAccessPolicySessionControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicySessionControlsOutput)
}

func (i ConditionalAccessPolicySessionControlsArgs) ToConditionalAccessPolicySessionControlsPtrOutput() ConditionalAccessPolicySessionControlsPtrOutput {
	return i.ToConditionalAccessPolicySessionControlsPtrOutputWithContext(context.Background())
}

func (i ConditionalAccessPolicySessionControlsArgs) ToConditionalAccessPolicySessionControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicySessionControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicySessionControlsOutput).ToConditionalAccessPolicySessionControlsPtrOutputWithContext(ctx)
}

// ConditionalAccessPolicySessionControlsPtrInput is an input type that accepts ConditionalAccessPolicySessionControlsArgs, ConditionalAccessPolicySessionControlsPtr and ConditionalAccessPolicySessionControlsPtrOutput values.
// You can construct a concrete instance of `ConditionalAccessPolicySessionControlsPtrInput` via:
//
//          ConditionalAccessPolicySessionControlsArgs{...}
//
//  or:
//
//          nil
type ConditionalAccessPolicySessionControlsPtrInput interface {
	pulumi.Input

	ToConditionalAccessPolicySessionControlsPtrOutput() ConditionalAccessPolicySessionControlsPtrOutput
	ToConditionalAccessPolicySessionControlsPtrOutputWithContext(context.Context) ConditionalAccessPolicySessionControlsPtrOutput
}

type conditionalAccessPolicySessionControlsPtrType ConditionalAccessPolicySessionControlsArgs

func ConditionalAccessPolicySessionControlsPtr(v *ConditionalAccessPolicySessionControlsArgs) ConditionalAccessPolicySessionControlsPtrInput {
	return (*conditionalAccessPolicySessionControlsPtrType)(v)
}

func (*conditionalAccessPolicySessionControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicySessionControls)(nil)).Elem()
}

func (i *conditionalAccessPolicySessionControlsPtrType) ToConditionalAccessPolicySessionControlsPtrOutput() ConditionalAccessPolicySessionControlsPtrOutput {
	return i.ToConditionalAccessPolicySessionControlsPtrOutputWithContext(context.Background())
}

func (i *conditionalAccessPolicySessionControlsPtrType) ToConditionalAccessPolicySessionControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicySessionControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConditionalAccessPolicySessionControlsPtrOutput)
}

type ConditionalAccessPolicySessionControlsOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicySessionControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalAccessPolicySessionControls)(nil)).Elem()
}

func (o ConditionalAccessPolicySessionControlsOutput) ToConditionalAccessPolicySessionControlsOutput() ConditionalAccessPolicySessionControlsOutput {
	return o
}

func (o ConditionalAccessPolicySessionControlsOutput) ToConditionalAccessPolicySessionControlsOutputWithContext(ctx context.Context) ConditionalAccessPolicySessionControlsOutput {
	return o
}

func (o ConditionalAccessPolicySessionControlsOutput) ToConditionalAccessPolicySessionControlsPtrOutput() ConditionalAccessPolicySessionControlsPtrOutput {
	return o.ToConditionalAccessPolicySessionControlsPtrOutputWithContext(context.Background())
}

func (o ConditionalAccessPolicySessionControlsOutput) ToConditionalAccessPolicySessionControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicySessionControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalAccessPolicySessionControls) *ConditionalAccessPolicySessionControls {
		return &v
	}).(ConditionalAccessPolicySessionControlsPtrOutput)
}

// Whether or not application enforced restrictions are enabled. Defaults to `false`.
func (o ConditionalAccessPolicySessionControlsOutput) ApplicationEnforcedRestrictionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicySessionControls) *bool { return v.ApplicationEnforcedRestrictionsEnabled }).(pulumi.BoolPtrOutput)
}

// Enables cloud app security and specifies the cloud app security policy to use. Possible values are: `blockDownloads`, `mcasConfigured`, `monitorOnly` or `unknownFutureValue`.
func (o ConditionalAccessPolicySessionControlsOutput) CloudAppSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicySessionControls) *string { return v.CloudAppSecurityPolicy }).(pulumi.StringPtrOutput)
}

// Session control to define whether to persist cookies or not. Possible values are: `always` or `never`.
func (o ConditionalAccessPolicySessionControlsOutput) PersistentBrowserMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicySessionControls) *string { return v.PersistentBrowserMode }).(pulumi.StringPtrOutput)
}

// Number of days or hours to enforce sign-in frequency. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
func (o ConditionalAccessPolicySessionControlsOutput) SignInFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicySessionControls) *int { return v.SignInFrequency }).(pulumi.IntPtrOutput)
}

// The time period to enforce sign-in frequency. Possible values are: `hours` or `days`. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
func (o ConditionalAccessPolicySessionControlsOutput) SignInFrequencyPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConditionalAccessPolicySessionControls) *string { return v.SignInFrequencyPeriod }).(pulumi.StringPtrOutput)
}

type ConditionalAccessPolicySessionControlsPtrOutput struct{ *pulumi.OutputState }

func (ConditionalAccessPolicySessionControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalAccessPolicySessionControls)(nil)).Elem()
}

func (o ConditionalAccessPolicySessionControlsPtrOutput) ToConditionalAccessPolicySessionControlsPtrOutput() ConditionalAccessPolicySessionControlsPtrOutput {
	return o
}

func (o ConditionalAccessPolicySessionControlsPtrOutput) ToConditionalAccessPolicySessionControlsPtrOutputWithContext(ctx context.Context) ConditionalAccessPolicySessionControlsPtrOutput {
	return o
}

func (o ConditionalAccessPolicySessionControlsPtrOutput) Elem() ConditionalAccessPolicySessionControlsOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicySessionControls) ConditionalAccessPolicySessionControls {
		if v != nil {
			return *v
		}
		var ret ConditionalAccessPolicySessionControls
		return ret
	}).(ConditionalAccessPolicySessionControlsOutput)
}

// Whether or not application enforced restrictions are enabled. Defaults to `false`.
func (o ConditionalAccessPolicySessionControlsPtrOutput) ApplicationEnforcedRestrictionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicySessionControls) *bool {
		if v == nil {
			return nil
		}
		return v.ApplicationEnforcedRestrictionsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Enables cloud app security and specifies the cloud app security policy to use. Possible values are: `blockDownloads`, `mcasConfigured`, `monitorOnly` or `unknownFutureValue`.
func (o ConditionalAccessPolicySessionControlsPtrOutput) CloudAppSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicySessionControls) *string {
		if v == nil {
			return nil
		}
		return v.CloudAppSecurityPolicy
	}).(pulumi.StringPtrOutput)
}

// Session control to define whether to persist cookies or not. Possible values are: `always` or `never`.
func (o ConditionalAccessPolicySessionControlsPtrOutput) PersistentBrowserMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicySessionControls) *string {
		if v == nil {
			return nil
		}
		return v.PersistentBrowserMode
	}).(pulumi.StringPtrOutput)
}

// Number of days or hours to enforce sign-in frequency. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
func (o ConditionalAccessPolicySessionControlsPtrOutput) SignInFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicySessionControls) *int {
		if v == nil {
			return nil
		}
		return v.SignInFrequency
	}).(pulumi.IntPtrOutput)
}

// The time period to enforce sign-in frequency. Possible values are: `hours` or `days`. Required when `signInFrequencyPeriod` is specified. Due to an API issue, removing this property forces a new resource to be created.
func (o ConditionalAccessPolicySessionControlsPtrOutput) SignInFrequencyPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConditionalAccessPolicySessionControls) *string {
		if v == nil {
			return nil
		}
		return v.SignInFrequencyPeriod
	}).(pulumi.StringPtrOutput)
}

type CustomDirectoryRolePermission struct {
	// A set of tasks that can be performed on a resource. For more information, see the [Permissions Reference](https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference) documentation.
	AllowedResourceActions []string `pulumi:"allowedResourceActions"`
}

// CustomDirectoryRolePermissionInput is an input type that accepts CustomDirectoryRolePermissionArgs and CustomDirectoryRolePermissionOutput values.
// You can construct a concrete instance of `CustomDirectoryRolePermissionInput` via:
//
//          CustomDirectoryRolePermissionArgs{...}
type CustomDirectoryRolePermissionInput interface {
	pulumi.Input

	ToCustomDirectoryRolePermissionOutput() CustomDirectoryRolePermissionOutput
	ToCustomDirectoryRolePermissionOutputWithContext(context.Context) CustomDirectoryRolePermissionOutput
}

type CustomDirectoryRolePermissionArgs struct {
	// A set of tasks that can be performed on a resource. For more information, see the [Permissions Reference](https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference) documentation.
	AllowedResourceActions pulumi.StringArrayInput `pulumi:"allowedResourceActions"`
}

func (CustomDirectoryRolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDirectoryRolePermission)(nil)).Elem()
}

func (i CustomDirectoryRolePermissionArgs) ToCustomDirectoryRolePermissionOutput() CustomDirectoryRolePermissionOutput {
	return i.ToCustomDirectoryRolePermissionOutputWithContext(context.Background())
}

func (i CustomDirectoryRolePermissionArgs) ToCustomDirectoryRolePermissionOutputWithContext(ctx context.Context) CustomDirectoryRolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDirectoryRolePermissionOutput)
}

// CustomDirectoryRolePermissionArrayInput is an input type that accepts CustomDirectoryRolePermissionArray and CustomDirectoryRolePermissionArrayOutput values.
// You can construct a concrete instance of `CustomDirectoryRolePermissionArrayInput` via:
//
//          CustomDirectoryRolePermissionArray{ CustomDirectoryRolePermissionArgs{...} }
type CustomDirectoryRolePermissionArrayInput interface {
	pulumi.Input

	ToCustomDirectoryRolePermissionArrayOutput() CustomDirectoryRolePermissionArrayOutput
	ToCustomDirectoryRolePermissionArrayOutputWithContext(context.Context) CustomDirectoryRolePermissionArrayOutput
}

type CustomDirectoryRolePermissionArray []CustomDirectoryRolePermissionInput

func (CustomDirectoryRolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDirectoryRolePermission)(nil)).Elem()
}

func (i CustomDirectoryRolePermissionArray) ToCustomDirectoryRolePermissionArrayOutput() CustomDirectoryRolePermissionArrayOutput {
	return i.ToCustomDirectoryRolePermissionArrayOutputWithContext(context.Background())
}

func (i CustomDirectoryRolePermissionArray) ToCustomDirectoryRolePermissionArrayOutputWithContext(ctx context.Context) CustomDirectoryRolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDirectoryRolePermissionArrayOutput)
}

type CustomDirectoryRolePermissionOutput struct{ *pulumi.OutputState }

func (CustomDirectoryRolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDirectoryRolePermission)(nil)).Elem()
}

func (o CustomDirectoryRolePermissionOutput) ToCustomDirectoryRolePermissionOutput() CustomDirectoryRolePermissionOutput {
	return o
}

func (o CustomDirectoryRolePermissionOutput) ToCustomDirectoryRolePermissionOutputWithContext(ctx context.Context) CustomDirectoryRolePermissionOutput {
	return o
}

// A set of tasks that can be performed on a resource. For more information, see the [Permissions Reference](https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference) documentation.
func (o CustomDirectoryRolePermissionOutput) AllowedResourceActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDirectoryRolePermission) []string { return v.AllowedResourceActions }).(pulumi.StringArrayOutput)
}

type CustomDirectoryRolePermissionArrayOutput struct{ *pulumi.OutputState }

func (CustomDirectoryRolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDirectoryRolePermission)(nil)).Elem()
}

func (o CustomDirectoryRolePermissionArrayOutput) ToCustomDirectoryRolePermissionArrayOutput() CustomDirectoryRolePermissionArrayOutput {
	return o
}

func (o CustomDirectoryRolePermissionArrayOutput) ToCustomDirectoryRolePermissionArrayOutputWithContext(ctx context.Context) CustomDirectoryRolePermissionArrayOutput {
	return o
}

func (o CustomDirectoryRolePermissionArrayOutput) Index(i pulumi.IntInput) CustomDirectoryRolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDirectoryRolePermission {
		return vs[0].([]CustomDirectoryRolePermission)[vs[1].(int)]
	}).(CustomDirectoryRolePermissionOutput)
}

type GroupDynamicMembership struct {
	// Whether rule processing is "On" (true) or "Paused" (false).
	Enabled bool `pulumi:"enabled"`
	// The rule that determines membership of this group. For more information, see official documentation on [memmbership rules syntax](https://docs.microsoft.com/en-gb/azure/active-directory/enterprise-users/groups-dynamic-membership).
	Rule string `pulumi:"rule"`
}

// GroupDynamicMembershipInput is an input type that accepts GroupDynamicMembershipArgs and GroupDynamicMembershipOutput values.
// You can construct a concrete instance of `GroupDynamicMembershipInput` via:
//
//          GroupDynamicMembershipArgs{...}
type GroupDynamicMembershipInput interface {
	pulumi.Input

	ToGroupDynamicMembershipOutput() GroupDynamicMembershipOutput
	ToGroupDynamicMembershipOutputWithContext(context.Context) GroupDynamicMembershipOutput
}

type GroupDynamicMembershipArgs struct {
	// Whether rule processing is "On" (true) or "Paused" (false).
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The rule that determines membership of this group. For more information, see official documentation on [memmbership rules syntax](https://docs.microsoft.com/en-gb/azure/active-directory/enterprise-users/groups-dynamic-membership).
	Rule pulumi.StringInput `pulumi:"rule"`
}

func (GroupDynamicMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDynamicMembership)(nil)).Elem()
}

func (i GroupDynamicMembershipArgs) ToGroupDynamicMembershipOutput() GroupDynamicMembershipOutput {
	return i.ToGroupDynamicMembershipOutputWithContext(context.Background())
}

func (i GroupDynamicMembershipArgs) ToGroupDynamicMembershipOutputWithContext(ctx context.Context) GroupDynamicMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDynamicMembershipOutput)
}

func (i GroupDynamicMembershipArgs) ToGroupDynamicMembershipPtrOutput() GroupDynamicMembershipPtrOutput {
	return i.ToGroupDynamicMembershipPtrOutputWithContext(context.Background())
}

func (i GroupDynamicMembershipArgs) ToGroupDynamicMembershipPtrOutputWithContext(ctx context.Context) GroupDynamicMembershipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDynamicMembershipOutput).ToGroupDynamicMembershipPtrOutputWithContext(ctx)
}

// GroupDynamicMembershipPtrInput is an input type that accepts GroupDynamicMembershipArgs, GroupDynamicMembershipPtr and GroupDynamicMembershipPtrOutput values.
// You can construct a concrete instance of `GroupDynamicMembershipPtrInput` via:
//
//          GroupDynamicMembershipArgs{...}
//
//  or:
//
//          nil
type GroupDynamicMembershipPtrInput interface {
	pulumi.Input

	ToGroupDynamicMembershipPtrOutput() GroupDynamicMembershipPtrOutput
	ToGroupDynamicMembershipPtrOutputWithContext(context.Context) GroupDynamicMembershipPtrOutput
}

type groupDynamicMembershipPtrType GroupDynamicMembershipArgs

func GroupDynamicMembershipPtr(v *GroupDynamicMembershipArgs) GroupDynamicMembershipPtrInput {
	return (*groupDynamicMembershipPtrType)(v)
}

func (*groupDynamicMembershipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDynamicMembership)(nil)).Elem()
}

func (i *groupDynamicMembershipPtrType) ToGroupDynamicMembershipPtrOutput() GroupDynamicMembershipPtrOutput {
	return i.ToGroupDynamicMembershipPtrOutputWithContext(context.Background())
}

func (i *groupDynamicMembershipPtrType) ToGroupDynamicMembershipPtrOutputWithContext(ctx context.Context) GroupDynamicMembershipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDynamicMembershipPtrOutput)
}

type GroupDynamicMembershipOutput struct{ *pulumi.OutputState }

func (GroupDynamicMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDynamicMembership)(nil)).Elem()
}

func (o GroupDynamicMembershipOutput) ToGroupDynamicMembershipOutput() GroupDynamicMembershipOutput {
	return o
}

func (o GroupDynamicMembershipOutput) ToGroupDynamicMembershipOutputWithContext(ctx context.Context) GroupDynamicMembershipOutput {
	return o
}

func (o GroupDynamicMembershipOutput) ToGroupDynamicMembershipPtrOutput() GroupDynamicMembershipPtrOutput {
	return o.ToGroupDynamicMembershipPtrOutputWithContext(context.Background())
}

func (o GroupDynamicMembershipOutput) ToGroupDynamicMembershipPtrOutputWithContext(ctx context.Context) GroupDynamicMembershipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupDynamicMembership) *GroupDynamicMembership {
		return &v
	}).(GroupDynamicMembershipPtrOutput)
}

// Whether rule processing is "On" (true) or "Paused" (false).
func (o GroupDynamicMembershipOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupDynamicMembership) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The rule that determines membership of this group. For more information, see official documentation on [memmbership rules syntax](https://docs.microsoft.com/en-gb/azure/active-directory/enterprise-users/groups-dynamic-membership).
func (o GroupDynamicMembershipOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v GroupDynamicMembership) string { return v.Rule }).(pulumi.StringOutput)
}

type GroupDynamicMembershipPtrOutput struct{ *pulumi.OutputState }

func (GroupDynamicMembershipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDynamicMembership)(nil)).Elem()
}

func (o GroupDynamicMembershipPtrOutput) ToGroupDynamicMembershipPtrOutput() GroupDynamicMembershipPtrOutput {
	return o
}

func (o GroupDynamicMembershipPtrOutput) ToGroupDynamicMembershipPtrOutputWithContext(ctx context.Context) GroupDynamicMembershipPtrOutput {
	return o
}

func (o GroupDynamicMembershipPtrOutput) Elem() GroupDynamicMembershipOutput {
	return o.ApplyT(func(v *GroupDynamicMembership) GroupDynamicMembership {
		if v != nil {
			return *v
		}
		var ret GroupDynamicMembership
		return ret
	}).(GroupDynamicMembershipOutput)
}

// Whether rule processing is "On" (true) or "Paused" (false).
func (o GroupDynamicMembershipPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupDynamicMembership) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The rule that determines membership of this group. For more information, see official documentation on [memmbership rules syntax](https://docs.microsoft.com/en-gb/azure/active-directory/enterprise-users/groups-dynamic-membership).
func (o GroupDynamicMembershipPtrOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDynamicMembership) *string {
		if v == nil {
			return nil
		}
		return &v.Rule
	}).(pulumi.StringPtrOutput)
}

type InvitationMessage struct {
	// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
	AdditionalRecipients *string `pulumi:"additionalRecipients"`
	// Customized message body you want to send if you don't want to send the default message. Cannot be specified with `language`.
	Body *string `pulumi:"body"`
	// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to `en-US`. Cannot be specified with `body`.
	Language *string `pulumi:"language"`
}

// InvitationMessageInput is an input type that accepts InvitationMessageArgs and InvitationMessageOutput values.
// You can construct a concrete instance of `InvitationMessageInput` via:
//
//          InvitationMessageArgs{...}
type InvitationMessageInput interface {
	pulumi.Input

	ToInvitationMessageOutput() InvitationMessageOutput
	ToInvitationMessageOutputWithContext(context.Context) InvitationMessageOutput
}

type InvitationMessageArgs struct {
	// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
	AdditionalRecipients pulumi.StringPtrInput `pulumi:"additionalRecipients"`
	// Customized message body you want to send if you don't want to send the default message. Cannot be specified with `language`.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to `en-US`. Cannot be specified with `body`.
	Language pulumi.StringPtrInput `pulumi:"language"`
}

func (InvitationMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationMessage)(nil)).Elem()
}

func (i InvitationMessageArgs) ToInvitationMessageOutput() InvitationMessageOutput {
	return i.ToInvitationMessageOutputWithContext(context.Background())
}

func (i InvitationMessageArgs) ToInvitationMessageOutputWithContext(ctx context.Context) InvitationMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationMessageOutput)
}

func (i InvitationMessageArgs) ToInvitationMessagePtrOutput() InvitationMessagePtrOutput {
	return i.ToInvitationMessagePtrOutputWithContext(context.Background())
}

func (i InvitationMessageArgs) ToInvitationMessagePtrOutputWithContext(ctx context.Context) InvitationMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationMessageOutput).ToInvitationMessagePtrOutputWithContext(ctx)
}

// InvitationMessagePtrInput is an input type that accepts InvitationMessageArgs, InvitationMessagePtr and InvitationMessagePtrOutput values.
// You can construct a concrete instance of `InvitationMessagePtrInput` via:
//
//          InvitationMessageArgs{...}
//
//  or:
//
//          nil
type InvitationMessagePtrInput interface {
	pulumi.Input

	ToInvitationMessagePtrOutput() InvitationMessagePtrOutput
	ToInvitationMessagePtrOutputWithContext(context.Context) InvitationMessagePtrOutput
}

type invitationMessagePtrType InvitationMessageArgs

func InvitationMessagePtr(v *InvitationMessageArgs) InvitationMessagePtrInput {
	return (*invitationMessagePtrType)(v)
}

func (*invitationMessagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationMessage)(nil)).Elem()
}

func (i *invitationMessagePtrType) ToInvitationMessagePtrOutput() InvitationMessagePtrOutput {
	return i.ToInvitationMessagePtrOutputWithContext(context.Background())
}

func (i *invitationMessagePtrType) ToInvitationMessagePtrOutputWithContext(ctx context.Context) InvitationMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationMessagePtrOutput)
}

type InvitationMessageOutput struct{ *pulumi.OutputState }

func (InvitationMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationMessage)(nil)).Elem()
}

func (o InvitationMessageOutput) ToInvitationMessageOutput() InvitationMessageOutput {
	return o
}

func (o InvitationMessageOutput) ToInvitationMessageOutputWithContext(ctx context.Context) InvitationMessageOutput {
	return o
}

func (o InvitationMessageOutput) ToInvitationMessagePtrOutput() InvitationMessagePtrOutput {
	return o.ToInvitationMessagePtrOutputWithContext(context.Background())
}

func (o InvitationMessageOutput) ToInvitationMessagePtrOutputWithContext(ctx context.Context) InvitationMessagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvitationMessage) *InvitationMessage {
		return &v
	}).(InvitationMessagePtrOutput)
}

// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
func (o InvitationMessageOutput) AdditionalRecipients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationMessage) *string { return v.AdditionalRecipients }).(pulumi.StringPtrOutput)
}

// Customized message body you want to send if you don't want to send the default message. Cannot be specified with `language`.
func (o InvitationMessageOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationMessage) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to `en-US`. Cannot be specified with `body`.
func (o InvitationMessageOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationMessage) *string { return v.Language }).(pulumi.StringPtrOutput)
}

type InvitationMessagePtrOutput struct{ *pulumi.OutputState }

func (InvitationMessagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationMessage)(nil)).Elem()
}

func (o InvitationMessagePtrOutput) ToInvitationMessagePtrOutput() InvitationMessagePtrOutput {
	return o
}

func (o InvitationMessagePtrOutput) ToInvitationMessagePtrOutputWithContext(ctx context.Context) InvitationMessagePtrOutput {
	return o
}

func (o InvitationMessagePtrOutput) Elem() InvitationMessageOutput {
	return o.ApplyT(func(v *InvitationMessage) InvitationMessage {
		if v != nil {
			return *v
		}
		var ret InvitationMessage
		return ret
	}).(InvitationMessageOutput)
}

// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
func (o InvitationMessagePtrOutput) AdditionalRecipients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationMessage) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalRecipients
	}).(pulumi.StringPtrOutput)
}

// Customized message body you want to send if you don't want to send the default message. Cannot be specified with `language`.
func (o InvitationMessagePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationMessage) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to `en-US`. Cannot be specified with `body`.
func (o InvitationMessagePtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationMessage) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

type NamedLocationCountry struct {
	// List of countries and/or regions in two-letter format specified by ISO 3166-2.
	CountriesAndRegions []string `pulumi:"countriesAndRegions"`
	// Whether IP addresses that don't map to a country or region should be included in the named location. Defaults to `false`.
	IncludeUnknownCountriesAndRegions *bool `pulumi:"includeUnknownCountriesAndRegions"`
}

// NamedLocationCountryInput is an input type that accepts NamedLocationCountryArgs and NamedLocationCountryOutput values.
// You can construct a concrete instance of `NamedLocationCountryInput` via:
//
//          NamedLocationCountryArgs{...}
type NamedLocationCountryInput interface {
	pulumi.Input

	ToNamedLocationCountryOutput() NamedLocationCountryOutput
	ToNamedLocationCountryOutputWithContext(context.Context) NamedLocationCountryOutput
}

type NamedLocationCountryArgs struct {
	// List of countries and/or regions in two-letter format specified by ISO 3166-2.
	CountriesAndRegions pulumi.StringArrayInput `pulumi:"countriesAndRegions"`
	// Whether IP addresses that don't map to a country or region should be included in the named location. Defaults to `false`.
	IncludeUnknownCountriesAndRegions pulumi.BoolPtrInput `pulumi:"includeUnknownCountriesAndRegions"`
}

func (NamedLocationCountryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedLocationCountry)(nil)).Elem()
}

func (i NamedLocationCountryArgs) ToNamedLocationCountryOutput() NamedLocationCountryOutput {
	return i.ToNamedLocationCountryOutputWithContext(context.Background())
}

func (i NamedLocationCountryArgs) ToNamedLocationCountryOutputWithContext(ctx context.Context) NamedLocationCountryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedLocationCountryOutput)
}

func (i NamedLocationCountryArgs) ToNamedLocationCountryPtrOutput() NamedLocationCountryPtrOutput {
	return i.ToNamedLocationCountryPtrOutputWithContext(context.Background())
}

func (i NamedLocationCountryArgs) ToNamedLocationCountryPtrOutputWithContext(ctx context.Context) NamedLocationCountryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedLocationCountryOutput).ToNamedLocationCountryPtrOutputWithContext(ctx)
}

// NamedLocationCountryPtrInput is an input type that accepts NamedLocationCountryArgs, NamedLocationCountryPtr and NamedLocationCountryPtrOutput values.
// You can construct a concrete instance of `NamedLocationCountryPtrInput` via:
//
//          NamedLocationCountryArgs{...}
//
//  or:
//
//          nil
type NamedLocationCountryPtrInput interface {
	pulumi.Input

	ToNamedLocationCountryPtrOutput() NamedLocationCountryPtrOutput
	ToNamedLocationCountryPtrOutputWithContext(context.Context) NamedLocationCountryPtrOutput
}

type namedLocationCountryPtrType NamedLocationCountryArgs

func NamedLocationCountryPtr(v *NamedLocationCountryArgs) NamedLocationCountryPtrInput {
	return (*namedLocationCountryPtrType)(v)
}

func (*namedLocationCountryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedLocationCountry)(nil)).Elem()
}

func (i *namedLocationCountryPtrType) ToNamedLocationCountryPtrOutput() NamedLocationCountryPtrOutput {
	return i.ToNamedLocationCountryPtrOutputWithContext(context.Background())
}

func (i *namedLocationCountryPtrType) ToNamedLocationCountryPtrOutputWithContext(ctx context.Context) NamedLocationCountryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedLocationCountryPtrOutput)
}

type NamedLocationCountryOutput struct{ *pulumi.OutputState }

func (NamedLocationCountryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedLocationCountry)(nil)).Elem()
}

func (o NamedLocationCountryOutput) ToNamedLocationCountryOutput() NamedLocationCountryOutput {
	return o
}

func (o NamedLocationCountryOutput) ToNamedLocationCountryOutputWithContext(ctx context.Context) NamedLocationCountryOutput {
	return o
}

func (o NamedLocationCountryOutput) ToNamedLocationCountryPtrOutput() NamedLocationCountryPtrOutput {
	return o.ToNamedLocationCountryPtrOutputWithContext(context.Background())
}

func (o NamedLocationCountryOutput) ToNamedLocationCountryPtrOutputWithContext(ctx context.Context) NamedLocationCountryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamedLocationCountry) *NamedLocationCountry {
		return &v
	}).(NamedLocationCountryPtrOutput)
}

// List of countries and/or regions in two-letter format specified by ISO 3166-2.
func (o NamedLocationCountryOutput) CountriesAndRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NamedLocationCountry) []string { return v.CountriesAndRegions }).(pulumi.StringArrayOutput)
}

// Whether IP addresses that don't map to a country or region should be included in the named location. Defaults to `false`.
func (o NamedLocationCountryOutput) IncludeUnknownCountriesAndRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NamedLocationCountry) *bool { return v.IncludeUnknownCountriesAndRegions }).(pulumi.BoolPtrOutput)
}

type NamedLocationCountryPtrOutput struct{ *pulumi.OutputState }

func (NamedLocationCountryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedLocationCountry)(nil)).Elem()
}

func (o NamedLocationCountryPtrOutput) ToNamedLocationCountryPtrOutput() NamedLocationCountryPtrOutput {
	return o
}

func (o NamedLocationCountryPtrOutput) ToNamedLocationCountryPtrOutputWithContext(ctx context.Context) NamedLocationCountryPtrOutput {
	return o
}

func (o NamedLocationCountryPtrOutput) Elem() NamedLocationCountryOutput {
	return o.ApplyT(func(v *NamedLocationCountry) NamedLocationCountry {
		if v != nil {
			return *v
		}
		var ret NamedLocationCountry
		return ret
	}).(NamedLocationCountryOutput)
}

// List of countries and/or regions in two-letter format specified by ISO 3166-2.
func (o NamedLocationCountryPtrOutput) CountriesAndRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NamedLocationCountry) []string {
		if v == nil {
			return nil
		}
		return v.CountriesAndRegions
	}).(pulumi.StringArrayOutput)
}

// Whether IP addresses that don't map to a country or region should be included in the named location. Defaults to `false`.
func (o NamedLocationCountryPtrOutput) IncludeUnknownCountriesAndRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamedLocationCountry) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeUnknownCountriesAndRegions
	}).(pulumi.BoolPtrOutput)
}

type NamedLocationIp struct {
	// List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596.
	IpRanges []string `pulumi:"ipRanges"`
	// Whether the named location is trusted. Defaults to `false`.
	Trusted *bool `pulumi:"trusted"`
}

// NamedLocationIpInput is an input type that accepts NamedLocationIpArgs and NamedLocationIpOutput values.
// You can construct a concrete instance of `NamedLocationIpInput` via:
//
//          NamedLocationIpArgs{...}
type NamedLocationIpInput interface {
	pulumi.Input

	ToNamedLocationIpOutput() NamedLocationIpOutput
	ToNamedLocationIpOutputWithContext(context.Context) NamedLocationIpOutput
}

type NamedLocationIpArgs struct {
	// List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596.
	IpRanges pulumi.StringArrayInput `pulumi:"ipRanges"`
	// Whether the named location is trusted. Defaults to `false`.
	Trusted pulumi.BoolPtrInput `pulumi:"trusted"`
}

func (NamedLocationIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedLocationIp)(nil)).Elem()
}

func (i NamedLocationIpArgs) ToNamedLocationIpOutput() NamedLocationIpOutput {
	return i.ToNamedLocationIpOutputWithContext(context.Background())
}

func (i NamedLocationIpArgs) ToNamedLocationIpOutputWithContext(ctx context.Context) NamedLocationIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedLocationIpOutput)
}

func (i NamedLocationIpArgs) ToNamedLocationIpPtrOutput() NamedLocationIpPtrOutput {
	return i.ToNamedLocationIpPtrOutputWithContext(context.Background())
}

func (i NamedLocationIpArgs) ToNamedLocationIpPtrOutputWithContext(ctx context.Context) NamedLocationIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedLocationIpOutput).ToNamedLocationIpPtrOutputWithContext(ctx)
}

// NamedLocationIpPtrInput is an input type that accepts NamedLocationIpArgs, NamedLocationIpPtr and NamedLocationIpPtrOutput values.
// You can construct a concrete instance of `NamedLocationIpPtrInput` via:
//
//          NamedLocationIpArgs{...}
//
//  or:
//
//          nil
type NamedLocationIpPtrInput interface {
	pulumi.Input

	ToNamedLocationIpPtrOutput() NamedLocationIpPtrOutput
	ToNamedLocationIpPtrOutputWithContext(context.Context) NamedLocationIpPtrOutput
}

type namedLocationIpPtrType NamedLocationIpArgs

func NamedLocationIpPtr(v *NamedLocationIpArgs) NamedLocationIpPtrInput {
	return (*namedLocationIpPtrType)(v)
}

func (*namedLocationIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedLocationIp)(nil)).Elem()
}

func (i *namedLocationIpPtrType) ToNamedLocationIpPtrOutput() NamedLocationIpPtrOutput {
	return i.ToNamedLocationIpPtrOutputWithContext(context.Background())
}

func (i *namedLocationIpPtrType) ToNamedLocationIpPtrOutputWithContext(ctx context.Context) NamedLocationIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedLocationIpPtrOutput)
}

type NamedLocationIpOutput struct{ *pulumi.OutputState }

func (NamedLocationIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedLocationIp)(nil)).Elem()
}

func (o NamedLocationIpOutput) ToNamedLocationIpOutput() NamedLocationIpOutput {
	return o
}

func (o NamedLocationIpOutput) ToNamedLocationIpOutputWithContext(ctx context.Context) NamedLocationIpOutput {
	return o
}

func (o NamedLocationIpOutput) ToNamedLocationIpPtrOutput() NamedLocationIpPtrOutput {
	return o.ToNamedLocationIpPtrOutputWithContext(context.Background())
}

func (o NamedLocationIpOutput) ToNamedLocationIpPtrOutputWithContext(ctx context.Context) NamedLocationIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamedLocationIp) *NamedLocationIp {
		return &v
	}).(NamedLocationIpPtrOutput)
}

// List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596.
func (o NamedLocationIpOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NamedLocationIp) []string { return v.IpRanges }).(pulumi.StringArrayOutput)
}

// Whether the named location is trusted. Defaults to `false`.
func (o NamedLocationIpOutput) Trusted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NamedLocationIp) *bool { return v.Trusted }).(pulumi.BoolPtrOutput)
}

type NamedLocationIpPtrOutput struct{ *pulumi.OutputState }

func (NamedLocationIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedLocationIp)(nil)).Elem()
}

func (o NamedLocationIpPtrOutput) ToNamedLocationIpPtrOutput() NamedLocationIpPtrOutput {
	return o
}

func (o NamedLocationIpPtrOutput) ToNamedLocationIpPtrOutputWithContext(ctx context.Context) NamedLocationIpPtrOutput {
	return o
}

func (o NamedLocationIpPtrOutput) Elem() NamedLocationIpOutput {
	return o.ApplyT(func(v *NamedLocationIp) NamedLocationIp {
		if v != nil {
			return *v
		}
		var ret NamedLocationIp
		return ret
	}).(NamedLocationIpOutput)
}

// List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596.
func (o NamedLocationIpPtrOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NamedLocationIp) []string {
		if v == nil {
			return nil
		}
		return v.IpRanges
	}).(pulumi.StringArrayOutput)
}

// Whether the named location is trusted. Defaults to `false`.
func (o NamedLocationIpPtrOutput) Trusted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamedLocationIp) *bool {
		if v == nil {
			return nil
		}
		return v.Trusted
	}).(pulumi.BoolPtrOutput)
}

type ServicePrincipalAppRole struct {
	// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: `User` and `Application`, or both.
	AllowedMemberTypes []string `pulumi:"allowedMemberTypes"`
	// A description of the service principal provided for internal end-users.
	Description *string `pulumi:"description"`
	// Display name for the app role that appears during app role assignment and in consent experiences.
	DisplayName *string `pulumi:"displayName"`
	// Specifies whether the permission scope is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The unique identifier of the delegated permission.
	Id *string `pulumi:"id"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value *string `pulumi:"value"`
}

// ServicePrincipalAppRoleInput is an input type that accepts ServicePrincipalAppRoleArgs and ServicePrincipalAppRoleOutput values.
// You can construct a concrete instance of `ServicePrincipalAppRoleInput` via:
//
//          ServicePrincipalAppRoleArgs{...}
type ServicePrincipalAppRoleInput interface {
	pulumi.Input

	ToServicePrincipalAppRoleOutput() ServicePrincipalAppRoleOutput
	ToServicePrincipalAppRoleOutputWithContext(context.Context) ServicePrincipalAppRoleOutput
}

type ServicePrincipalAppRoleArgs struct {
	// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: `User` and `Application`, or both.
	AllowedMemberTypes pulumi.StringArrayInput `pulumi:"allowedMemberTypes"`
	// A description of the service principal provided for internal end-users.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Display name for the app role that appears during app role assignment and in consent experiences.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Specifies whether the permission scope is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The unique identifier of the delegated permission.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServicePrincipalAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalAppRole)(nil)).Elem()
}

func (i ServicePrincipalAppRoleArgs) ToServicePrincipalAppRoleOutput() ServicePrincipalAppRoleOutput {
	return i.ToServicePrincipalAppRoleOutputWithContext(context.Background())
}

func (i ServicePrincipalAppRoleArgs) ToServicePrincipalAppRoleOutputWithContext(ctx context.Context) ServicePrincipalAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalAppRoleOutput)
}

// ServicePrincipalAppRoleArrayInput is an input type that accepts ServicePrincipalAppRoleArray and ServicePrincipalAppRoleArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalAppRoleArrayInput` via:
//
//          ServicePrincipalAppRoleArray{ ServicePrincipalAppRoleArgs{...} }
type ServicePrincipalAppRoleArrayInput interface {
	pulumi.Input

	ToServicePrincipalAppRoleArrayOutput() ServicePrincipalAppRoleArrayOutput
	ToServicePrincipalAppRoleArrayOutputWithContext(context.Context) ServicePrincipalAppRoleArrayOutput
}

type ServicePrincipalAppRoleArray []ServicePrincipalAppRoleInput

func (ServicePrincipalAppRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalAppRole)(nil)).Elem()
}

func (i ServicePrincipalAppRoleArray) ToServicePrincipalAppRoleArrayOutput() ServicePrincipalAppRoleArrayOutput {
	return i.ToServicePrincipalAppRoleArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalAppRoleArray) ToServicePrincipalAppRoleArrayOutputWithContext(ctx context.Context) ServicePrincipalAppRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalAppRoleArrayOutput)
}

type ServicePrincipalAppRoleOutput struct{ *pulumi.OutputState }

func (ServicePrincipalAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalAppRole)(nil)).Elem()
}

func (o ServicePrincipalAppRoleOutput) ToServicePrincipalAppRoleOutput() ServicePrincipalAppRoleOutput {
	return o
}

func (o ServicePrincipalAppRoleOutput) ToServicePrincipalAppRoleOutputWithContext(ctx context.Context) ServicePrincipalAppRoleOutput {
	return o
}

// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: `User` and `Application`, or both.
func (o ServicePrincipalAppRoleOutput) AllowedMemberTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePrincipalAppRole) []string { return v.AllowedMemberTypes }).(pulumi.StringArrayOutput)
}

// A description of the service principal provided for internal end-users.
func (o ServicePrincipalAppRoleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAppRole) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name for the app role that appears during app role assignment and in consent experiences.
func (o ServicePrincipalAppRoleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAppRole) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Specifies whether the permission scope is enabled.
func (o ServicePrincipalAppRoleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAppRole) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The unique identifier of the delegated permission.
func (o ServicePrincipalAppRoleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAppRole) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
func (o ServicePrincipalAppRoleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAppRole) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServicePrincipalAppRoleArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalAppRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalAppRole)(nil)).Elem()
}

func (o ServicePrincipalAppRoleArrayOutput) ToServicePrincipalAppRoleArrayOutput() ServicePrincipalAppRoleArrayOutput {
	return o
}

func (o ServicePrincipalAppRoleArrayOutput) ToServicePrincipalAppRoleArrayOutputWithContext(ctx context.Context) ServicePrincipalAppRoleArrayOutput {
	return o
}

func (o ServicePrincipalAppRoleArrayOutput) Index(i pulumi.IntInput) ServicePrincipalAppRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePrincipalAppRole {
		return vs[0].([]ServicePrincipalAppRole)[vs[1].(int)]
	}).(ServicePrincipalAppRoleOutput)
}

type ServicePrincipalFeature struct {
	CustomSingleSignOnApp *bool `pulumi:"customSingleSignOnApp"`
	EnterpriseApplication *bool `pulumi:"enterpriseApplication"`
	GalleryApplication    *bool `pulumi:"galleryApplication"`
	VisibleToUsers        *bool `pulumi:"visibleToUsers"`
}

// ServicePrincipalFeatureInput is an input type that accepts ServicePrincipalFeatureArgs and ServicePrincipalFeatureOutput values.
// You can construct a concrete instance of `ServicePrincipalFeatureInput` via:
//
//          ServicePrincipalFeatureArgs{...}
type ServicePrincipalFeatureInput interface {
	pulumi.Input

	ToServicePrincipalFeatureOutput() ServicePrincipalFeatureOutput
	ToServicePrincipalFeatureOutputWithContext(context.Context) ServicePrincipalFeatureOutput
}

type ServicePrincipalFeatureArgs struct {
	CustomSingleSignOnApp pulumi.BoolPtrInput `pulumi:"customSingleSignOnApp"`
	EnterpriseApplication pulumi.BoolPtrInput `pulumi:"enterpriseApplication"`
	GalleryApplication    pulumi.BoolPtrInput `pulumi:"galleryApplication"`
	VisibleToUsers        pulumi.BoolPtrInput `pulumi:"visibleToUsers"`
}

func (ServicePrincipalFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalFeature)(nil)).Elem()
}

func (i ServicePrincipalFeatureArgs) ToServicePrincipalFeatureOutput() ServicePrincipalFeatureOutput {
	return i.ToServicePrincipalFeatureOutputWithContext(context.Background())
}

func (i ServicePrincipalFeatureArgs) ToServicePrincipalFeatureOutputWithContext(ctx context.Context) ServicePrincipalFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFeatureOutput)
}

// ServicePrincipalFeatureArrayInput is an input type that accepts ServicePrincipalFeatureArray and ServicePrincipalFeatureArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalFeatureArrayInput` via:
//
//          ServicePrincipalFeatureArray{ ServicePrincipalFeatureArgs{...} }
type ServicePrincipalFeatureArrayInput interface {
	pulumi.Input

	ToServicePrincipalFeatureArrayOutput() ServicePrincipalFeatureArrayOutput
	ToServicePrincipalFeatureArrayOutputWithContext(context.Context) ServicePrincipalFeatureArrayOutput
}

type ServicePrincipalFeatureArray []ServicePrincipalFeatureInput

func (ServicePrincipalFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalFeature)(nil)).Elem()
}

func (i ServicePrincipalFeatureArray) ToServicePrincipalFeatureArrayOutput() ServicePrincipalFeatureArrayOutput {
	return i.ToServicePrincipalFeatureArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalFeatureArray) ToServicePrincipalFeatureArrayOutputWithContext(ctx context.Context) ServicePrincipalFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFeatureArrayOutput)
}

type ServicePrincipalFeatureOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalFeature)(nil)).Elem()
}

func (o ServicePrincipalFeatureOutput) ToServicePrincipalFeatureOutput() ServicePrincipalFeatureOutput {
	return o
}

func (o ServicePrincipalFeatureOutput) ToServicePrincipalFeatureOutputWithContext(ctx context.Context) ServicePrincipalFeatureOutput {
	return o
}

func (o ServicePrincipalFeatureOutput) CustomSingleSignOnApp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeature) *bool { return v.CustomSingleSignOnApp }).(pulumi.BoolPtrOutput)
}

func (o ServicePrincipalFeatureOutput) EnterpriseApplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeature) *bool { return v.EnterpriseApplication }).(pulumi.BoolPtrOutput)
}

func (o ServicePrincipalFeatureOutput) GalleryApplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeature) *bool { return v.GalleryApplication }).(pulumi.BoolPtrOutput)
}

func (o ServicePrincipalFeatureOutput) VisibleToUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeature) *bool { return v.VisibleToUsers }).(pulumi.BoolPtrOutput)
}

type ServicePrincipalFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalFeature)(nil)).Elem()
}

func (o ServicePrincipalFeatureArrayOutput) ToServicePrincipalFeatureArrayOutput() ServicePrincipalFeatureArrayOutput {
	return o
}

func (o ServicePrincipalFeatureArrayOutput) ToServicePrincipalFeatureArrayOutputWithContext(ctx context.Context) ServicePrincipalFeatureArrayOutput {
	return o
}

func (o ServicePrincipalFeatureArrayOutput) Index(i pulumi.IntInput) ServicePrincipalFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePrincipalFeature {
		return vs[0].([]ServicePrincipalFeature)[vs[1].(int)]
	}).(ServicePrincipalFeatureOutput)
}

type ServicePrincipalFeatureTag struct {
	// Whether this service principal represents a custom SAML application. Enabling this will assign the `WindowsAzureActiveDirectoryCustomSingleSignOnApplication` tag. Defaults to `false`.
	CustomSingleSignOn *bool `pulumi:"customSingleSignOn"`
	// Whether this service principal represents an Enterprise Application. Enabling this will assign the `WindowsAzureActiveDirectoryIntegratedApp` tag. Defaults to `false`.
	Enterprise *bool `pulumi:"enterprise"`
	// Whether this service principal represents a gallery application. Enabling this will assign the `WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1` tag. Defaults to `false`.
	Gallery *bool `pulumi:"gallery"`
	// Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the `HideApp` tag. Defaults to `false`.
	Hide *bool `pulumi:"hide"`
}

// ServicePrincipalFeatureTagInput is an input type that accepts ServicePrincipalFeatureTagArgs and ServicePrincipalFeatureTagOutput values.
// You can construct a concrete instance of `ServicePrincipalFeatureTagInput` via:
//
//          ServicePrincipalFeatureTagArgs{...}
type ServicePrincipalFeatureTagInput interface {
	pulumi.Input

	ToServicePrincipalFeatureTagOutput() ServicePrincipalFeatureTagOutput
	ToServicePrincipalFeatureTagOutputWithContext(context.Context) ServicePrincipalFeatureTagOutput
}

type ServicePrincipalFeatureTagArgs struct {
	// Whether this service principal represents a custom SAML application. Enabling this will assign the `WindowsAzureActiveDirectoryCustomSingleSignOnApplication` tag. Defaults to `false`.
	CustomSingleSignOn pulumi.BoolPtrInput `pulumi:"customSingleSignOn"`
	// Whether this service principal represents an Enterprise Application. Enabling this will assign the `WindowsAzureActiveDirectoryIntegratedApp` tag. Defaults to `false`.
	Enterprise pulumi.BoolPtrInput `pulumi:"enterprise"`
	// Whether this service principal represents a gallery application. Enabling this will assign the `WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1` tag. Defaults to `false`.
	Gallery pulumi.BoolPtrInput `pulumi:"gallery"`
	// Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the `HideApp` tag. Defaults to `false`.
	Hide pulumi.BoolPtrInput `pulumi:"hide"`
}

func (ServicePrincipalFeatureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalFeatureTag)(nil)).Elem()
}

func (i ServicePrincipalFeatureTagArgs) ToServicePrincipalFeatureTagOutput() ServicePrincipalFeatureTagOutput {
	return i.ToServicePrincipalFeatureTagOutputWithContext(context.Background())
}

func (i ServicePrincipalFeatureTagArgs) ToServicePrincipalFeatureTagOutputWithContext(ctx context.Context) ServicePrincipalFeatureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFeatureTagOutput)
}

// ServicePrincipalFeatureTagArrayInput is an input type that accepts ServicePrincipalFeatureTagArray and ServicePrincipalFeatureTagArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalFeatureTagArrayInput` via:
//
//          ServicePrincipalFeatureTagArray{ ServicePrincipalFeatureTagArgs{...} }
type ServicePrincipalFeatureTagArrayInput interface {
	pulumi.Input

	ToServicePrincipalFeatureTagArrayOutput() ServicePrincipalFeatureTagArrayOutput
	ToServicePrincipalFeatureTagArrayOutputWithContext(context.Context) ServicePrincipalFeatureTagArrayOutput
}

type ServicePrincipalFeatureTagArray []ServicePrincipalFeatureTagInput

func (ServicePrincipalFeatureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalFeatureTag)(nil)).Elem()
}

func (i ServicePrincipalFeatureTagArray) ToServicePrincipalFeatureTagArrayOutput() ServicePrincipalFeatureTagArrayOutput {
	return i.ToServicePrincipalFeatureTagArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalFeatureTagArray) ToServicePrincipalFeatureTagArrayOutputWithContext(ctx context.Context) ServicePrincipalFeatureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalFeatureTagArrayOutput)
}

type ServicePrincipalFeatureTagOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFeatureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalFeatureTag)(nil)).Elem()
}

func (o ServicePrincipalFeatureTagOutput) ToServicePrincipalFeatureTagOutput() ServicePrincipalFeatureTagOutput {
	return o
}

func (o ServicePrincipalFeatureTagOutput) ToServicePrincipalFeatureTagOutputWithContext(ctx context.Context) ServicePrincipalFeatureTagOutput {
	return o
}

// Whether this service principal represents a custom SAML application. Enabling this will assign the `WindowsAzureActiveDirectoryCustomSingleSignOnApplication` tag. Defaults to `false`.
func (o ServicePrincipalFeatureTagOutput) CustomSingleSignOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeatureTag) *bool { return v.CustomSingleSignOn }).(pulumi.BoolPtrOutput)
}

// Whether this service principal represents an Enterprise Application. Enabling this will assign the `WindowsAzureActiveDirectoryIntegratedApp` tag. Defaults to `false`.
func (o ServicePrincipalFeatureTagOutput) Enterprise() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeatureTag) *bool { return v.Enterprise }).(pulumi.BoolPtrOutput)
}

// Whether this service principal represents a gallery application. Enabling this will assign the `WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1` tag. Defaults to `false`.
func (o ServicePrincipalFeatureTagOutput) Gallery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeatureTag) *bool { return v.Gallery }).(pulumi.BoolPtrOutput)
}

// Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the `HideApp` tag. Defaults to `false`.
func (o ServicePrincipalFeatureTagOutput) Hide() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalFeatureTag) *bool { return v.Hide }).(pulumi.BoolPtrOutput)
}

type ServicePrincipalFeatureTagArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalFeatureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalFeatureTag)(nil)).Elem()
}

func (o ServicePrincipalFeatureTagArrayOutput) ToServicePrincipalFeatureTagArrayOutput() ServicePrincipalFeatureTagArrayOutput {
	return o
}

func (o ServicePrincipalFeatureTagArrayOutput) ToServicePrincipalFeatureTagArrayOutputWithContext(ctx context.Context) ServicePrincipalFeatureTagArrayOutput {
	return o
}

func (o ServicePrincipalFeatureTagArrayOutput) Index(i pulumi.IntInput) ServicePrincipalFeatureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePrincipalFeatureTag {
		return vs[0].([]ServicePrincipalFeatureTag)[vs[1].(int)]
	}).(ServicePrincipalFeatureTagOutput)
}

type ServicePrincipalOauth2PermissionScope struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription *string `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName *string `pulumi:"adminConsentDisplayName"`
	// Specifies whether the permission scope is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The unique identifier of the delegated permission.
	Id *string `pulumi:"id"`
	// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
	Type *string `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription *string `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName *string `pulumi:"userConsentDisplayName"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value *string `pulumi:"value"`
}

// ServicePrincipalOauth2PermissionScopeInput is an input type that accepts ServicePrincipalOauth2PermissionScopeArgs and ServicePrincipalOauth2PermissionScopeOutput values.
// You can construct a concrete instance of `ServicePrincipalOauth2PermissionScopeInput` via:
//
//          ServicePrincipalOauth2PermissionScopeArgs{...}
type ServicePrincipalOauth2PermissionScopeInput interface {
	pulumi.Input

	ToServicePrincipalOauth2PermissionScopeOutput() ServicePrincipalOauth2PermissionScopeOutput
	ToServicePrincipalOauth2PermissionScopeOutputWithContext(context.Context) ServicePrincipalOauth2PermissionScopeOutput
}

type ServicePrincipalOauth2PermissionScopeArgs struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription pulumi.StringPtrInput `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName pulumi.StringPtrInput `pulumi:"adminConsentDisplayName"`
	// Specifies whether the permission scope is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The unique identifier of the delegated permission.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription pulumi.StringPtrInput `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName pulumi.StringPtrInput `pulumi:"userConsentDisplayName"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServicePrincipalOauth2PermissionScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (i ServicePrincipalOauth2PermissionScopeArgs) ToServicePrincipalOauth2PermissionScopeOutput() ServicePrincipalOauth2PermissionScopeOutput {
	return i.ToServicePrincipalOauth2PermissionScopeOutputWithContext(context.Background())
}

func (i ServicePrincipalOauth2PermissionScopeArgs) ToServicePrincipalOauth2PermissionScopeOutputWithContext(ctx context.Context) ServicePrincipalOauth2PermissionScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalOauth2PermissionScopeOutput)
}

// ServicePrincipalOauth2PermissionScopeArrayInput is an input type that accepts ServicePrincipalOauth2PermissionScopeArray and ServicePrincipalOauth2PermissionScopeArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalOauth2PermissionScopeArrayInput` via:
//
//          ServicePrincipalOauth2PermissionScopeArray{ ServicePrincipalOauth2PermissionScopeArgs{...} }
type ServicePrincipalOauth2PermissionScopeArrayInput interface {
	pulumi.Input

	ToServicePrincipalOauth2PermissionScopeArrayOutput() ServicePrincipalOauth2PermissionScopeArrayOutput
	ToServicePrincipalOauth2PermissionScopeArrayOutputWithContext(context.Context) ServicePrincipalOauth2PermissionScopeArrayOutput
}

type ServicePrincipalOauth2PermissionScopeArray []ServicePrincipalOauth2PermissionScopeInput

func (ServicePrincipalOauth2PermissionScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (i ServicePrincipalOauth2PermissionScopeArray) ToServicePrincipalOauth2PermissionScopeArrayOutput() ServicePrincipalOauth2PermissionScopeArrayOutput {
	return i.ToServicePrincipalOauth2PermissionScopeArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalOauth2PermissionScopeArray) ToServicePrincipalOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) ServicePrincipalOauth2PermissionScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalOauth2PermissionScopeArrayOutput)
}

type ServicePrincipalOauth2PermissionScopeOutput struct{ *pulumi.OutputState }

func (ServicePrincipalOauth2PermissionScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (o ServicePrincipalOauth2PermissionScopeOutput) ToServicePrincipalOauth2PermissionScopeOutput() ServicePrincipalOauth2PermissionScopeOutput {
	return o
}

func (o ServicePrincipalOauth2PermissionScopeOutput) ToServicePrincipalOauth2PermissionScopeOutputWithContext(ctx context.Context) ServicePrincipalOauth2PermissionScopeOutput {
	return o
}

// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
func (o ServicePrincipalOauth2PermissionScopeOutput) AdminConsentDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.AdminConsentDescription }).(pulumi.StringPtrOutput)
}

// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
func (o ServicePrincipalOauth2PermissionScopeOutput) AdminConsentDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.AdminConsentDisplayName }).(pulumi.StringPtrOutput)
}

// Specifies whether the permission scope is enabled.
func (o ServicePrincipalOauth2PermissionScopeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The unique identifier of the delegated permission.
func (o ServicePrincipalOauth2PermissionScopeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
func (o ServicePrincipalOauth2PermissionScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
func (o ServicePrincipalOauth2PermissionScopeOutput) UserConsentDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.UserConsentDescription }).(pulumi.StringPtrOutput)
}

// Display name for the delegated permission that appears in the end user consent experience.
func (o ServicePrincipalOauth2PermissionScopeOutput) UserConsentDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.UserConsentDisplayName }).(pulumi.StringPtrOutput)
}

// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
func (o ServicePrincipalOauth2PermissionScopeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalOauth2PermissionScope) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServicePrincipalOauth2PermissionScopeArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalOauth2PermissionScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (o ServicePrincipalOauth2PermissionScopeArrayOutput) ToServicePrincipalOauth2PermissionScopeArrayOutput() ServicePrincipalOauth2PermissionScopeArrayOutput {
	return o
}

func (o ServicePrincipalOauth2PermissionScopeArrayOutput) ToServicePrincipalOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) ServicePrincipalOauth2PermissionScopeArrayOutput {
	return o
}

func (o ServicePrincipalOauth2PermissionScopeArrayOutput) Index(i pulumi.IntInput) ServicePrincipalOauth2PermissionScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePrincipalOauth2PermissionScope {
		return vs[0].([]ServicePrincipalOauth2PermissionScope)[vs[1].(int)]
	}).(ServicePrincipalOauth2PermissionScopeOutput)
}

type ServicePrincipalSamlSingleSignOn struct {
	// The relative URI the service provider would redirect to after completion of the single sign-on flow.
	RelayState *string `pulumi:"relayState"`
}

// ServicePrincipalSamlSingleSignOnInput is an input type that accepts ServicePrincipalSamlSingleSignOnArgs and ServicePrincipalSamlSingleSignOnOutput values.
// You can construct a concrete instance of `ServicePrincipalSamlSingleSignOnInput` via:
//
//          ServicePrincipalSamlSingleSignOnArgs{...}
type ServicePrincipalSamlSingleSignOnInput interface {
	pulumi.Input

	ToServicePrincipalSamlSingleSignOnOutput() ServicePrincipalSamlSingleSignOnOutput
	ToServicePrincipalSamlSingleSignOnOutputWithContext(context.Context) ServicePrincipalSamlSingleSignOnOutput
}

type ServicePrincipalSamlSingleSignOnArgs struct {
	// The relative URI the service provider would redirect to after completion of the single sign-on flow.
	RelayState pulumi.StringPtrInput `pulumi:"relayState"`
}

func (ServicePrincipalSamlSingleSignOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (i ServicePrincipalSamlSingleSignOnArgs) ToServicePrincipalSamlSingleSignOnOutput() ServicePrincipalSamlSingleSignOnOutput {
	return i.ToServicePrincipalSamlSingleSignOnOutputWithContext(context.Background())
}

func (i ServicePrincipalSamlSingleSignOnArgs) ToServicePrincipalSamlSingleSignOnOutputWithContext(ctx context.Context) ServicePrincipalSamlSingleSignOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalSamlSingleSignOnOutput)
}

func (i ServicePrincipalSamlSingleSignOnArgs) ToServicePrincipalSamlSingleSignOnPtrOutput() ServicePrincipalSamlSingleSignOnPtrOutput {
	return i.ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(context.Background())
}

func (i ServicePrincipalSamlSingleSignOnArgs) ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(ctx context.Context) ServicePrincipalSamlSingleSignOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalSamlSingleSignOnOutput).ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(ctx)
}

// ServicePrincipalSamlSingleSignOnPtrInput is an input type that accepts ServicePrincipalSamlSingleSignOnArgs, ServicePrincipalSamlSingleSignOnPtr and ServicePrincipalSamlSingleSignOnPtrOutput values.
// You can construct a concrete instance of `ServicePrincipalSamlSingleSignOnPtrInput` via:
//
//          ServicePrincipalSamlSingleSignOnArgs{...}
//
//  or:
//
//          nil
type ServicePrincipalSamlSingleSignOnPtrInput interface {
	pulumi.Input

	ToServicePrincipalSamlSingleSignOnPtrOutput() ServicePrincipalSamlSingleSignOnPtrOutput
	ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(context.Context) ServicePrincipalSamlSingleSignOnPtrOutput
}

type servicePrincipalSamlSingleSignOnPtrType ServicePrincipalSamlSingleSignOnArgs

func ServicePrincipalSamlSingleSignOnPtr(v *ServicePrincipalSamlSingleSignOnArgs) ServicePrincipalSamlSingleSignOnPtrInput {
	return (*servicePrincipalSamlSingleSignOnPtrType)(v)
}

func (*servicePrincipalSamlSingleSignOnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (i *servicePrincipalSamlSingleSignOnPtrType) ToServicePrincipalSamlSingleSignOnPtrOutput() ServicePrincipalSamlSingleSignOnPtrOutput {
	return i.ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(context.Background())
}

func (i *servicePrincipalSamlSingleSignOnPtrType) ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(ctx context.Context) ServicePrincipalSamlSingleSignOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalSamlSingleSignOnPtrOutput)
}

type ServicePrincipalSamlSingleSignOnOutput struct{ *pulumi.OutputState }

func (ServicePrincipalSamlSingleSignOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (o ServicePrincipalSamlSingleSignOnOutput) ToServicePrincipalSamlSingleSignOnOutput() ServicePrincipalSamlSingleSignOnOutput {
	return o
}

func (o ServicePrincipalSamlSingleSignOnOutput) ToServicePrincipalSamlSingleSignOnOutputWithContext(ctx context.Context) ServicePrincipalSamlSingleSignOnOutput {
	return o
}

func (o ServicePrincipalSamlSingleSignOnOutput) ToServicePrincipalSamlSingleSignOnPtrOutput() ServicePrincipalSamlSingleSignOnPtrOutput {
	return o.ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(context.Background())
}

func (o ServicePrincipalSamlSingleSignOnOutput) ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(ctx context.Context) ServicePrincipalSamlSingleSignOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePrincipalSamlSingleSignOn) *ServicePrincipalSamlSingleSignOn {
		return &v
	}).(ServicePrincipalSamlSingleSignOnPtrOutput)
}

// The relative URI the service provider would redirect to after completion of the single sign-on flow.
func (o ServicePrincipalSamlSingleSignOnOutput) RelayState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalSamlSingleSignOn) *string { return v.RelayState }).(pulumi.StringPtrOutput)
}

type ServicePrincipalSamlSingleSignOnPtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalSamlSingleSignOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (o ServicePrincipalSamlSingleSignOnPtrOutput) ToServicePrincipalSamlSingleSignOnPtrOutput() ServicePrincipalSamlSingleSignOnPtrOutput {
	return o
}

func (o ServicePrincipalSamlSingleSignOnPtrOutput) ToServicePrincipalSamlSingleSignOnPtrOutputWithContext(ctx context.Context) ServicePrincipalSamlSingleSignOnPtrOutput {
	return o
}

func (o ServicePrincipalSamlSingleSignOnPtrOutput) Elem() ServicePrincipalSamlSingleSignOnOutput {
	return o.ApplyT(func(v *ServicePrincipalSamlSingleSignOn) ServicePrincipalSamlSingleSignOn {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalSamlSingleSignOn
		return ret
	}).(ServicePrincipalSamlSingleSignOnOutput)
}

// The relative URI the service provider would redirect to after completion of the single sign-on flow.
func (o ServicePrincipalSamlSingleSignOnPtrOutput) RelayState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalSamlSingleSignOn) *string {
		if v == nil {
			return nil
		}
		return v.RelayState
	}).(pulumi.StringPtrOutput)
}

type GetApplicationApi struct {
	// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
	KnownClientApplications []string `pulumi:"knownClientApplications"`
	// Allows an application to use claims mapping without specifying a custom signing key.
	MappedClaimsEnabled bool `pulumi:"mappedClaimsEnabled"`
	// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
	Oauth2PermissionScopes []GetApplicationApiOauth2PermissionScope `pulumi:"oauth2PermissionScopes"`
	// The access token version expected by this resource. Possible values are `1` or `2`.
	RequestedAccessTokenVersion int `pulumi:"requestedAccessTokenVersion"`
}

// GetApplicationApiInput is an input type that accepts GetApplicationApiArgs and GetApplicationApiOutput values.
// You can construct a concrete instance of `GetApplicationApiInput` via:
//
//          GetApplicationApiArgs{...}
type GetApplicationApiInput interface {
	pulumi.Input

	ToGetApplicationApiOutput() GetApplicationApiOutput
	ToGetApplicationApiOutputWithContext(context.Context) GetApplicationApiOutput
}

type GetApplicationApiArgs struct {
	// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
	KnownClientApplications pulumi.StringArrayInput `pulumi:"knownClientApplications"`
	// Allows an application to use claims mapping without specifying a custom signing key.
	MappedClaimsEnabled pulumi.BoolInput `pulumi:"mappedClaimsEnabled"`
	// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
	Oauth2PermissionScopes GetApplicationApiOauth2PermissionScopeArrayInput `pulumi:"oauth2PermissionScopes"`
	// The access token version expected by this resource. Possible values are `1` or `2`.
	RequestedAccessTokenVersion pulumi.IntInput `pulumi:"requestedAccessTokenVersion"`
}

func (GetApplicationApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationApi)(nil)).Elem()
}

func (i GetApplicationApiArgs) ToGetApplicationApiOutput() GetApplicationApiOutput {
	return i.ToGetApplicationApiOutputWithContext(context.Background())
}

func (i GetApplicationApiArgs) ToGetApplicationApiOutputWithContext(ctx context.Context) GetApplicationApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationApiOutput)
}

// GetApplicationApiArrayInput is an input type that accepts GetApplicationApiArray and GetApplicationApiArrayOutput values.
// You can construct a concrete instance of `GetApplicationApiArrayInput` via:
//
//          GetApplicationApiArray{ GetApplicationApiArgs{...} }
type GetApplicationApiArrayInput interface {
	pulumi.Input

	ToGetApplicationApiArrayOutput() GetApplicationApiArrayOutput
	ToGetApplicationApiArrayOutputWithContext(context.Context) GetApplicationApiArrayOutput
}

type GetApplicationApiArray []GetApplicationApiInput

func (GetApplicationApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationApi)(nil)).Elem()
}

func (i GetApplicationApiArray) ToGetApplicationApiArrayOutput() GetApplicationApiArrayOutput {
	return i.ToGetApplicationApiArrayOutputWithContext(context.Background())
}

func (i GetApplicationApiArray) ToGetApplicationApiArrayOutputWithContext(ctx context.Context) GetApplicationApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationApiArrayOutput)
}

type GetApplicationApiOutput struct{ *pulumi.OutputState }

func (GetApplicationApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationApi)(nil)).Elem()
}

func (o GetApplicationApiOutput) ToGetApplicationApiOutput() GetApplicationApiOutput {
	return o
}

func (o GetApplicationApiOutput) ToGetApplicationApiOutputWithContext(ctx context.Context) GetApplicationApiOutput {
	return o
}

// A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.
func (o GetApplicationApiOutput) KnownClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationApi) []string { return v.KnownClientApplications }).(pulumi.StringArrayOutput)
}

// Allows an application to use claims mapping without specifying a custom signing key.
func (o GetApplicationApiOutput) MappedClaimsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationApi) bool { return v.MappedClaimsEnabled }).(pulumi.BoolOutput)
}

// One or more `oauth2PermissionScope` blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.
func (o GetApplicationApiOutput) Oauth2PermissionScopes() GetApplicationApiOauth2PermissionScopeArrayOutput {
	return o.ApplyT(func(v GetApplicationApi) []GetApplicationApiOauth2PermissionScope { return v.Oauth2PermissionScopes }).(GetApplicationApiOauth2PermissionScopeArrayOutput)
}

// The access token version expected by this resource. Possible values are `1` or `2`.
func (o GetApplicationApiOutput) RequestedAccessTokenVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationApi) int { return v.RequestedAccessTokenVersion }).(pulumi.IntOutput)
}

type GetApplicationApiArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationApi)(nil)).Elem()
}

func (o GetApplicationApiArrayOutput) ToGetApplicationApiArrayOutput() GetApplicationApiArrayOutput {
	return o
}

func (o GetApplicationApiArrayOutput) ToGetApplicationApiArrayOutputWithContext(ctx context.Context) GetApplicationApiArrayOutput {
	return o
}

func (o GetApplicationApiArrayOutput) Index(i pulumi.IntInput) GetApplicationApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationApi {
		return vs[0].([]GetApplicationApi)[vs[1].(int)]
	}).(GetApplicationApiOutput)
}

type GetApplicationApiOauth2PermissionScope struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription string `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName string `pulumi:"adminConsentDisplayName"`
	// Determines if the app role is enabled.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id string `pulumi:"id"`
	// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
	Type string `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription string `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName string `pulumi:"userConsentDisplayName"`
	// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
	Value string `pulumi:"value"`
}

// GetApplicationApiOauth2PermissionScopeInput is an input type that accepts GetApplicationApiOauth2PermissionScopeArgs and GetApplicationApiOauth2PermissionScopeOutput values.
// You can construct a concrete instance of `GetApplicationApiOauth2PermissionScopeInput` via:
//
//          GetApplicationApiOauth2PermissionScopeArgs{...}
type GetApplicationApiOauth2PermissionScopeInput interface {
	pulumi.Input

	ToGetApplicationApiOauth2PermissionScopeOutput() GetApplicationApiOauth2PermissionScopeOutput
	ToGetApplicationApiOauth2PermissionScopeOutputWithContext(context.Context) GetApplicationApiOauth2PermissionScopeOutput
}

type GetApplicationApiOauth2PermissionScopeArgs struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription pulumi.StringInput `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName pulumi.StringInput `pulumi:"adminConsentDisplayName"`
	// Determines if the app role is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
	Type pulumi.StringInput `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription pulumi.StringInput `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName pulumi.StringInput `pulumi:"userConsentDisplayName"`
	// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationApiOauth2PermissionScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (i GetApplicationApiOauth2PermissionScopeArgs) ToGetApplicationApiOauth2PermissionScopeOutput() GetApplicationApiOauth2PermissionScopeOutput {
	return i.ToGetApplicationApiOauth2PermissionScopeOutputWithContext(context.Background())
}

func (i GetApplicationApiOauth2PermissionScopeArgs) ToGetApplicationApiOauth2PermissionScopeOutputWithContext(ctx context.Context) GetApplicationApiOauth2PermissionScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationApiOauth2PermissionScopeOutput)
}

// GetApplicationApiOauth2PermissionScopeArrayInput is an input type that accepts GetApplicationApiOauth2PermissionScopeArray and GetApplicationApiOauth2PermissionScopeArrayOutput values.
// You can construct a concrete instance of `GetApplicationApiOauth2PermissionScopeArrayInput` via:
//
//          GetApplicationApiOauth2PermissionScopeArray{ GetApplicationApiOauth2PermissionScopeArgs{...} }
type GetApplicationApiOauth2PermissionScopeArrayInput interface {
	pulumi.Input

	ToGetApplicationApiOauth2PermissionScopeArrayOutput() GetApplicationApiOauth2PermissionScopeArrayOutput
	ToGetApplicationApiOauth2PermissionScopeArrayOutputWithContext(context.Context) GetApplicationApiOauth2PermissionScopeArrayOutput
}

type GetApplicationApiOauth2PermissionScopeArray []GetApplicationApiOauth2PermissionScopeInput

func (GetApplicationApiOauth2PermissionScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (i GetApplicationApiOauth2PermissionScopeArray) ToGetApplicationApiOauth2PermissionScopeArrayOutput() GetApplicationApiOauth2PermissionScopeArrayOutput {
	return i.ToGetApplicationApiOauth2PermissionScopeArrayOutputWithContext(context.Background())
}

func (i GetApplicationApiOauth2PermissionScopeArray) ToGetApplicationApiOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) GetApplicationApiOauth2PermissionScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationApiOauth2PermissionScopeArrayOutput)
}

type GetApplicationApiOauth2PermissionScopeOutput struct{ *pulumi.OutputState }

func (GetApplicationApiOauth2PermissionScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (o GetApplicationApiOauth2PermissionScopeOutput) ToGetApplicationApiOauth2PermissionScopeOutput() GetApplicationApiOauth2PermissionScopeOutput {
	return o
}

func (o GetApplicationApiOauth2PermissionScopeOutput) ToGetApplicationApiOauth2PermissionScopeOutputWithContext(ctx context.Context) GetApplicationApiOauth2PermissionScopeOutput {
	return o
}

// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
func (o GetApplicationApiOauth2PermissionScopeOutput) AdminConsentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.AdminConsentDescription }).(pulumi.StringOutput)
}

// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
func (o GetApplicationApiOauth2PermissionScopeOutput) AdminConsentDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.AdminConsentDisplayName }).(pulumi.StringOutput)
}

// Determines if the app role is enabled.
func (o GetApplicationApiOauth2PermissionScopeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
func (o GetApplicationApiOauth2PermissionScopeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
func (o GetApplicationApiOauth2PermissionScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.Type }).(pulumi.StringOutput)
}

// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
func (o GetApplicationApiOauth2PermissionScopeOutput) UserConsentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.UserConsentDescription }).(pulumi.StringOutput)
}

// Display name for the delegated permission that appears in the end user consent experience.
func (o GetApplicationApiOauth2PermissionScopeOutput) UserConsentDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.UserConsentDisplayName }).(pulumi.StringOutput)
}

// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
func (o GetApplicationApiOauth2PermissionScopeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationApiOauth2PermissionScope) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationApiOauth2PermissionScopeArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationApiOauth2PermissionScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationApiOauth2PermissionScope)(nil)).Elem()
}

func (o GetApplicationApiOauth2PermissionScopeArrayOutput) ToGetApplicationApiOauth2PermissionScopeArrayOutput() GetApplicationApiOauth2PermissionScopeArrayOutput {
	return o
}

func (o GetApplicationApiOauth2PermissionScopeArrayOutput) ToGetApplicationApiOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) GetApplicationApiOauth2PermissionScopeArrayOutput {
	return o
}

func (o GetApplicationApiOauth2PermissionScopeArrayOutput) Index(i pulumi.IntInput) GetApplicationApiOauth2PermissionScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationApiOauth2PermissionScope {
		return vs[0].([]GetApplicationApiOauth2PermissionScope)[vs[1].(int)]
	}).(GetApplicationApiOauth2PermissionScopeOutput)
}

type GetApplicationAppRole struct {
	// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are `User` or `Application`, or both.
	AllowedMemberTypes []string `pulumi:"allowedMemberTypes"`
	// Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
	Description string `pulumi:"description"`
	// Specifies the display name of the application.
	DisplayName string `pulumi:"displayName"`
	// Determines if the app role is enabled.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id string `pulumi:"id"`
	// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
	Value string `pulumi:"value"`
}

// GetApplicationAppRoleInput is an input type that accepts GetApplicationAppRoleArgs and GetApplicationAppRoleOutput values.
// You can construct a concrete instance of `GetApplicationAppRoleInput` via:
//
//          GetApplicationAppRoleArgs{...}
type GetApplicationAppRoleInput interface {
	pulumi.Input

	ToGetApplicationAppRoleOutput() GetApplicationAppRoleOutput
	ToGetApplicationAppRoleOutputWithContext(context.Context) GetApplicationAppRoleOutput
}

type GetApplicationAppRoleArgs struct {
	// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are `User` or `Application`, or both.
	AllowedMemberTypes pulumi.StringArrayInput `pulumi:"allowedMemberTypes"`
	// Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the display name of the application.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Determines if the app role is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id pulumi.StringInput `pulumi:"id"`
	// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationAppRole)(nil)).Elem()
}

func (i GetApplicationAppRoleArgs) ToGetApplicationAppRoleOutput() GetApplicationAppRoleOutput {
	return i.ToGetApplicationAppRoleOutputWithContext(context.Background())
}

func (i GetApplicationAppRoleArgs) ToGetApplicationAppRoleOutputWithContext(ctx context.Context) GetApplicationAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationAppRoleOutput)
}

// GetApplicationAppRoleArrayInput is an input type that accepts GetApplicationAppRoleArray and GetApplicationAppRoleArrayOutput values.
// You can construct a concrete instance of `GetApplicationAppRoleArrayInput` via:
//
//          GetApplicationAppRoleArray{ GetApplicationAppRoleArgs{...} }
type GetApplicationAppRoleArrayInput interface {
	pulumi.Input

	ToGetApplicationAppRoleArrayOutput() GetApplicationAppRoleArrayOutput
	ToGetApplicationAppRoleArrayOutputWithContext(context.Context) GetApplicationAppRoleArrayOutput
}

type GetApplicationAppRoleArray []GetApplicationAppRoleInput

func (GetApplicationAppRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationAppRole)(nil)).Elem()
}

func (i GetApplicationAppRoleArray) ToGetApplicationAppRoleArrayOutput() GetApplicationAppRoleArrayOutput {
	return i.ToGetApplicationAppRoleArrayOutputWithContext(context.Background())
}

func (i GetApplicationAppRoleArray) ToGetApplicationAppRoleArrayOutputWithContext(ctx context.Context) GetApplicationAppRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationAppRoleArrayOutput)
}

type GetApplicationAppRoleOutput struct{ *pulumi.OutputState }

func (GetApplicationAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationAppRole)(nil)).Elem()
}

func (o GetApplicationAppRoleOutput) ToGetApplicationAppRoleOutput() GetApplicationAppRoleOutput {
	return o
}

func (o GetApplicationAppRoleOutput) ToGetApplicationAppRoleOutputWithContext(ctx context.Context) GetApplicationAppRoleOutput {
	return o
}

// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are `User` or `Application`, or both.
func (o GetApplicationAppRoleOutput) AllowedMemberTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationAppRole) []string { return v.AllowedMemberTypes }).(pulumi.StringArrayOutput)
}

// Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
func (o GetApplicationAppRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationAppRole) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the display name of the application.
func (o GetApplicationAppRoleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationAppRole) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Determines if the app role is enabled.
func (o GetApplicationAppRoleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationAppRole) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
func (o GetApplicationAppRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationAppRole) string { return v.Id }).(pulumi.StringOutput)
}

// The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
func (o GetApplicationAppRoleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationAppRole) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationAppRoleArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationAppRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationAppRole)(nil)).Elem()
}

func (o GetApplicationAppRoleArrayOutput) ToGetApplicationAppRoleArrayOutput() GetApplicationAppRoleArrayOutput {
	return o
}

func (o GetApplicationAppRoleArrayOutput) ToGetApplicationAppRoleArrayOutputWithContext(ctx context.Context) GetApplicationAppRoleArrayOutput {
	return o
}

func (o GetApplicationAppRoleArrayOutput) Index(i pulumi.IntInput) GetApplicationAppRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationAppRole {
		return vs[0].([]GetApplicationAppRole)[vs[1].(int)]
	}).(GetApplicationAppRoleOutput)
}

type GetApplicationFeatureTag struct {
	// Whether this application represents a custom SAML application for linked service principals.
	CustomSingleSignOn *bool `pulumi:"customSingleSignOn"`
	// Whether this application represents an Enterprise Application for linked service principals.
	Enterprise *bool `pulumi:"enterprise"`
	// Whether this application represents a gallery application for linked service principals.
	Gallery *bool `pulumi:"gallery"`
	// Whether this app is visible to users in My Apps and Office 365 Launcher.
	Hide *bool `pulumi:"hide"`
}

// GetApplicationFeatureTagInput is an input type that accepts GetApplicationFeatureTagArgs and GetApplicationFeatureTagOutput values.
// You can construct a concrete instance of `GetApplicationFeatureTagInput` via:
//
//          GetApplicationFeatureTagArgs{...}
type GetApplicationFeatureTagInput interface {
	pulumi.Input

	ToGetApplicationFeatureTagOutput() GetApplicationFeatureTagOutput
	ToGetApplicationFeatureTagOutputWithContext(context.Context) GetApplicationFeatureTagOutput
}

type GetApplicationFeatureTagArgs struct {
	// Whether this application represents a custom SAML application for linked service principals.
	CustomSingleSignOn pulumi.BoolPtrInput `pulumi:"customSingleSignOn"`
	// Whether this application represents an Enterprise Application for linked service principals.
	Enterprise pulumi.BoolPtrInput `pulumi:"enterprise"`
	// Whether this application represents a gallery application for linked service principals.
	Gallery pulumi.BoolPtrInput `pulumi:"gallery"`
	// Whether this app is visible to users in My Apps and Office 365 Launcher.
	Hide pulumi.BoolPtrInput `pulumi:"hide"`
}

func (GetApplicationFeatureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationFeatureTag)(nil)).Elem()
}

func (i GetApplicationFeatureTagArgs) ToGetApplicationFeatureTagOutput() GetApplicationFeatureTagOutput {
	return i.ToGetApplicationFeatureTagOutputWithContext(context.Background())
}

func (i GetApplicationFeatureTagArgs) ToGetApplicationFeatureTagOutputWithContext(ctx context.Context) GetApplicationFeatureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationFeatureTagOutput)
}

// GetApplicationFeatureTagArrayInput is an input type that accepts GetApplicationFeatureTagArray and GetApplicationFeatureTagArrayOutput values.
// You can construct a concrete instance of `GetApplicationFeatureTagArrayInput` via:
//
//          GetApplicationFeatureTagArray{ GetApplicationFeatureTagArgs{...} }
type GetApplicationFeatureTagArrayInput interface {
	pulumi.Input

	ToGetApplicationFeatureTagArrayOutput() GetApplicationFeatureTagArrayOutput
	ToGetApplicationFeatureTagArrayOutputWithContext(context.Context) GetApplicationFeatureTagArrayOutput
}

type GetApplicationFeatureTagArray []GetApplicationFeatureTagInput

func (GetApplicationFeatureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationFeatureTag)(nil)).Elem()
}

func (i GetApplicationFeatureTagArray) ToGetApplicationFeatureTagArrayOutput() GetApplicationFeatureTagArrayOutput {
	return i.ToGetApplicationFeatureTagArrayOutputWithContext(context.Background())
}

func (i GetApplicationFeatureTagArray) ToGetApplicationFeatureTagArrayOutputWithContext(ctx context.Context) GetApplicationFeatureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationFeatureTagArrayOutput)
}

type GetApplicationFeatureTagOutput struct{ *pulumi.OutputState }

func (GetApplicationFeatureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationFeatureTag)(nil)).Elem()
}

func (o GetApplicationFeatureTagOutput) ToGetApplicationFeatureTagOutput() GetApplicationFeatureTagOutput {
	return o
}

func (o GetApplicationFeatureTagOutput) ToGetApplicationFeatureTagOutputWithContext(ctx context.Context) GetApplicationFeatureTagOutput {
	return o
}

// Whether this application represents a custom SAML application for linked service principals.
func (o GetApplicationFeatureTagOutput) CustomSingleSignOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationFeatureTag) *bool { return v.CustomSingleSignOn }).(pulumi.BoolPtrOutput)
}

// Whether this application represents an Enterprise Application for linked service principals.
func (o GetApplicationFeatureTagOutput) Enterprise() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationFeatureTag) *bool { return v.Enterprise }).(pulumi.BoolPtrOutput)
}

// Whether this application represents a gallery application for linked service principals.
func (o GetApplicationFeatureTagOutput) Gallery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationFeatureTag) *bool { return v.Gallery }).(pulumi.BoolPtrOutput)
}

// Whether this app is visible to users in My Apps and Office 365 Launcher.
func (o GetApplicationFeatureTagOutput) Hide() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationFeatureTag) *bool { return v.Hide }).(pulumi.BoolPtrOutput)
}

type GetApplicationFeatureTagArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationFeatureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationFeatureTag)(nil)).Elem()
}

func (o GetApplicationFeatureTagArrayOutput) ToGetApplicationFeatureTagArrayOutput() GetApplicationFeatureTagArrayOutput {
	return o
}

func (o GetApplicationFeatureTagArrayOutput) ToGetApplicationFeatureTagArrayOutputWithContext(ctx context.Context) GetApplicationFeatureTagArrayOutput {
	return o
}

func (o GetApplicationFeatureTagArrayOutput) Index(i pulumi.IntInput) GetApplicationFeatureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationFeatureTag {
		return vs[0].([]GetApplicationFeatureTag)[vs[1].(int)]
	}).(GetApplicationFeatureTagOutput)
}

type GetApplicationOptionalClaim struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens []GetApplicationOptionalClaimAccessToken `pulumi:"accessTokens"`
	// One or more `idToken` blocks as documented below.
	IdTokens []GetApplicationOptionalClaimIdToken `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	Saml2Tokens []GetApplicationOptionalClaimSaml2Token `pulumi:"saml2Tokens"`
}

// GetApplicationOptionalClaimInput is an input type that accepts GetApplicationOptionalClaimArgs and GetApplicationOptionalClaimOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimInput` via:
//
//          GetApplicationOptionalClaimArgs{...}
type GetApplicationOptionalClaimInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimOutput() GetApplicationOptionalClaimOutput
	ToGetApplicationOptionalClaimOutputWithContext(context.Context) GetApplicationOptionalClaimOutput
}

type GetApplicationOptionalClaimArgs struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens GetApplicationOptionalClaimAccessTokenArrayInput `pulumi:"accessTokens"`
	// One or more `idToken` blocks as documented below.
	IdTokens GetApplicationOptionalClaimIdTokenArrayInput `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	Saml2Tokens GetApplicationOptionalClaimSaml2TokenArrayInput `pulumi:"saml2Tokens"`
}

func (GetApplicationOptionalClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaim)(nil)).Elem()
}

func (i GetApplicationOptionalClaimArgs) ToGetApplicationOptionalClaimOutput() GetApplicationOptionalClaimOutput {
	return i.ToGetApplicationOptionalClaimOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimArgs) ToGetApplicationOptionalClaimOutputWithContext(ctx context.Context) GetApplicationOptionalClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimOutput)
}

// GetApplicationOptionalClaimArrayInput is an input type that accepts GetApplicationOptionalClaimArray and GetApplicationOptionalClaimArrayOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimArrayInput` via:
//
//          GetApplicationOptionalClaimArray{ GetApplicationOptionalClaimArgs{...} }
type GetApplicationOptionalClaimArrayInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimArrayOutput() GetApplicationOptionalClaimArrayOutput
	ToGetApplicationOptionalClaimArrayOutputWithContext(context.Context) GetApplicationOptionalClaimArrayOutput
}

type GetApplicationOptionalClaimArray []GetApplicationOptionalClaimInput

func (GetApplicationOptionalClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaim)(nil)).Elem()
}

func (i GetApplicationOptionalClaimArray) ToGetApplicationOptionalClaimArrayOutput() GetApplicationOptionalClaimArrayOutput {
	return i.ToGetApplicationOptionalClaimArrayOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimArray) ToGetApplicationOptionalClaimArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimArrayOutput)
}

type GetApplicationOptionalClaimOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaim)(nil)).Elem()
}

func (o GetApplicationOptionalClaimOutput) ToGetApplicationOptionalClaimOutput() GetApplicationOptionalClaimOutput {
	return o
}

func (o GetApplicationOptionalClaimOutput) ToGetApplicationOptionalClaimOutputWithContext(ctx context.Context) GetApplicationOptionalClaimOutput {
	return o
}

// One or more `accessToken` blocks as documented below.
func (o GetApplicationOptionalClaimOutput) AccessTokens() GetApplicationOptionalClaimAccessTokenArrayOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaim) []GetApplicationOptionalClaimAccessToken { return v.AccessTokens }).(GetApplicationOptionalClaimAccessTokenArrayOutput)
}

// One or more `idToken` blocks as documented below.
func (o GetApplicationOptionalClaimOutput) IdTokens() GetApplicationOptionalClaimIdTokenArrayOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaim) []GetApplicationOptionalClaimIdToken { return v.IdTokens }).(GetApplicationOptionalClaimIdTokenArrayOutput)
}

// One or more `saml2Token` blocks as documented below.
func (o GetApplicationOptionalClaimOutput) Saml2Tokens() GetApplicationOptionalClaimSaml2TokenArrayOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaim) []GetApplicationOptionalClaimSaml2Token { return v.Saml2Tokens }).(GetApplicationOptionalClaimSaml2TokenArrayOutput)
}

type GetApplicationOptionalClaimArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaim)(nil)).Elem()
}

func (o GetApplicationOptionalClaimArrayOutput) ToGetApplicationOptionalClaimArrayOutput() GetApplicationOptionalClaimArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimArrayOutput) ToGetApplicationOptionalClaimArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimArrayOutput) Index(i pulumi.IntInput) GetApplicationOptionalClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationOptionalClaim {
		return vs[0].([]GetApplicationOptionalClaim)[vs[1].(int)]
	}).(GetApplicationOptionalClaimOutput)
}

type GetApplicationOptionalClaimAccessToken struct {
	// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties []string `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential *bool `pulumi:"essential"`
	// The name of the optional claim.
	Name string `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source *string `pulumi:"source"`
}

// GetApplicationOptionalClaimAccessTokenInput is an input type that accepts GetApplicationOptionalClaimAccessTokenArgs and GetApplicationOptionalClaimAccessTokenOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimAccessTokenInput` via:
//
//          GetApplicationOptionalClaimAccessTokenArgs{...}
type GetApplicationOptionalClaimAccessTokenInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimAccessTokenOutput() GetApplicationOptionalClaimAccessTokenOutput
	ToGetApplicationOptionalClaimAccessTokenOutputWithContext(context.Context) GetApplicationOptionalClaimAccessTokenOutput
}

type GetApplicationOptionalClaimAccessTokenArgs struct {
	// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties pulumi.StringArrayInput `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential pulumi.BoolPtrInput `pulumi:"essential"`
	// The name of the optional claim.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (GetApplicationOptionalClaimAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaimAccessToken)(nil)).Elem()
}

func (i GetApplicationOptionalClaimAccessTokenArgs) ToGetApplicationOptionalClaimAccessTokenOutput() GetApplicationOptionalClaimAccessTokenOutput {
	return i.ToGetApplicationOptionalClaimAccessTokenOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimAccessTokenArgs) ToGetApplicationOptionalClaimAccessTokenOutputWithContext(ctx context.Context) GetApplicationOptionalClaimAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimAccessTokenOutput)
}

// GetApplicationOptionalClaimAccessTokenArrayInput is an input type that accepts GetApplicationOptionalClaimAccessTokenArray and GetApplicationOptionalClaimAccessTokenArrayOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimAccessTokenArrayInput` via:
//
//          GetApplicationOptionalClaimAccessTokenArray{ GetApplicationOptionalClaimAccessTokenArgs{...} }
type GetApplicationOptionalClaimAccessTokenArrayInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimAccessTokenArrayOutput() GetApplicationOptionalClaimAccessTokenArrayOutput
	ToGetApplicationOptionalClaimAccessTokenArrayOutputWithContext(context.Context) GetApplicationOptionalClaimAccessTokenArrayOutput
}

type GetApplicationOptionalClaimAccessTokenArray []GetApplicationOptionalClaimAccessTokenInput

func (GetApplicationOptionalClaimAccessTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaimAccessToken)(nil)).Elem()
}

func (i GetApplicationOptionalClaimAccessTokenArray) ToGetApplicationOptionalClaimAccessTokenArrayOutput() GetApplicationOptionalClaimAccessTokenArrayOutput {
	return i.ToGetApplicationOptionalClaimAccessTokenArrayOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimAccessTokenArray) ToGetApplicationOptionalClaimAccessTokenArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimAccessTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimAccessTokenArrayOutput)
}

type GetApplicationOptionalClaimAccessTokenOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaimAccessToken)(nil)).Elem()
}

func (o GetApplicationOptionalClaimAccessTokenOutput) ToGetApplicationOptionalClaimAccessTokenOutput() GetApplicationOptionalClaimAccessTokenOutput {
	return o
}

func (o GetApplicationOptionalClaimAccessTokenOutput) ToGetApplicationOptionalClaimAccessTokenOutputWithContext(ctx context.Context) GetApplicationOptionalClaimAccessTokenOutput {
	return o
}

// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
func (o GetApplicationOptionalClaimAccessTokenOutput) AdditionalProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimAccessToken) []string { return v.AdditionalProperties }).(pulumi.StringArrayOutput)
}

// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
func (o GetApplicationOptionalClaimAccessTokenOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimAccessToken) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

// The name of the optional claim.
func (o GetApplicationOptionalClaimAccessTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimAccessToken) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
func (o GetApplicationOptionalClaimAccessTokenOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimAccessToken) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type GetApplicationOptionalClaimAccessTokenArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimAccessTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaimAccessToken)(nil)).Elem()
}

func (o GetApplicationOptionalClaimAccessTokenArrayOutput) ToGetApplicationOptionalClaimAccessTokenArrayOutput() GetApplicationOptionalClaimAccessTokenArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimAccessTokenArrayOutput) ToGetApplicationOptionalClaimAccessTokenArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimAccessTokenArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimAccessTokenArrayOutput) Index(i pulumi.IntInput) GetApplicationOptionalClaimAccessTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationOptionalClaimAccessToken {
		return vs[0].([]GetApplicationOptionalClaimAccessToken)[vs[1].(int)]
	}).(GetApplicationOptionalClaimAccessTokenOutput)
}

type GetApplicationOptionalClaimIdToken struct {
	// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties []string `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential *bool `pulumi:"essential"`
	// The name of the optional claim.
	Name string `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source *string `pulumi:"source"`
}

// GetApplicationOptionalClaimIdTokenInput is an input type that accepts GetApplicationOptionalClaimIdTokenArgs and GetApplicationOptionalClaimIdTokenOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimIdTokenInput` via:
//
//          GetApplicationOptionalClaimIdTokenArgs{...}
type GetApplicationOptionalClaimIdTokenInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimIdTokenOutput() GetApplicationOptionalClaimIdTokenOutput
	ToGetApplicationOptionalClaimIdTokenOutputWithContext(context.Context) GetApplicationOptionalClaimIdTokenOutput
}

type GetApplicationOptionalClaimIdTokenArgs struct {
	// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties pulumi.StringArrayInput `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential pulumi.BoolPtrInput `pulumi:"essential"`
	// The name of the optional claim.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (GetApplicationOptionalClaimIdTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaimIdToken)(nil)).Elem()
}

func (i GetApplicationOptionalClaimIdTokenArgs) ToGetApplicationOptionalClaimIdTokenOutput() GetApplicationOptionalClaimIdTokenOutput {
	return i.ToGetApplicationOptionalClaimIdTokenOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimIdTokenArgs) ToGetApplicationOptionalClaimIdTokenOutputWithContext(ctx context.Context) GetApplicationOptionalClaimIdTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimIdTokenOutput)
}

// GetApplicationOptionalClaimIdTokenArrayInput is an input type that accepts GetApplicationOptionalClaimIdTokenArray and GetApplicationOptionalClaimIdTokenArrayOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimIdTokenArrayInput` via:
//
//          GetApplicationOptionalClaimIdTokenArray{ GetApplicationOptionalClaimIdTokenArgs{...} }
type GetApplicationOptionalClaimIdTokenArrayInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimIdTokenArrayOutput() GetApplicationOptionalClaimIdTokenArrayOutput
	ToGetApplicationOptionalClaimIdTokenArrayOutputWithContext(context.Context) GetApplicationOptionalClaimIdTokenArrayOutput
}

type GetApplicationOptionalClaimIdTokenArray []GetApplicationOptionalClaimIdTokenInput

func (GetApplicationOptionalClaimIdTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaimIdToken)(nil)).Elem()
}

func (i GetApplicationOptionalClaimIdTokenArray) ToGetApplicationOptionalClaimIdTokenArrayOutput() GetApplicationOptionalClaimIdTokenArrayOutput {
	return i.ToGetApplicationOptionalClaimIdTokenArrayOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimIdTokenArray) ToGetApplicationOptionalClaimIdTokenArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimIdTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimIdTokenArrayOutput)
}

type GetApplicationOptionalClaimIdTokenOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimIdTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaimIdToken)(nil)).Elem()
}

func (o GetApplicationOptionalClaimIdTokenOutput) ToGetApplicationOptionalClaimIdTokenOutput() GetApplicationOptionalClaimIdTokenOutput {
	return o
}

func (o GetApplicationOptionalClaimIdTokenOutput) ToGetApplicationOptionalClaimIdTokenOutputWithContext(ctx context.Context) GetApplicationOptionalClaimIdTokenOutput {
	return o
}

// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
func (o GetApplicationOptionalClaimIdTokenOutput) AdditionalProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimIdToken) []string { return v.AdditionalProperties }).(pulumi.StringArrayOutput)
}

// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
func (o GetApplicationOptionalClaimIdTokenOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimIdToken) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

// The name of the optional claim.
func (o GetApplicationOptionalClaimIdTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimIdToken) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
func (o GetApplicationOptionalClaimIdTokenOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimIdToken) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type GetApplicationOptionalClaimIdTokenArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimIdTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaimIdToken)(nil)).Elem()
}

func (o GetApplicationOptionalClaimIdTokenArrayOutput) ToGetApplicationOptionalClaimIdTokenArrayOutput() GetApplicationOptionalClaimIdTokenArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimIdTokenArrayOutput) ToGetApplicationOptionalClaimIdTokenArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimIdTokenArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimIdTokenArrayOutput) Index(i pulumi.IntInput) GetApplicationOptionalClaimIdTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationOptionalClaimIdToken {
		return vs[0].([]GetApplicationOptionalClaimIdToken)[vs[1].(int)]
	}).(GetApplicationOptionalClaimIdTokenOutput)
}

type GetApplicationOptionalClaimSaml2Token struct {
	// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties []string `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential *bool `pulumi:"essential"`
	// The name of the optional claim.
	Name string `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source *string `pulumi:"source"`
}

// GetApplicationOptionalClaimSaml2TokenInput is an input type that accepts GetApplicationOptionalClaimSaml2TokenArgs and GetApplicationOptionalClaimSaml2TokenOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimSaml2TokenInput` via:
//
//          GetApplicationOptionalClaimSaml2TokenArgs{...}
type GetApplicationOptionalClaimSaml2TokenInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimSaml2TokenOutput() GetApplicationOptionalClaimSaml2TokenOutput
	ToGetApplicationOptionalClaimSaml2TokenOutputWithContext(context.Context) GetApplicationOptionalClaimSaml2TokenOutput
}

type GetApplicationOptionalClaimSaml2TokenArgs struct {
	// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
	AdditionalProperties pulumi.StringArrayInput `pulumi:"additionalProperties"`
	// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
	Essential pulumi.BoolPtrInput `pulumi:"essential"`
	// The name of the optional claim.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (GetApplicationOptionalClaimSaml2TokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaimSaml2Token)(nil)).Elem()
}

func (i GetApplicationOptionalClaimSaml2TokenArgs) ToGetApplicationOptionalClaimSaml2TokenOutput() GetApplicationOptionalClaimSaml2TokenOutput {
	return i.ToGetApplicationOptionalClaimSaml2TokenOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimSaml2TokenArgs) ToGetApplicationOptionalClaimSaml2TokenOutputWithContext(ctx context.Context) GetApplicationOptionalClaimSaml2TokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimSaml2TokenOutput)
}

// GetApplicationOptionalClaimSaml2TokenArrayInput is an input type that accepts GetApplicationOptionalClaimSaml2TokenArray and GetApplicationOptionalClaimSaml2TokenArrayOutput values.
// You can construct a concrete instance of `GetApplicationOptionalClaimSaml2TokenArrayInput` via:
//
//          GetApplicationOptionalClaimSaml2TokenArray{ GetApplicationOptionalClaimSaml2TokenArgs{...} }
type GetApplicationOptionalClaimSaml2TokenArrayInput interface {
	pulumi.Input

	ToGetApplicationOptionalClaimSaml2TokenArrayOutput() GetApplicationOptionalClaimSaml2TokenArrayOutput
	ToGetApplicationOptionalClaimSaml2TokenArrayOutputWithContext(context.Context) GetApplicationOptionalClaimSaml2TokenArrayOutput
}

type GetApplicationOptionalClaimSaml2TokenArray []GetApplicationOptionalClaimSaml2TokenInput

func (GetApplicationOptionalClaimSaml2TokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaimSaml2Token)(nil)).Elem()
}

func (i GetApplicationOptionalClaimSaml2TokenArray) ToGetApplicationOptionalClaimSaml2TokenArrayOutput() GetApplicationOptionalClaimSaml2TokenArrayOutput {
	return i.ToGetApplicationOptionalClaimSaml2TokenArrayOutputWithContext(context.Background())
}

func (i GetApplicationOptionalClaimSaml2TokenArray) ToGetApplicationOptionalClaimSaml2TokenArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimSaml2TokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationOptionalClaimSaml2TokenArrayOutput)
}

type GetApplicationOptionalClaimSaml2TokenOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimSaml2TokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationOptionalClaimSaml2Token)(nil)).Elem()
}

func (o GetApplicationOptionalClaimSaml2TokenOutput) ToGetApplicationOptionalClaimSaml2TokenOutput() GetApplicationOptionalClaimSaml2TokenOutput {
	return o
}

func (o GetApplicationOptionalClaimSaml2TokenOutput) ToGetApplicationOptionalClaimSaml2TokenOutputWithContext(ctx context.Context) GetApplicationOptionalClaimSaml2TokenOutput {
	return o
}

// List of Additional Properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim.
func (o GetApplicationOptionalClaimSaml2TokenOutput) AdditionalProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimSaml2Token) []string { return v.AdditionalProperties }).(pulumi.StringArrayOutput)
}

// Whether the claim specified by the client is necessary to ensure a smooth authorization experience.
func (o GetApplicationOptionalClaimSaml2TokenOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimSaml2Token) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

// The name of the optional claim.
func (o GetApplicationOptionalClaimSaml2TokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimSaml2Token) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object.
func (o GetApplicationOptionalClaimSaml2TokenOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationOptionalClaimSaml2Token) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type GetApplicationOptionalClaimSaml2TokenArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationOptionalClaimSaml2TokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationOptionalClaimSaml2Token)(nil)).Elem()
}

func (o GetApplicationOptionalClaimSaml2TokenArrayOutput) ToGetApplicationOptionalClaimSaml2TokenArrayOutput() GetApplicationOptionalClaimSaml2TokenArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimSaml2TokenArrayOutput) ToGetApplicationOptionalClaimSaml2TokenArrayOutputWithContext(ctx context.Context) GetApplicationOptionalClaimSaml2TokenArrayOutput {
	return o
}

func (o GetApplicationOptionalClaimSaml2TokenArrayOutput) Index(i pulumi.IntInput) GetApplicationOptionalClaimSaml2TokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationOptionalClaimSaml2Token {
		return vs[0].([]GetApplicationOptionalClaimSaml2Token)[vs[1].(int)]
	}).(GetApplicationOptionalClaimSaml2TokenOutput)
}

type GetApplicationPublicClient struct {
	// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
	RedirectUris []string `pulumi:"redirectUris"`
}

// GetApplicationPublicClientInput is an input type that accepts GetApplicationPublicClientArgs and GetApplicationPublicClientOutput values.
// You can construct a concrete instance of `GetApplicationPublicClientInput` via:
//
//          GetApplicationPublicClientArgs{...}
type GetApplicationPublicClientInput interface {
	pulumi.Input

	ToGetApplicationPublicClientOutput() GetApplicationPublicClientOutput
	ToGetApplicationPublicClientOutputWithContext(context.Context) GetApplicationPublicClientOutput
}

type GetApplicationPublicClientArgs struct {
	// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
}

func (GetApplicationPublicClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationPublicClient)(nil)).Elem()
}

func (i GetApplicationPublicClientArgs) ToGetApplicationPublicClientOutput() GetApplicationPublicClientOutput {
	return i.ToGetApplicationPublicClientOutputWithContext(context.Background())
}

func (i GetApplicationPublicClientArgs) ToGetApplicationPublicClientOutputWithContext(ctx context.Context) GetApplicationPublicClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationPublicClientOutput)
}

// GetApplicationPublicClientArrayInput is an input type that accepts GetApplicationPublicClientArray and GetApplicationPublicClientArrayOutput values.
// You can construct a concrete instance of `GetApplicationPublicClientArrayInput` via:
//
//          GetApplicationPublicClientArray{ GetApplicationPublicClientArgs{...} }
type GetApplicationPublicClientArrayInput interface {
	pulumi.Input

	ToGetApplicationPublicClientArrayOutput() GetApplicationPublicClientArrayOutput
	ToGetApplicationPublicClientArrayOutputWithContext(context.Context) GetApplicationPublicClientArrayOutput
}

type GetApplicationPublicClientArray []GetApplicationPublicClientInput

func (GetApplicationPublicClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationPublicClient)(nil)).Elem()
}

func (i GetApplicationPublicClientArray) ToGetApplicationPublicClientArrayOutput() GetApplicationPublicClientArrayOutput {
	return i.ToGetApplicationPublicClientArrayOutputWithContext(context.Background())
}

func (i GetApplicationPublicClientArray) ToGetApplicationPublicClientArrayOutputWithContext(ctx context.Context) GetApplicationPublicClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationPublicClientArrayOutput)
}

type GetApplicationPublicClientOutput struct{ *pulumi.OutputState }

func (GetApplicationPublicClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationPublicClient)(nil)).Elem()
}

func (o GetApplicationPublicClientOutput) ToGetApplicationPublicClientOutput() GetApplicationPublicClientOutput {
	return o
}

func (o GetApplicationPublicClientOutput) ToGetApplicationPublicClientOutputWithContext(ctx context.Context) GetApplicationPublicClientOutput {
	return o
}

// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
func (o GetApplicationPublicClientOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationPublicClient) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type GetApplicationPublicClientArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationPublicClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationPublicClient)(nil)).Elem()
}

func (o GetApplicationPublicClientArrayOutput) ToGetApplicationPublicClientArrayOutput() GetApplicationPublicClientArrayOutput {
	return o
}

func (o GetApplicationPublicClientArrayOutput) ToGetApplicationPublicClientArrayOutputWithContext(ctx context.Context) GetApplicationPublicClientArrayOutput {
	return o
}

func (o GetApplicationPublicClientArrayOutput) Index(i pulumi.IntInput) GetApplicationPublicClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationPublicClient {
		return vs[0].([]GetApplicationPublicClient)[vs[1].(int)]
	}).(GetApplicationPublicClientOutput)
}

type GetApplicationRequiredResourceAccess struct {
	// A collection of `resourceAccess` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
	ResourceAccesses []GetApplicationRequiredResourceAccessResourceAccess `pulumi:"resourceAccesses"`
	// The unique identifier for the resource that the application requires access to. This is the Application ID of the target application.
	ResourceAppId string `pulumi:"resourceAppId"`
}

// GetApplicationRequiredResourceAccessInput is an input type that accepts GetApplicationRequiredResourceAccessArgs and GetApplicationRequiredResourceAccessOutput values.
// You can construct a concrete instance of `GetApplicationRequiredResourceAccessInput` via:
//
//          GetApplicationRequiredResourceAccessArgs{...}
type GetApplicationRequiredResourceAccessInput interface {
	pulumi.Input

	ToGetApplicationRequiredResourceAccessOutput() GetApplicationRequiredResourceAccessOutput
	ToGetApplicationRequiredResourceAccessOutputWithContext(context.Context) GetApplicationRequiredResourceAccessOutput
}

type GetApplicationRequiredResourceAccessArgs struct {
	// A collection of `resourceAccess` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
	ResourceAccesses GetApplicationRequiredResourceAccessResourceAccessArrayInput `pulumi:"resourceAccesses"`
	// The unique identifier for the resource that the application requires access to. This is the Application ID of the target application.
	ResourceAppId pulumi.StringInput `pulumi:"resourceAppId"`
}

func (GetApplicationRequiredResourceAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationRequiredResourceAccess)(nil)).Elem()
}

func (i GetApplicationRequiredResourceAccessArgs) ToGetApplicationRequiredResourceAccessOutput() GetApplicationRequiredResourceAccessOutput {
	return i.ToGetApplicationRequiredResourceAccessOutputWithContext(context.Background())
}

func (i GetApplicationRequiredResourceAccessArgs) ToGetApplicationRequiredResourceAccessOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationRequiredResourceAccessOutput)
}

// GetApplicationRequiredResourceAccessArrayInput is an input type that accepts GetApplicationRequiredResourceAccessArray and GetApplicationRequiredResourceAccessArrayOutput values.
// You can construct a concrete instance of `GetApplicationRequiredResourceAccessArrayInput` via:
//
//          GetApplicationRequiredResourceAccessArray{ GetApplicationRequiredResourceAccessArgs{...} }
type GetApplicationRequiredResourceAccessArrayInput interface {
	pulumi.Input

	ToGetApplicationRequiredResourceAccessArrayOutput() GetApplicationRequiredResourceAccessArrayOutput
	ToGetApplicationRequiredResourceAccessArrayOutputWithContext(context.Context) GetApplicationRequiredResourceAccessArrayOutput
}

type GetApplicationRequiredResourceAccessArray []GetApplicationRequiredResourceAccessInput

func (GetApplicationRequiredResourceAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationRequiredResourceAccess)(nil)).Elem()
}

func (i GetApplicationRequiredResourceAccessArray) ToGetApplicationRequiredResourceAccessArrayOutput() GetApplicationRequiredResourceAccessArrayOutput {
	return i.ToGetApplicationRequiredResourceAccessArrayOutputWithContext(context.Background())
}

func (i GetApplicationRequiredResourceAccessArray) ToGetApplicationRequiredResourceAccessArrayOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationRequiredResourceAccessArrayOutput)
}

type GetApplicationRequiredResourceAccessOutput struct{ *pulumi.OutputState }

func (GetApplicationRequiredResourceAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationRequiredResourceAccess)(nil)).Elem()
}

func (o GetApplicationRequiredResourceAccessOutput) ToGetApplicationRequiredResourceAccessOutput() GetApplicationRequiredResourceAccessOutput {
	return o
}

func (o GetApplicationRequiredResourceAccessOutput) ToGetApplicationRequiredResourceAccessOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessOutput {
	return o
}

// A collection of `resourceAccess` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
func (o GetApplicationRequiredResourceAccessOutput) ResourceAccesses() GetApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return o.ApplyT(func(v GetApplicationRequiredResourceAccess) []GetApplicationRequiredResourceAccessResourceAccess {
		return v.ResourceAccesses
	}).(GetApplicationRequiredResourceAccessResourceAccessArrayOutput)
}

// The unique identifier for the resource that the application requires access to. This is the Application ID of the target application.
func (o GetApplicationRequiredResourceAccessOutput) ResourceAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationRequiredResourceAccess) string { return v.ResourceAppId }).(pulumi.StringOutput)
}

type GetApplicationRequiredResourceAccessArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationRequiredResourceAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationRequiredResourceAccess)(nil)).Elem()
}

func (o GetApplicationRequiredResourceAccessArrayOutput) ToGetApplicationRequiredResourceAccessArrayOutput() GetApplicationRequiredResourceAccessArrayOutput {
	return o
}

func (o GetApplicationRequiredResourceAccessArrayOutput) ToGetApplicationRequiredResourceAccessArrayOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessArrayOutput {
	return o
}

func (o GetApplicationRequiredResourceAccessArrayOutput) Index(i pulumi.IntInput) GetApplicationRequiredResourceAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationRequiredResourceAccess {
		return vs[0].([]GetApplicationRequiredResourceAccess)[vs[1].(int)]
	}).(GetApplicationRequiredResourceAccessOutput)
}

type GetApplicationRequiredResourceAccessResourceAccess struct {
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id string `pulumi:"id"`
	// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
	Type string `pulumi:"type"`
}

// GetApplicationRequiredResourceAccessResourceAccessInput is an input type that accepts GetApplicationRequiredResourceAccessResourceAccessArgs and GetApplicationRequiredResourceAccessResourceAccessOutput values.
// You can construct a concrete instance of `GetApplicationRequiredResourceAccessResourceAccessInput` via:
//
//          GetApplicationRequiredResourceAccessResourceAccessArgs{...}
type GetApplicationRequiredResourceAccessResourceAccessInput interface {
	pulumi.Input

	ToGetApplicationRequiredResourceAccessResourceAccessOutput() GetApplicationRequiredResourceAccessResourceAccessOutput
	ToGetApplicationRequiredResourceAccessResourceAccessOutputWithContext(context.Context) GetApplicationRequiredResourceAccessResourceAccessOutput
}

type GetApplicationRequiredResourceAccessResourceAccessArgs struct {
	// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApplicationRequiredResourceAccessResourceAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (i GetApplicationRequiredResourceAccessResourceAccessArgs) ToGetApplicationRequiredResourceAccessResourceAccessOutput() GetApplicationRequiredResourceAccessResourceAccessOutput {
	return i.ToGetApplicationRequiredResourceAccessResourceAccessOutputWithContext(context.Background())
}

func (i GetApplicationRequiredResourceAccessResourceAccessArgs) ToGetApplicationRequiredResourceAccessResourceAccessOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessResourceAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationRequiredResourceAccessResourceAccessOutput)
}

// GetApplicationRequiredResourceAccessResourceAccessArrayInput is an input type that accepts GetApplicationRequiredResourceAccessResourceAccessArray and GetApplicationRequiredResourceAccessResourceAccessArrayOutput values.
// You can construct a concrete instance of `GetApplicationRequiredResourceAccessResourceAccessArrayInput` via:
//
//          GetApplicationRequiredResourceAccessResourceAccessArray{ GetApplicationRequiredResourceAccessResourceAccessArgs{...} }
type GetApplicationRequiredResourceAccessResourceAccessArrayInput interface {
	pulumi.Input

	ToGetApplicationRequiredResourceAccessResourceAccessArrayOutput() GetApplicationRequiredResourceAccessResourceAccessArrayOutput
	ToGetApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(context.Context) GetApplicationRequiredResourceAccessResourceAccessArrayOutput
}

type GetApplicationRequiredResourceAccessResourceAccessArray []GetApplicationRequiredResourceAccessResourceAccessInput

func (GetApplicationRequiredResourceAccessResourceAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (i GetApplicationRequiredResourceAccessResourceAccessArray) ToGetApplicationRequiredResourceAccessResourceAccessArrayOutput() GetApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return i.ToGetApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(context.Background())
}

func (i GetApplicationRequiredResourceAccessResourceAccessArray) ToGetApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationRequiredResourceAccessResourceAccessArrayOutput)
}

type GetApplicationRequiredResourceAccessResourceAccessOutput struct{ *pulumi.OutputState }

func (GetApplicationRequiredResourceAccessResourceAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (o GetApplicationRequiredResourceAccessResourceAccessOutput) ToGetApplicationRequiredResourceAccessResourceAccessOutput() GetApplicationRequiredResourceAccessResourceAccessOutput {
	return o
}

func (o GetApplicationRequiredResourceAccessResourceAccessOutput) ToGetApplicationRequiredResourceAccessResourceAccessOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessResourceAccessOutput {
	return o
}

// The unique identifier for an app role or OAuth2 permission scope published by the resource application.
func (o GetApplicationRequiredResourceAccessResourceAccessOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationRequiredResourceAccessResourceAccess) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the `id` property references an app role or an OAuth2 permission scope. Possible values are `Role` or `Scope`.
func (o GetApplicationRequiredResourceAccessResourceAccessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationRequiredResourceAccessResourceAccess) string { return v.Type }).(pulumi.StringOutput)
}

type GetApplicationRequiredResourceAccessResourceAccessArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationRequiredResourceAccessResourceAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationRequiredResourceAccessResourceAccess)(nil)).Elem()
}

func (o GetApplicationRequiredResourceAccessResourceAccessArrayOutput) ToGetApplicationRequiredResourceAccessResourceAccessArrayOutput() GetApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return o
}

func (o GetApplicationRequiredResourceAccessResourceAccessArrayOutput) ToGetApplicationRequiredResourceAccessResourceAccessArrayOutputWithContext(ctx context.Context) GetApplicationRequiredResourceAccessResourceAccessArrayOutput {
	return o
}

func (o GetApplicationRequiredResourceAccessResourceAccessArrayOutput) Index(i pulumi.IntInput) GetApplicationRequiredResourceAccessResourceAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationRequiredResourceAccessResourceAccess {
		return vs[0].([]GetApplicationRequiredResourceAccessResourceAccess)[vs[1].(int)]
	}).(GetApplicationRequiredResourceAccessResourceAccessOutput)
}

type GetApplicationSinglePageApplication struct {
	// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
	RedirectUris []string `pulumi:"redirectUris"`
}

// GetApplicationSinglePageApplicationInput is an input type that accepts GetApplicationSinglePageApplicationArgs and GetApplicationSinglePageApplicationOutput values.
// You can construct a concrete instance of `GetApplicationSinglePageApplicationInput` via:
//
//          GetApplicationSinglePageApplicationArgs{...}
type GetApplicationSinglePageApplicationInput interface {
	pulumi.Input

	ToGetApplicationSinglePageApplicationOutput() GetApplicationSinglePageApplicationOutput
	ToGetApplicationSinglePageApplicationOutputWithContext(context.Context) GetApplicationSinglePageApplicationOutput
}

type GetApplicationSinglePageApplicationArgs struct {
	// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
}

func (GetApplicationSinglePageApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSinglePageApplication)(nil)).Elem()
}

func (i GetApplicationSinglePageApplicationArgs) ToGetApplicationSinglePageApplicationOutput() GetApplicationSinglePageApplicationOutput {
	return i.ToGetApplicationSinglePageApplicationOutputWithContext(context.Background())
}

func (i GetApplicationSinglePageApplicationArgs) ToGetApplicationSinglePageApplicationOutputWithContext(ctx context.Context) GetApplicationSinglePageApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSinglePageApplicationOutput)
}

// GetApplicationSinglePageApplicationArrayInput is an input type that accepts GetApplicationSinglePageApplicationArray and GetApplicationSinglePageApplicationArrayOutput values.
// You can construct a concrete instance of `GetApplicationSinglePageApplicationArrayInput` via:
//
//          GetApplicationSinglePageApplicationArray{ GetApplicationSinglePageApplicationArgs{...} }
type GetApplicationSinglePageApplicationArrayInput interface {
	pulumi.Input

	ToGetApplicationSinglePageApplicationArrayOutput() GetApplicationSinglePageApplicationArrayOutput
	ToGetApplicationSinglePageApplicationArrayOutputWithContext(context.Context) GetApplicationSinglePageApplicationArrayOutput
}

type GetApplicationSinglePageApplicationArray []GetApplicationSinglePageApplicationInput

func (GetApplicationSinglePageApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSinglePageApplication)(nil)).Elem()
}

func (i GetApplicationSinglePageApplicationArray) ToGetApplicationSinglePageApplicationArrayOutput() GetApplicationSinglePageApplicationArrayOutput {
	return i.ToGetApplicationSinglePageApplicationArrayOutputWithContext(context.Background())
}

func (i GetApplicationSinglePageApplicationArray) ToGetApplicationSinglePageApplicationArrayOutputWithContext(ctx context.Context) GetApplicationSinglePageApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSinglePageApplicationArrayOutput)
}

type GetApplicationSinglePageApplicationOutput struct{ *pulumi.OutputState }

func (GetApplicationSinglePageApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSinglePageApplication)(nil)).Elem()
}

func (o GetApplicationSinglePageApplicationOutput) ToGetApplicationSinglePageApplicationOutput() GetApplicationSinglePageApplicationOutput {
	return o
}

func (o GetApplicationSinglePageApplicationOutput) ToGetApplicationSinglePageApplicationOutputWithContext(ctx context.Context) GetApplicationSinglePageApplicationOutput {
	return o
}

// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
func (o GetApplicationSinglePageApplicationOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationSinglePageApplication) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type GetApplicationSinglePageApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSinglePageApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSinglePageApplication)(nil)).Elem()
}

func (o GetApplicationSinglePageApplicationArrayOutput) ToGetApplicationSinglePageApplicationArrayOutput() GetApplicationSinglePageApplicationArrayOutput {
	return o
}

func (o GetApplicationSinglePageApplicationArrayOutput) ToGetApplicationSinglePageApplicationArrayOutputWithContext(ctx context.Context) GetApplicationSinglePageApplicationArrayOutput {
	return o
}

func (o GetApplicationSinglePageApplicationArrayOutput) Index(i pulumi.IntInput) GetApplicationSinglePageApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSinglePageApplication {
		return vs[0].([]GetApplicationSinglePageApplication)[vs[1].(int)]
	}).(GetApplicationSinglePageApplicationOutput)
}

type GetApplicationWeb struct {
	// Home page or landing page of the application.
	HomepageUrl string `pulumi:"homepageUrl"`
	// An `implicitGrant` block as documented above.
	ImplicitGrants []GetApplicationWebImplicitGrant `pulumi:"implicitGrants"`
	// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
	LogoutUrl string `pulumi:"logoutUrl"`
	// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
	RedirectUris []string `pulumi:"redirectUris"`
}

// GetApplicationWebInput is an input type that accepts GetApplicationWebArgs and GetApplicationWebOutput values.
// You can construct a concrete instance of `GetApplicationWebInput` via:
//
//          GetApplicationWebArgs{...}
type GetApplicationWebInput interface {
	pulumi.Input

	ToGetApplicationWebOutput() GetApplicationWebOutput
	ToGetApplicationWebOutputWithContext(context.Context) GetApplicationWebOutput
}

type GetApplicationWebArgs struct {
	// Home page or landing page of the application.
	HomepageUrl pulumi.StringInput `pulumi:"homepageUrl"`
	// An `implicitGrant` block as documented above.
	ImplicitGrants GetApplicationWebImplicitGrantArrayInput `pulumi:"implicitGrants"`
	// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
	LogoutUrl pulumi.StringInput `pulumi:"logoutUrl"`
	// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
}

func (GetApplicationWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationWeb)(nil)).Elem()
}

func (i GetApplicationWebArgs) ToGetApplicationWebOutput() GetApplicationWebOutput {
	return i.ToGetApplicationWebOutputWithContext(context.Background())
}

func (i GetApplicationWebArgs) ToGetApplicationWebOutputWithContext(ctx context.Context) GetApplicationWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationWebOutput)
}

// GetApplicationWebArrayInput is an input type that accepts GetApplicationWebArray and GetApplicationWebArrayOutput values.
// You can construct a concrete instance of `GetApplicationWebArrayInput` via:
//
//          GetApplicationWebArray{ GetApplicationWebArgs{...} }
type GetApplicationWebArrayInput interface {
	pulumi.Input

	ToGetApplicationWebArrayOutput() GetApplicationWebArrayOutput
	ToGetApplicationWebArrayOutputWithContext(context.Context) GetApplicationWebArrayOutput
}

type GetApplicationWebArray []GetApplicationWebInput

func (GetApplicationWebArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationWeb)(nil)).Elem()
}

func (i GetApplicationWebArray) ToGetApplicationWebArrayOutput() GetApplicationWebArrayOutput {
	return i.ToGetApplicationWebArrayOutputWithContext(context.Background())
}

func (i GetApplicationWebArray) ToGetApplicationWebArrayOutputWithContext(ctx context.Context) GetApplicationWebArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationWebArrayOutput)
}

type GetApplicationWebOutput struct{ *pulumi.OutputState }

func (GetApplicationWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationWeb)(nil)).Elem()
}

func (o GetApplicationWebOutput) ToGetApplicationWebOutput() GetApplicationWebOutput {
	return o
}

func (o GetApplicationWebOutput) ToGetApplicationWebOutputWithContext(ctx context.Context) GetApplicationWebOutput {
	return o
}

// Home page or landing page of the application.
func (o GetApplicationWebOutput) HomepageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationWeb) string { return v.HomepageUrl }).(pulumi.StringOutput)
}

// An `implicitGrant` block as documented above.
func (o GetApplicationWebOutput) ImplicitGrants() GetApplicationWebImplicitGrantArrayOutput {
	return o.ApplyT(func(v GetApplicationWeb) []GetApplicationWebImplicitGrant { return v.ImplicitGrants }).(GetApplicationWebImplicitGrantArrayOutput)
}

// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
func (o GetApplicationWebOutput) LogoutUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationWeb) string { return v.LogoutUrl }).(pulumi.StringOutput)
}

// A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
func (o GetApplicationWebOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationWeb) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

type GetApplicationWebArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationWebArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationWeb)(nil)).Elem()
}

func (o GetApplicationWebArrayOutput) ToGetApplicationWebArrayOutput() GetApplicationWebArrayOutput {
	return o
}

func (o GetApplicationWebArrayOutput) ToGetApplicationWebArrayOutputWithContext(ctx context.Context) GetApplicationWebArrayOutput {
	return o
}

func (o GetApplicationWebArrayOutput) Index(i pulumi.IntInput) GetApplicationWebOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationWeb {
		return vs[0].([]GetApplicationWeb)[vs[1].(int)]
	}).(GetApplicationWebOutput)
}

type GetApplicationWebImplicitGrant struct {
	// Whether this web application can request an access token using OAuth 2.0 implicit flow.
	AccessTokenIssuanceEnabled bool `pulumi:"accessTokenIssuanceEnabled"`
	// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
	IdTokenIssuanceEnabled bool `pulumi:"idTokenIssuanceEnabled"`
}

// GetApplicationWebImplicitGrantInput is an input type that accepts GetApplicationWebImplicitGrantArgs and GetApplicationWebImplicitGrantOutput values.
// You can construct a concrete instance of `GetApplicationWebImplicitGrantInput` via:
//
//          GetApplicationWebImplicitGrantArgs{...}
type GetApplicationWebImplicitGrantInput interface {
	pulumi.Input

	ToGetApplicationWebImplicitGrantOutput() GetApplicationWebImplicitGrantOutput
	ToGetApplicationWebImplicitGrantOutputWithContext(context.Context) GetApplicationWebImplicitGrantOutput
}

type GetApplicationWebImplicitGrantArgs struct {
	// Whether this web application can request an access token using OAuth 2.0 implicit flow.
	AccessTokenIssuanceEnabled pulumi.BoolInput `pulumi:"accessTokenIssuanceEnabled"`
	// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
	IdTokenIssuanceEnabled pulumi.BoolInput `pulumi:"idTokenIssuanceEnabled"`
}

func (GetApplicationWebImplicitGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationWebImplicitGrant)(nil)).Elem()
}

func (i GetApplicationWebImplicitGrantArgs) ToGetApplicationWebImplicitGrantOutput() GetApplicationWebImplicitGrantOutput {
	return i.ToGetApplicationWebImplicitGrantOutputWithContext(context.Background())
}

func (i GetApplicationWebImplicitGrantArgs) ToGetApplicationWebImplicitGrantOutputWithContext(ctx context.Context) GetApplicationWebImplicitGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationWebImplicitGrantOutput)
}

// GetApplicationWebImplicitGrantArrayInput is an input type that accepts GetApplicationWebImplicitGrantArray and GetApplicationWebImplicitGrantArrayOutput values.
// You can construct a concrete instance of `GetApplicationWebImplicitGrantArrayInput` via:
//
//          GetApplicationWebImplicitGrantArray{ GetApplicationWebImplicitGrantArgs{...} }
type GetApplicationWebImplicitGrantArrayInput interface {
	pulumi.Input

	ToGetApplicationWebImplicitGrantArrayOutput() GetApplicationWebImplicitGrantArrayOutput
	ToGetApplicationWebImplicitGrantArrayOutputWithContext(context.Context) GetApplicationWebImplicitGrantArrayOutput
}

type GetApplicationWebImplicitGrantArray []GetApplicationWebImplicitGrantInput

func (GetApplicationWebImplicitGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationWebImplicitGrant)(nil)).Elem()
}

func (i GetApplicationWebImplicitGrantArray) ToGetApplicationWebImplicitGrantArrayOutput() GetApplicationWebImplicitGrantArrayOutput {
	return i.ToGetApplicationWebImplicitGrantArrayOutputWithContext(context.Background())
}

func (i GetApplicationWebImplicitGrantArray) ToGetApplicationWebImplicitGrantArrayOutputWithContext(ctx context.Context) GetApplicationWebImplicitGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationWebImplicitGrantArrayOutput)
}

type GetApplicationWebImplicitGrantOutput struct{ *pulumi.OutputState }

func (GetApplicationWebImplicitGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationWebImplicitGrant)(nil)).Elem()
}

func (o GetApplicationWebImplicitGrantOutput) ToGetApplicationWebImplicitGrantOutput() GetApplicationWebImplicitGrantOutput {
	return o
}

func (o GetApplicationWebImplicitGrantOutput) ToGetApplicationWebImplicitGrantOutputWithContext(ctx context.Context) GetApplicationWebImplicitGrantOutput {
	return o
}

// Whether this web application can request an access token using OAuth 2.0 implicit flow.
func (o GetApplicationWebImplicitGrantOutput) AccessTokenIssuanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationWebImplicitGrant) bool { return v.AccessTokenIssuanceEnabled }).(pulumi.BoolOutput)
}

// Whether this web application can request an ID token using OAuth 2.0 implicit flow.
func (o GetApplicationWebImplicitGrantOutput) IdTokenIssuanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationWebImplicitGrant) bool { return v.IdTokenIssuanceEnabled }).(pulumi.BoolOutput)
}

type GetApplicationWebImplicitGrantArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationWebImplicitGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationWebImplicitGrant)(nil)).Elem()
}

func (o GetApplicationWebImplicitGrantArrayOutput) ToGetApplicationWebImplicitGrantArrayOutput() GetApplicationWebImplicitGrantArrayOutput {
	return o
}

func (o GetApplicationWebImplicitGrantArrayOutput) ToGetApplicationWebImplicitGrantArrayOutputWithContext(ctx context.Context) GetApplicationWebImplicitGrantArrayOutput {
	return o
}

func (o GetApplicationWebImplicitGrantArrayOutput) Index(i pulumi.IntInput) GetApplicationWebImplicitGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationWebImplicitGrant {
		return vs[0].([]GetApplicationWebImplicitGrant)[vs[1].(int)]
	}).(GetApplicationWebImplicitGrantOutput)
}

type GetDomainsDomain struct {
	// Set to `true` to only return domains whose DNS is managed by Microsoft 365. Defaults to `false`.
	AdminManaged bool `pulumi:"adminManaged"`
	// The authentication type of the domain. Possible values include `Managed` or `Federated`.
	AuthenticationType string `pulumi:"authenticationType"`
	// Whether this is the default domain that is used for user creation.
	Default bool `pulumi:"default"`
	// The name of the domain.
	DomainName string `pulumi:"domainName"`
	// Whether this is the initial domain created by Azure Active Directory.
	Initial bool `pulumi:"initial"`
	// Whether the domain is a verified root domain (not a subdomain).
	Root bool `pulumi:"root"`
	// A list of capabilities / services supported by the domain. Possible values include `Email`, `Sharepoint`, `EmailInternalRelayOnly`, `OfficeCommunicationsOnline`, `SharePointDefaultDomain`, `FullRedelegation`, `SharePointPublic`, `OrgIdAuthentication`, `Yammer` and `Intune`.
	SupportedServices []string `pulumi:"supportedServices"`
	// Whether the domain has completed domain ownership verification.
	Verified bool `pulumi:"verified"`
}

// GetDomainsDomainInput is an input type that accepts GetDomainsDomainArgs and GetDomainsDomainOutput values.
// You can construct a concrete instance of `GetDomainsDomainInput` via:
//
//          GetDomainsDomainArgs{...}
type GetDomainsDomainInput interface {
	pulumi.Input

	ToGetDomainsDomainOutput() GetDomainsDomainOutput
	ToGetDomainsDomainOutputWithContext(context.Context) GetDomainsDomainOutput
}

type GetDomainsDomainArgs struct {
	// Set to `true` to only return domains whose DNS is managed by Microsoft 365. Defaults to `false`.
	AdminManaged pulumi.BoolInput `pulumi:"adminManaged"`
	// The authentication type of the domain. Possible values include `Managed` or `Federated`.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Whether this is the default domain that is used for user creation.
	Default pulumi.BoolInput `pulumi:"default"`
	// The name of the domain.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Whether this is the initial domain created by Azure Active Directory.
	Initial pulumi.BoolInput `pulumi:"initial"`
	// Whether the domain is a verified root domain (not a subdomain).
	Root pulumi.BoolInput `pulumi:"root"`
	// A list of capabilities / services supported by the domain. Possible values include `Email`, `Sharepoint`, `EmailInternalRelayOnly`, `OfficeCommunicationsOnline`, `SharePointDefaultDomain`, `FullRedelegation`, `SharePointPublic`, `OrgIdAuthentication`, `Yammer` and `Intune`.
	SupportedServices pulumi.StringArrayInput `pulumi:"supportedServices"`
	// Whether the domain has completed domain ownership verification.
	Verified pulumi.BoolInput `pulumi:"verified"`
}

func (GetDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return i.ToGetDomainsDomainOutputWithContext(context.Background())
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainOutput)
}

// GetDomainsDomainArrayInput is an input type that accepts GetDomainsDomainArray and GetDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainArrayInput` via:
//
//          GetDomainsDomainArray{ GetDomainsDomainArgs{...} }
type GetDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput
	ToGetDomainsDomainArrayOutputWithContext(context.Context) GetDomainsDomainArrayOutput
}

type GetDomainsDomainArray []GetDomainsDomainInput

func (GetDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return i.ToGetDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainArrayOutput)
}

type GetDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return o
}

// Set to `true` to only return domains whose DNS is managed by Microsoft 365. Defaults to `false`.
func (o GetDomainsDomainOutput) AdminManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.AdminManaged }).(pulumi.BoolOutput)
}

// The authentication type of the domain. Possible values include `Managed` or `Federated`.
func (o GetDomainsDomainOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Whether this is the default domain that is used for user creation.
func (o GetDomainsDomainOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.Default }).(pulumi.BoolOutput)
}

// The name of the domain.
func (o GetDomainsDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.DomainName }).(pulumi.StringOutput)
}

// Whether this is the initial domain created by Azure Active Directory.
func (o GetDomainsDomainOutput) Initial() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.Initial }).(pulumi.BoolOutput)
}

// Whether the domain is a verified root domain (not a subdomain).
func (o GetDomainsDomainOutput) Root() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.Root }).(pulumi.BoolOutput)
}

// A list of capabilities / services supported by the domain. Possible values include `Email`, `Sharepoint`, `EmailInternalRelayOnly`, `OfficeCommunicationsOnline`, `SharePointDefaultDomain`, `FullRedelegation`, `SharePointPublic`, `OrgIdAuthentication`, `Yammer` and `Intune`.
func (o GetDomainsDomainOutput) SupportedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []string { return v.SupportedServices }).(pulumi.StringArrayOutput)
}

// Whether the domain has completed domain ownership verification.
func (o GetDomainsDomainOutput) Verified() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.Verified }).(pulumi.BoolOutput)
}

type GetDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomain {
		return vs[0].([]GetDomainsDomain)[vs[1].(int)]
	}).(GetDomainsDomainOutput)
}

type GetGroupDynamicMembership struct {
	// Whether rule processing is "On" (true) or "Paused" (false).
	Enabled bool `pulumi:"enabled"`
	// The rule that determines membership of this group.
	Rule string `pulumi:"rule"`
}

// GetGroupDynamicMembershipInput is an input type that accepts GetGroupDynamicMembershipArgs and GetGroupDynamicMembershipOutput values.
// You can construct a concrete instance of `GetGroupDynamicMembershipInput` via:
//
//          GetGroupDynamicMembershipArgs{...}
type GetGroupDynamicMembershipInput interface {
	pulumi.Input

	ToGetGroupDynamicMembershipOutput() GetGroupDynamicMembershipOutput
	ToGetGroupDynamicMembershipOutputWithContext(context.Context) GetGroupDynamicMembershipOutput
}

type GetGroupDynamicMembershipArgs struct {
	// Whether rule processing is "On" (true) or "Paused" (false).
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The rule that determines membership of this group.
	Rule pulumi.StringInput `pulumi:"rule"`
}

func (GetGroupDynamicMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupDynamicMembership)(nil)).Elem()
}

func (i GetGroupDynamicMembershipArgs) ToGetGroupDynamicMembershipOutput() GetGroupDynamicMembershipOutput {
	return i.ToGetGroupDynamicMembershipOutputWithContext(context.Background())
}

func (i GetGroupDynamicMembershipArgs) ToGetGroupDynamicMembershipOutputWithContext(ctx context.Context) GetGroupDynamicMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupDynamicMembershipOutput)
}

// GetGroupDynamicMembershipArrayInput is an input type that accepts GetGroupDynamicMembershipArray and GetGroupDynamicMembershipArrayOutput values.
// You can construct a concrete instance of `GetGroupDynamicMembershipArrayInput` via:
//
//          GetGroupDynamicMembershipArray{ GetGroupDynamicMembershipArgs{...} }
type GetGroupDynamicMembershipArrayInput interface {
	pulumi.Input

	ToGetGroupDynamicMembershipArrayOutput() GetGroupDynamicMembershipArrayOutput
	ToGetGroupDynamicMembershipArrayOutputWithContext(context.Context) GetGroupDynamicMembershipArrayOutput
}

type GetGroupDynamicMembershipArray []GetGroupDynamicMembershipInput

func (GetGroupDynamicMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupDynamicMembership)(nil)).Elem()
}

func (i GetGroupDynamicMembershipArray) ToGetGroupDynamicMembershipArrayOutput() GetGroupDynamicMembershipArrayOutput {
	return i.ToGetGroupDynamicMembershipArrayOutputWithContext(context.Background())
}

func (i GetGroupDynamicMembershipArray) ToGetGroupDynamicMembershipArrayOutputWithContext(ctx context.Context) GetGroupDynamicMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupDynamicMembershipArrayOutput)
}

type GetGroupDynamicMembershipOutput struct{ *pulumi.OutputState }

func (GetGroupDynamicMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupDynamicMembership)(nil)).Elem()
}

func (o GetGroupDynamicMembershipOutput) ToGetGroupDynamicMembershipOutput() GetGroupDynamicMembershipOutput {
	return o
}

func (o GetGroupDynamicMembershipOutput) ToGetGroupDynamicMembershipOutputWithContext(ctx context.Context) GetGroupDynamicMembershipOutput {
	return o
}

// Whether rule processing is "On" (true) or "Paused" (false).
func (o GetGroupDynamicMembershipOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupDynamicMembership) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The rule that determines membership of this group.
func (o GetGroupDynamicMembershipOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupDynamicMembership) string { return v.Rule }).(pulumi.StringOutput)
}

type GetGroupDynamicMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetGroupDynamicMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupDynamicMembership)(nil)).Elem()
}

func (o GetGroupDynamicMembershipArrayOutput) ToGetGroupDynamicMembershipArrayOutput() GetGroupDynamicMembershipArrayOutput {
	return o
}

func (o GetGroupDynamicMembershipArrayOutput) ToGetGroupDynamicMembershipArrayOutputWithContext(ctx context.Context) GetGroupDynamicMembershipArrayOutput {
	return o
}

func (o GetGroupDynamicMembershipArrayOutput) Index(i pulumi.IntInput) GetGroupDynamicMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupDynamicMembership {
		return vs[0].([]GetGroupDynamicMembership)[vs[1].(int)]
	}).(GetGroupDynamicMembershipOutput)
}

type GetServicePrincipalAppRole struct {
	// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in daemon service scenarios). Possible values are: `User` and `Application`, or both.
	AllowedMemberTypes []string `pulumi:"allowedMemberTypes"`
	// Permission help text that appears in the admin app assignment and consent experiences.
	Description string `pulumi:"description"`
	// The display name of the application associated with this service principal.
	DisplayName string `pulumi:"displayName"`
	// Determines if the permission scope is enabled.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier of the delegated permission. Must be a valid UUID.
	Id string `pulumi:"id"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value string `pulumi:"value"`
}

// GetServicePrincipalAppRoleInput is an input type that accepts GetServicePrincipalAppRoleArgs and GetServicePrincipalAppRoleOutput values.
// You can construct a concrete instance of `GetServicePrincipalAppRoleInput` via:
//
//          GetServicePrincipalAppRoleArgs{...}
type GetServicePrincipalAppRoleInput interface {
	pulumi.Input

	ToGetServicePrincipalAppRoleOutput() GetServicePrincipalAppRoleOutput
	ToGetServicePrincipalAppRoleOutputWithContext(context.Context) GetServicePrincipalAppRoleOutput
}

type GetServicePrincipalAppRoleArgs struct {
	// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in daemon service scenarios). Possible values are: `User` and `Application`, or both.
	AllowedMemberTypes pulumi.StringArrayInput `pulumi:"allowedMemberTypes"`
	// Permission help text that appears in the admin app assignment and consent experiences.
	Description pulumi.StringInput `pulumi:"description"`
	// The display name of the application associated with this service principal.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Determines if the permission scope is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier of the delegated permission. Must be a valid UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServicePrincipalAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalAppRole)(nil)).Elem()
}

func (i GetServicePrincipalAppRoleArgs) ToGetServicePrincipalAppRoleOutput() GetServicePrincipalAppRoleOutput {
	return i.ToGetServicePrincipalAppRoleOutputWithContext(context.Background())
}

func (i GetServicePrincipalAppRoleArgs) ToGetServicePrincipalAppRoleOutputWithContext(ctx context.Context) GetServicePrincipalAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalAppRoleOutput)
}

// GetServicePrincipalAppRoleArrayInput is an input type that accepts GetServicePrincipalAppRoleArray and GetServicePrincipalAppRoleArrayOutput values.
// You can construct a concrete instance of `GetServicePrincipalAppRoleArrayInput` via:
//
//          GetServicePrincipalAppRoleArray{ GetServicePrincipalAppRoleArgs{...} }
type GetServicePrincipalAppRoleArrayInput interface {
	pulumi.Input

	ToGetServicePrincipalAppRoleArrayOutput() GetServicePrincipalAppRoleArrayOutput
	ToGetServicePrincipalAppRoleArrayOutputWithContext(context.Context) GetServicePrincipalAppRoleArrayOutput
}

type GetServicePrincipalAppRoleArray []GetServicePrincipalAppRoleInput

func (GetServicePrincipalAppRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalAppRole)(nil)).Elem()
}

func (i GetServicePrincipalAppRoleArray) ToGetServicePrincipalAppRoleArrayOutput() GetServicePrincipalAppRoleArrayOutput {
	return i.ToGetServicePrincipalAppRoleArrayOutputWithContext(context.Background())
}

func (i GetServicePrincipalAppRoleArray) ToGetServicePrincipalAppRoleArrayOutputWithContext(ctx context.Context) GetServicePrincipalAppRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalAppRoleArrayOutput)
}

type GetServicePrincipalAppRoleOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalAppRole)(nil)).Elem()
}

func (o GetServicePrincipalAppRoleOutput) ToGetServicePrincipalAppRoleOutput() GetServicePrincipalAppRoleOutput {
	return o
}

func (o GetServicePrincipalAppRoleOutput) ToGetServicePrincipalAppRoleOutputWithContext(ctx context.Context) GetServicePrincipalAppRoleOutput {
	return o
}

// Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in daemon service scenarios). Possible values are: `User` and `Application`, or both.
func (o GetServicePrincipalAppRoleOutput) AllowedMemberTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServicePrincipalAppRole) []string { return v.AllowedMemberTypes }).(pulumi.StringArrayOutput)
}

// Permission help text that appears in the admin app assignment and consent experiences.
func (o GetServicePrincipalAppRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalAppRole) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of the application associated with this service principal.
func (o GetServicePrincipalAppRoleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalAppRole) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Determines if the permission scope is enabled.
func (o GetServicePrincipalAppRoleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalAppRole) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier of the delegated permission. Must be a valid UUID.
func (o GetServicePrincipalAppRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalAppRole) string { return v.Id }).(pulumi.StringOutput)
}

// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
func (o GetServicePrincipalAppRoleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalAppRole) string { return v.Value }).(pulumi.StringOutput)
}

type GetServicePrincipalAppRoleArrayOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalAppRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalAppRole)(nil)).Elem()
}

func (o GetServicePrincipalAppRoleArrayOutput) ToGetServicePrincipalAppRoleArrayOutput() GetServicePrincipalAppRoleArrayOutput {
	return o
}

func (o GetServicePrincipalAppRoleArrayOutput) ToGetServicePrincipalAppRoleArrayOutputWithContext(ctx context.Context) GetServicePrincipalAppRoleArrayOutput {
	return o
}

func (o GetServicePrincipalAppRoleArrayOutput) Index(i pulumi.IntInput) GetServicePrincipalAppRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicePrincipalAppRole {
		return vs[0].([]GetServicePrincipalAppRole)[vs[1].(int)]
	}).(GetServicePrincipalAppRoleOutput)
}

type GetServicePrincipalFeature struct {
	// Whether this service principal represents a custom SAML application.
	CustomSingleSignOnApp bool `pulumi:"customSingleSignOnApp"`
	// Whether this service principal represents an Enterprise Application.
	EnterpriseApplication bool `pulumi:"enterpriseApplication"`
	// Whether this service principal represents a gallery application.
	GalleryApplication bool `pulumi:"galleryApplication"`
	// Whether this app is visible to users in My Apps and Office 365 Launcher.
	VisibleToUsers bool `pulumi:"visibleToUsers"`
}

// GetServicePrincipalFeatureInput is an input type that accepts GetServicePrincipalFeatureArgs and GetServicePrincipalFeatureOutput values.
// You can construct a concrete instance of `GetServicePrincipalFeatureInput` via:
//
//          GetServicePrincipalFeatureArgs{...}
type GetServicePrincipalFeatureInput interface {
	pulumi.Input

	ToGetServicePrincipalFeatureOutput() GetServicePrincipalFeatureOutput
	ToGetServicePrincipalFeatureOutputWithContext(context.Context) GetServicePrincipalFeatureOutput
}

type GetServicePrincipalFeatureArgs struct {
	// Whether this service principal represents a custom SAML application.
	CustomSingleSignOnApp pulumi.BoolInput `pulumi:"customSingleSignOnApp"`
	// Whether this service principal represents an Enterprise Application.
	EnterpriseApplication pulumi.BoolInput `pulumi:"enterpriseApplication"`
	// Whether this service principal represents a gallery application.
	GalleryApplication pulumi.BoolInput `pulumi:"galleryApplication"`
	// Whether this app is visible to users in My Apps and Office 365 Launcher.
	VisibleToUsers pulumi.BoolInput `pulumi:"visibleToUsers"`
}

func (GetServicePrincipalFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalFeature)(nil)).Elem()
}

func (i GetServicePrincipalFeatureArgs) ToGetServicePrincipalFeatureOutput() GetServicePrincipalFeatureOutput {
	return i.ToGetServicePrincipalFeatureOutputWithContext(context.Background())
}

func (i GetServicePrincipalFeatureArgs) ToGetServicePrincipalFeatureOutputWithContext(ctx context.Context) GetServicePrincipalFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalFeatureOutput)
}

// GetServicePrincipalFeatureArrayInput is an input type that accepts GetServicePrincipalFeatureArray and GetServicePrincipalFeatureArrayOutput values.
// You can construct a concrete instance of `GetServicePrincipalFeatureArrayInput` via:
//
//          GetServicePrincipalFeatureArray{ GetServicePrincipalFeatureArgs{...} }
type GetServicePrincipalFeatureArrayInput interface {
	pulumi.Input

	ToGetServicePrincipalFeatureArrayOutput() GetServicePrincipalFeatureArrayOutput
	ToGetServicePrincipalFeatureArrayOutputWithContext(context.Context) GetServicePrincipalFeatureArrayOutput
}

type GetServicePrincipalFeatureArray []GetServicePrincipalFeatureInput

func (GetServicePrincipalFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalFeature)(nil)).Elem()
}

func (i GetServicePrincipalFeatureArray) ToGetServicePrincipalFeatureArrayOutput() GetServicePrincipalFeatureArrayOutput {
	return i.ToGetServicePrincipalFeatureArrayOutputWithContext(context.Background())
}

func (i GetServicePrincipalFeatureArray) ToGetServicePrincipalFeatureArrayOutputWithContext(ctx context.Context) GetServicePrincipalFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalFeatureArrayOutput)
}

type GetServicePrincipalFeatureOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalFeature)(nil)).Elem()
}

func (o GetServicePrincipalFeatureOutput) ToGetServicePrincipalFeatureOutput() GetServicePrincipalFeatureOutput {
	return o
}

func (o GetServicePrincipalFeatureOutput) ToGetServicePrincipalFeatureOutputWithContext(ctx context.Context) GetServicePrincipalFeatureOutput {
	return o
}

// Whether this service principal represents a custom SAML application.
func (o GetServicePrincipalFeatureOutput) CustomSingleSignOnApp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeature) bool { return v.CustomSingleSignOnApp }).(pulumi.BoolOutput)
}

// Whether this service principal represents an Enterprise Application.
func (o GetServicePrincipalFeatureOutput) EnterpriseApplication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeature) bool { return v.EnterpriseApplication }).(pulumi.BoolOutput)
}

// Whether this service principal represents a gallery application.
func (o GetServicePrincipalFeatureOutput) GalleryApplication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeature) bool { return v.GalleryApplication }).(pulumi.BoolOutput)
}

// Whether this app is visible to users in My Apps and Office 365 Launcher.
func (o GetServicePrincipalFeatureOutput) VisibleToUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeature) bool { return v.VisibleToUsers }).(pulumi.BoolOutput)
}

type GetServicePrincipalFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalFeature)(nil)).Elem()
}

func (o GetServicePrincipalFeatureArrayOutput) ToGetServicePrincipalFeatureArrayOutput() GetServicePrincipalFeatureArrayOutput {
	return o
}

func (o GetServicePrincipalFeatureArrayOutput) ToGetServicePrincipalFeatureArrayOutputWithContext(ctx context.Context) GetServicePrincipalFeatureArrayOutput {
	return o
}

func (o GetServicePrincipalFeatureArrayOutput) Index(i pulumi.IntInput) GetServicePrincipalFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicePrincipalFeature {
		return vs[0].([]GetServicePrincipalFeature)[vs[1].(int)]
	}).(GetServicePrincipalFeatureOutput)
}

type GetServicePrincipalFeatureTag struct {
	CustomSingleSignOn bool `pulumi:"customSingleSignOn"`
	Enterprise         bool `pulumi:"enterprise"`
	Gallery            bool `pulumi:"gallery"`
	Hide               bool `pulumi:"hide"`
}

// GetServicePrincipalFeatureTagInput is an input type that accepts GetServicePrincipalFeatureTagArgs and GetServicePrincipalFeatureTagOutput values.
// You can construct a concrete instance of `GetServicePrincipalFeatureTagInput` via:
//
//          GetServicePrincipalFeatureTagArgs{...}
type GetServicePrincipalFeatureTagInput interface {
	pulumi.Input

	ToGetServicePrincipalFeatureTagOutput() GetServicePrincipalFeatureTagOutput
	ToGetServicePrincipalFeatureTagOutputWithContext(context.Context) GetServicePrincipalFeatureTagOutput
}

type GetServicePrincipalFeatureTagArgs struct {
	CustomSingleSignOn pulumi.BoolInput `pulumi:"customSingleSignOn"`
	Enterprise         pulumi.BoolInput `pulumi:"enterprise"`
	Gallery            pulumi.BoolInput `pulumi:"gallery"`
	Hide               pulumi.BoolInput `pulumi:"hide"`
}

func (GetServicePrincipalFeatureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalFeatureTag)(nil)).Elem()
}

func (i GetServicePrincipalFeatureTagArgs) ToGetServicePrincipalFeatureTagOutput() GetServicePrincipalFeatureTagOutput {
	return i.ToGetServicePrincipalFeatureTagOutputWithContext(context.Background())
}

func (i GetServicePrincipalFeatureTagArgs) ToGetServicePrincipalFeatureTagOutputWithContext(ctx context.Context) GetServicePrincipalFeatureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalFeatureTagOutput)
}

// GetServicePrincipalFeatureTagArrayInput is an input type that accepts GetServicePrincipalFeatureTagArray and GetServicePrincipalFeatureTagArrayOutput values.
// You can construct a concrete instance of `GetServicePrincipalFeatureTagArrayInput` via:
//
//          GetServicePrincipalFeatureTagArray{ GetServicePrincipalFeatureTagArgs{...} }
type GetServicePrincipalFeatureTagArrayInput interface {
	pulumi.Input

	ToGetServicePrincipalFeatureTagArrayOutput() GetServicePrincipalFeatureTagArrayOutput
	ToGetServicePrincipalFeatureTagArrayOutputWithContext(context.Context) GetServicePrincipalFeatureTagArrayOutput
}

type GetServicePrincipalFeatureTagArray []GetServicePrincipalFeatureTagInput

func (GetServicePrincipalFeatureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalFeatureTag)(nil)).Elem()
}

func (i GetServicePrincipalFeatureTagArray) ToGetServicePrincipalFeatureTagArrayOutput() GetServicePrincipalFeatureTagArrayOutput {
	return i.ToGetServicePrincipalFeatureTagArrayOutputWithContext(context.Background())
}

func (i GetServicePrincipalFeatureTagArray) ToGetServicePrincipalFeatureTagArrayOutputWithContext(ctx context.Context) GetServicePrincipalFeatureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalFeatureTagArrayOutput)
}

type GetServicePrincipalFeatureTagOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalFeatureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalFeatureTag)(nil)).Elem()
}

func (o GetServicePrincipalFeatureTagOutput) ToGetServicePrincipalFeatureTagOutput() GetServicePrincipalFeatureTagOutput {
	return o
}

func (o GetServicePrincipalFeatureTagOutput) ToGetServicePrincipalFeatureTagOutputWithContext(ctx context.Context) GetServicePrincipalFeatureTagOutput {
	return o
}

func (o GetServicePrincipalFeatureTagOutput) CustomSingleSignOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeatureTag) bool { return v.CustomSingleSignOn }).(pulumi.BoolOutput)
}

func (o GetServicePrincipalFeatureTagOutput) Enterprise() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeatureTag) bool { return v.Enterprise }).(pulumi.BoolOutput)
}

func (o GetServicePrincipalFeatureTagOutput) Gallery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeatureTag) bool { return v.Gallery }).(pulumi.BoolOutput)
}

func (o GetServicePrincipalFeatureTagOutput) Hide() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalFeatureTag) bool { return v.Hide }).(pulumi.BoolOutput)
}

type GetServicePrincipalFeatureTagArrayOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalFeatureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalFeatureTag)(nil)).Elem()
}

func (o GetServicePrincipalFeatureTagArrayOutput) ToGetServicePrincipalFeatureTagArrayOutput() GetServicePrincipalFeatureTagArrayOutput {
	return o
}

func (o GetServicePrincipalFeatureTagArrayOutput) ToGetServicePrincipalFeatureTagArrayOutputWithContext(ctx context.Context) GetServicePrincipalFeatureTagArrayOutput {
	return o
}

func (o GetServicePrincipalFeatureTagArrayOutput) Index(i pulumi.IntInput) GetServicePrincipalFeatureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicePrincipalFeatureTag {
		return vs[0].([]GetServicePrincipalFeatureTag)[vs[1].(int)]
	}).(GetServicePrincipalFeatureTagOutput)
}

type GetServicePrincipalOauth2PermissionScope struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription string `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName string `pulumi:"adminConsentDisplayName"`
	// Determines if the permission scope is enabled.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier of the delegated permission. Must be a valid UUID.
	Id string `pulumi:"id"`
	// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
	Type string `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription string `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName string `pulumi:"userConsentDisplayName"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value string `pulumi:"value"`
}

// GetServicePrincipalOauth2PermissionScopeInput is an input type that accepts GetServicePrincipalOauth2PermissionScopeArgs and GetServicePrincipalOauth2PermissionScopeOutput values.
// You can construct a concrete instance of `GetServicePrincipalOauth2PermissionScopeInput` via:
//
//          GetServicePrincipalOauth2PermissionScopeArgs{...}
type GetServicePrincipalOauth2PermissionScopeInput interface {
	pulumi.Input

	ToGetServicePrincipalOauth2PermissionScopeOutput() GetServicePrincipalOauth2PermissionScopeOutput
	ToGetServicePrincipalOauth2PermissionScopeOutputWithContext(context.Context) GetServicePrincipalOauth2PermissionScopeOutput
}

type GetServicePrincipalOauth2PermissionScopeArgs struct {
	// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDescription pulumi.StringInput `pulumi:"adminConsentDescription"`
	// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
	AdminConsentDisplayName pulumi.StringInput `pulumi:"adminConsentDisplayName"`
	// Determines if the permission scope is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier of the delegated permission. Must be a valid UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
	Type pulumi.StringInput `pulumi:"type"`
	// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
	UserConsentDescription pulumi.StringInput `pulumi:"userConsentDescription"`
	// Display name for the delegated permission that appears in the end user consent experience.
	UserConsentDisplayName pulumi.StringInput `pulumi:"userConsentDisplayName"`
	// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServicePrincipalOauth2PermissionScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (i GetServicePrincipalOauth2PermissionScopeArgs) ToGetServicePrincipalOauth2PermissionScopeOutput() GetServicePrincipalOauth2PermissionScopeOutput {
	return i.ToGetServicePrincipalOauth2PermissionScopeOutputWithContext(context.Background())
}

func (i GetServicePrincipalOauth2PermissionScopeArgs) ToGetServicePrincipalOauth2PermissionScopeOutputWithContext(ctx context.Context) GetServicePrincipalOauth2PermissionScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalOauth2PermissionScopeOutput)
}

// GetServicePrincipalOauth2PermissionScopeArrayInput is an input type that accepts GetServicePrincipalOauth2PermissionScopeArray and GetServicePrincipalOauth2PermissionScopeArrayOutput values.
// You can construct a concrete instance of `GetServicePrincipalOauth2PermissionScopeArrayInput` via:
//
//          GetServicePrincipalOauth2PermissionScopeArray{ GetServicePrincipalOauth2PermissionScopeArgs{...} }
type GetServicePrincipalOauth2PermissionScopeArrayInput interface {
	pulumi.Input

	ToGetServicePrincipalOauth2PermissionScopeArrayOutput() GetServicePrincipalOauth2PermissionScopeArrayOutput
	ToGetServicePrincipalOauth2PermissionScopeArrayOutputWithContext(context.Context) GetServicePrincipalOauth2PermissionScopeArrayOutput
}

type GetServicePrincipalOauth2PermissionScopeArray []GetServicePrincipalOauth2PermissionScopeInput

func (GetServicePrincipalOauth2PermissionScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (i GetServicePrincipalOauth2PermissionScopeArray) ToGetServicePrincipalOauth2PermissionScopeArrayOutput() GetServicePrincipalOauth2PermissionScopeArrayOutput {
	return i.ToGetServicePrincipalOauth2PermissionScopeArrayOutputWithContext(context.Background())
}

func (i GetServicePrincipalOauth2PermissionScopeArray) ToGetServicePrincipalOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) GetServicePrincipalOauth2PermissionScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalOauth2PermissionScopeArrayOutput)
}

type GetServicePrincipalOauth2PermissionScopeOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalOauth2PermissionScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (o GetServicePrincipalOauth2PermissionScopeOutput) ToGetServicePrincipalOauth2PermissionScopeOutput() GetServicePrincipalOauth2PermissionScopeOutput {
	return o
}

func (o GetServicePrincipalOauth2PermissionScopeOutput) ToGetServicePrincipalOauth2PermissionScopeOutputWithContext(ctx context.Context) GetServicePrincipalOauth2PermissionScopeOutput {
	return o
}

// Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.
func (o GetServicePrincipalOauth2PermissionScopeOutput) AdminConsentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.AdminConsentDescription }).(pulumi.StringOutput)
}

// Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.
func (o GetServicePrincipalOauth2PermissionScopeOutput) AdminConsentDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.AdminConsentDisplayName }).(pulumi.StringOutput)
}

// Determines if the permission scope is enabled.
func (o GetServicePrincipalOauth2PermissionScopeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier of the delegated permission. Must be a valid UUID.
func (o GetServicePrincipalOauth2PermissionScopeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.Id }).(pulumi.StringOutput)
}

// Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Possible values are `User` or `Admin`.
func (o GetServicePrincipalOauth2PermissionScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.Type }).(pulumi.StringOutput)
}

// Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.
func (o GetServicePrincipalOauth2PermissionScopeOutput) UserConsentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.UserConsentDescription }).(pulumi.StringOutput)
}

// Display name for the delegated permission that appears in the end user consent experience.
func (o GetServicePrincipalOauth2PermissionScopeOutput) UserConsentDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.UserConsentDisplayName }).(pulumi.StringOutput)
}

// The value that is used for the `scp` claim in OAuth 2.0 access tokens.
func (o GetServicePrincipalOauth2PermissionScopeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalOauth2PermissionScope) string { return v.Value }).(pulumi.StringOutput)
}

type GetServicePrincipalOauth2PermissionScopeArrayOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalOauth2PermissionScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalOauth2PermissionScope)(nil)).Elem()
}

func (o GetServicePrincipalOauth2PermissionScopeArrayOutput) ToGetServicePrincipalOauth2PermissionScopeArrayOutput() GetServicePrincipalOauth2PermissionScopeArrayOutput {
	return o
}

func (o GetServicePrincipalOauth2PermissionScopeArrayOutput) ToGetServicePrincipalOauth2PermissionScopeArrayOutputWithContext(ctx context.Context) GetServicePrincipalOauth2PermissionScopeArrayOutput {
	return o
}

func (o GetServicePrincipalOauth2PermissionScopeArrayOutput) Index(i pulumi.IntInput) GetServicePrincipalOauth2PermissionScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicePrincipalOauth2PermissionScope {
		return vs[0].([]GetServicePrincipalOauth2PermissionScope)[vs[1].(int)]
	}).(GetServicePrincipalOauth2PermissionScopeOutput)
}

type GetServicePrincipalSamlSingleSignOn struct {
	// The relative URI the service provider would redirect to after completion of the single sign-on flow.
	RelayState string `pulumi:"relayState"`
}

// GetServicePrincipalSamlSingleSignOnInput is an input type that accepts GetServicePrincipalSamlSingleSignOnArgs and GetServicePrincipalSamlSingleSignOnOutput values.
// You can construct a concrete instance of `GetServicePrincipalSamlSingleSignOnInput` via:
//
//          GetServicePrincipalSamlSingleSignOnArgs{...}
type GetServicePrincipalSamlSingleSignOnInput interface {
	pulumi.Input

	ToGetServicePrincipalSamlSingleSignOnOutput() GetServicePrincipalSamlSingleSignOnOutput
	ToGetServicePrincipalSamlSingleSignOnOutputWithContext(context.Context) GetServicePrincipalSamlSingleSignOnOutput
}

type GetServicePrincipalSamlSingleSignOnArgs struct {
	// The relative URI the service provider would redirect to after completion of the single sign-on flow.
	RelayState pulumi.StringInput `pulumi:"relayState"`
}

func (GetServicePrincipalSamlSingleSignOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (i GetServicePrincipalSamlSingleSignOnArgs) ToGetServicePrincipalSamlSingleSignOnOutput() GetServicePrincipalSamlSingleSignOnOutput {
	return i.ToGetServicePrincipalSamlSingleSignOnOutputWithContext(context.Background())
}

func (i GetServicePrincipalSamlSingleSignOnArgs) ToGetServicePrincipalSamlSingleSignOnOutputWithContext(ctx context.Context) GetServicePrincipalSamlSingleSignOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalSamlSingleSignOnOutput)
}

// GetServicePrincipalSamlSingleSignOnArrayInput is an input type that accepts GetServicePrincipalSamlSingleSignOnArray and GetServicePrincipalSamlSingleSignOnArrayOutput values.
// You can construct a concrete instance of `GetServicePrincipalSamlSingleSignOnArrayInput` via:
//
//          GetServicePrincipalSamlSingleSignOnArray{ GetServicePrincipalSamlSingleSignOnArgs{...} }
type GetServicePrincipalSamlSingleSignOnArrayInput interface {
	pulumi.Input

	ToGetServicePrincipalSamlSingleSignOnArrayOutput() GetServicePrincipalSamlSingleSignOnArrayOutput
	ToGetServicePrincipalSamlSingleSignOnArrayOutputWithContext(context.Context) GetServicePrincipalSamlSingleSignOnArrayOutput
}

type GetServicePrincipalSamlSingleSignOnArray []GetServicePrincipalSamlSingleSignOnInput

func (GetServicePrincipalSamlSingleSignOnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (i GetServicePrincipalSamlSingleSignOnArray) ToGetServicePrincipalSamlSingleSignOnArrayOutput() GetServicePrincipalSamlSingleSignOnArrayOutput {
	return i.ToGetServicePrincipalSamlSingleSignOnArrayOutputWithContext(context.Background())
}

func (i GetServicePrincipalSamlSingleSignOnArray) ToGetServicePrincipalSamlSingleSignOnArrayOutputWithContext(ctx context.Context) GetServicePrincipalSamlSingleSignOnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalSamlSingleSignOnArrayOutput)
}

type GetServicePrincipalSamlSingleSignOnOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalSamlSingleSignOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (o GetServicePrincipalSamlSingleSignOnOutput) ToGetServicePrincipalSamlSingleSignOnOutput() GetServicePrincipalSamlSingleSignOnOutput {
	return o
}

func (o GetServicePrincipalSamlSingleSignOnOutput) ToGetServicePrincipalSamlSingleSignOnOutputWithContext(ctx context.Context) GetServicePrincipalSamlSingleSignOnOutput {
	return o
}

// The relative URI the service provider would redirect to after completion of the single sign-on flow.
func (o GetServicePrincipalSamlSingleSignOnOutput) RelayState() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalSamlSingleSignOn) string { return v.RelayState }).(pulumi.StringOutput)
}

type GetServicePrincipalSamlSingleSignOnArrayOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalSamlSingleSignOnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalSamlSingleSignOn)(nil)).Elem()
}

func (o GetServicePrincipalSamlSingleSignOnArrayOutput) ToGetServicePrincipalSamlSingleSignOnArrayOutput() GetServicePrincipalSamlSingleSignOnArrayOutput {
	return o
}

func (o GetServicePrincipalSamlSingleSignOnArrayOutput) ToGetServicePrincipalSamlSingleSignOnArrayOutputWithContext(ctx context.Context) GetServicePrincipalSamlSingleSignOnArrayOutput {
	return o
}

func (o GetServicePrincipalSamlSingleSignOnArrayOutput) Index(i pulumi.IntInput) GetServicePrincipalSamlSingleSignOnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicePrincipalSamlSingleSignOn {
		return vs[0].([]GetServicePrincipalSamlSingleSignOn)[vs[1].(int)]
	}).(GetServicePrincipalSamlSingleSignOnOutput)
}

type GetServicePrincipalsServicePrincipal struct {
	// Whether or not the service principal account is enabled.
	AccountEnabled bool `pulumi:"accountEnabled"`
	// Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application.
	AppRoleAssignmentRequired bool `pulumi:"appRoleAssignmentRequired"`
	// The application ID (client ID) of the application associated with this service principal.
	ApplicationId string `pulumi:"applicationId"`
	// The tenant ID where the associated application is registered.
	ApplicationTenantId string `pulumi:"applicationTenantId"`
	// The display name of the application associated with this service principal.
	DisplayName string `pulumi:"displayName"`
	// The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps.
	PreferredSingleSignOnMode string `pulumi:"preferredSingleSignOnMode"`
	// The URL where the service exposes SAML metadata for federation.
	SamlMetadataUrl string `pulumi:"samlMetadataUrl"`
	// A list of identifier URI(s), copied over from the associated application.
	ServicePrincipalNames []string `pulumi:"servicePrincipalNames"`
	// The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.
	SignInAudience string `pulumi:"signInAudience"`
	// A list of tags applied to the service principal.
	Tags []string `pulumi:"tags"`
	// Identifies whether the service principal represents an application or a managed identity. Possible values include `Application` or `ManagedIdentity`.
	Type string `pulumi:"type"`
}

// GetServicePrincipalsServicePrincipalInput is an input type that accepts GetServicePrincipalsServicePrincipalArgs and GetServicePrincipalsServicePrincipalOutput values.
// You can construct a concrete instance of `GetServicePrincipalsServicePrincipalInput` via:
//
//          GetServicePrincipalsServicePrincipalArgs{...}
type GetServicePrincipalsServicePrincipalInput interface {
	pulumi.Input

	ToGetServicePrincipalsServicePrincipalOutput() GetServicePrincipalsServicePrincipalOutput
	ToGetServicePrincipalsServicePrincipalOutputWithContext(context.Context) GetServicePrincipalsServicePrincipalOutput
}

type GetServicePrincipalsServicePrincipalArgs struct {
	// Whether or not the service principal account is enabled.
	AccountEnabled pulumi.BoolInput `pulumi:"accountEnabled"`
	// Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application.
	AppRoleAssignmentRequired pulumi.BoolInput `pulumi:"appRoleAssignmentRequired"`
	// The application ID (client ID) of the application associated with this service principal.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The tenant ID where the associated application is registered.
	ApplicationTenantId pulumi.StringInput `pulumi:"applicationTenantId"`
	// The display name of the application associated with this service principal.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps.
	PreferredSingleSignOnMode pulumi.StringInput `pulumi:"preferredSingleSignOnMode"`
	// The URL where the service exposes SAML metadata for federation.
	SamlMetadataUrl pulumi.StringInput `pulumi:"samlMetadataUrl"`
	// A list of identifier URI(s), copied over from the associated application.
	ServicePrincipalNames pulumi.StringArrayInput `pulumi:"servicePrincipalNames"`
	// The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.
	SignInAudience pulumi.StringInput `pulumi:"signInAudience"`
	// A list of tags applied to the service principal.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Identifies whether the service principal represents an application or a managed identity. Possible values include `Application` or `ManagedIdentity`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServicePrincipalsServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalsServicePrincipal)(nil)).Elem()
}

func (i GetServicePrincipalsServicePrincipalArgs) ToGetServicePrincipalsServicePrincipalOutput() GetServicePrincipalsServicePrincipalOutput {
	return i.ToGetServicePrincipalsServicePrincipalOutputWithContext(context.Background())
}

func (i GetServicePrincipalsServicePrincipalArgs) ToGetServicePrincipalsServicePrincipalOutputWithContext(ctx context.Context) GetServicePrincipalsServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalsServicePrincipalOutput)
}

// GetServicePrincipalsServicePrincipalArrayInput is an input type that accepts GetServicePrincipalsServicePrincipalArray and GetServicePrincipalsServicePrincipalArrayOutput values.
// You can construct a concrete instance of `GetServicePrincipalsServicePrincipalArrayInput` via:
//
//          GetServicePrincipalsServicePrincipalArray{ GetServicePrincipalsServicePrincipalArgs{...} }
type GetServicePrincipalsServicePrincipalArrayInput interface {
	pulumi.Input

	ToGetServicePrincipalsServicePrincipalArrayOutput() GetServicePrincipalsServicePrincipalArrayOutput
	ToGetServicePrincipalsServicePrincipalArrayOutputWithContext(context.Context) GetServicePrincipalsServicePrincipalArrayOutput
}

type GetServicePrincipalsServicePrincipalArray []GetServicePrincipalsServicePrincipalInput

func (GetServicePrincipalsServicePrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalsServicePrincipal)(nil)).Elem()
}

func (i GetServicePrincipalsServicePrincipalArray) ToGetServicePrincipalsServicePrincipalArrayOutput() GetServicePrincipalsServicePrincipalArrayOutput {
	return i.ToGetServicePrincipalsServicePrincipalArrayOutputWithContext(context.Background())
}

func (i GetServicePrincipalsServicePrincipalArray) ToGetServicePrincipalsServicePrincipalArrayOutputWithContext(ctx context.Context) GetServicePrincipalsServicePrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePrincipalsServicePrincipalArrayOutput)
}

type GetServicePrincipalsServicePrincipalOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalsServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePrincipalsServicePrincipal)(nil)).Elem()
}

func (o GetServicePrincipalsServicePrincipalOutput) ToGetServicePrincipalsServicePrincipalOutput() GetServicePrincipalsServicePrincipalOutput {
	return o
}

func (o GetServicePrincipalsServicePrincipalOutput) ToGetServicePrincipalsServicePrincipalOutputWithContext(ctx context.Context) GetServicePrincipalsServicePrincipalOutput {
	return o
}

// Whether or not the service principal account is enabled.
func (o GetServicePrincipalsServicePrincipalOutput) AccountEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) bool { return v.AccountEnabled }).(pulumi.BoolOutput)
}

// Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application.
func (o GetServicePrincipalsServicePrincipalOutput) AppRoleAssignmentRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) bool { return v.AppRoleAssignmentRequired }).(pulumi.BoolOutput)
}

// The application ID (client ID) of the application associated with this service principal.
func (o GetServicePrincipalsServicePrincipalOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The tenant ID where the associated application is registered.
func (o GetServicePrincipalsServicePrincipalOutput) ApplicationTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.ApplicationTenantId }).(pulumi.StringOutput)
}

// The display name of the application associated with this service principal.
func (o GetServicePrincipalsServicePrincipalOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps.
func (o GetServicePrincipalsServicePrincipalOutput) PreferredSingleSignOnMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.PreferredSingleSignOnMode }).(pulumi.StringOutput)
}

// The URL where the service exposes SAML metadata for federation.
func (o GetServicePrincipalsServicePrincipalOutput) SamlMetadataUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.SamlMetadataUrl }).(pulumi.StringOutput)
}

// A list of identifier URI(s), copied over from the associated application.
func (o GetServicePrincipalsServicePrincipalOutput) ServicePrincipalNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) []string { return v.ServicePrincipalNames }).(pulumi.StringArrayOutput)
}

// The Microsoft account types that are supported for the associated application. Possible values include `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.
func (o GetServicePrincipalsServicePrincipalOutput) SignInAudience() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.SignInAudience }).(pulumi.StringOutput)
}

// A list of tags applied to the service principal.
func (o GetServicePrincipalsServicePrincipalOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Identifies whether the service principal represents an application or a managed identity. Possible values include `Application` or `ManagedIdentity`.
func (o GetServicePrincipalsServicePrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePrincipalsServicePrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type GetServicePrincipalsServicePrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetServicePrincipalsServicePrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicePrincipalsServicePrincipal)(nil)).Elem()
}

func (o GetServicePrincipalsServicePrincipalArrayOutput) ToGetServicePrincipalsServicePrincipalArrayOutput() GetServicePrincipalsServicePrincipalArrayOutput {
	return o
}

func (o GetServicePrincipalsServicePrincipalArrayOutput) ToGetServicePrincipalsServicePrincipalArrayOutputWithContext(ctx context.Context) GetServicePrincipalsServicePrincipalArrayOutput {
	return o
}

func (o GetServicePrincipalsServicePrincipalArrayOutput) Index(i pulumi.IntInput) GetServicePrincipalsServicePrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicePrincipalsServicePrincipal {
		return vs[0].([]GetServicePrincipalsServicePrincipal)[vs[1].(int)]
	}).(GetServicePrincipalsServicePrincipalOutput)
}

type GetUsersUser struct {
	// Whether or not the account is enabled.
	AccountEnabled bool `pulumi:"accountEnabled"`
	// The display name of the user.
	DisplayName string `pulumi:"displayName"`
	// The primary email address of the user.
	Mail string `pulumi:"mail"`
	// The email alias of the user.
	MailNickname string `pulumi:"mailNickname"`
	// The object ID of the user.
	ObjectId string `pulumi:"objectId"`
	// The value used to associate an on-premises Active Directory user account with their Azure AD user object.
	OnpremisesImmutableId string `pulumi:"onpremisesImmutableId"`
	// The on-premise SAM account name of the user.
	OnpremisesSamAccountName string `pulumi:"onpremisesSamAccountName"`
	// The on-premise user principal name of the user.
	OnpremisesUserPrincipalName string `pulumi:"onpremisesUserPrincipalName"`
	// The usage location of the user.
	UsageLocation string `pulumi:"usageLocation"`
	// The user principal name (UPN) of the user.
	UserPrincipalName string `pulumi:"userPrincipalName"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//          GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// Whether or not the account is enabled.
	AccountEnabled pulumi.BoolInput `pulumi:"accountEnabled"`
	// The display name of the user.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The primary email address of the user.
	Mail pulumi.StringInput `pulumi:"mail"`
	// The email alias of the user.
	MailNickname pulumi.StringInput `pulumi:"mailNickname"`
	// The object ID of the user.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The value used to associate an on-premises Active Directory user account with their Azure AD user object.
	OnpremisesImmutableId pulumi.StringInput `pulumi:"onpremisesImmutableId"`
	// The on-premise SAM account name of the user.
	OnpremisesSamAccountName pulumi.StringInput `pulumi:"onpremisesSamAccountName"`
	// The on-premise user principal name of the user.
	OnpremisesUserPrincipalName pulumi.StringInput `pulumi:"onpremisesUserPrincipalName"`
	// The usage location of the user.
	UsageLocation pulumi.StringInput `pulumi:"usageLocation"`
	// The user principal name (UPN) of the user.
	UserPrincipalName pulumi.StringInput `pulumi:"userPrincipalName"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//          GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// Whether or not the account is enabled.
func (o GetUsersUserOutput) AccountEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.AccountEnabled }).(pulumi.BoolOutput)
}

// The display name of the user.
func (o GetUsersUserOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The primary email address of the user.
func (o GetUsersUserOutput) Mail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Mail }).(pulumi.StringOutput)
}

// The email alias of the user.
func (o GetUsersUserOutput) MailNickname() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.MailNickname }).(pulumi.StringOutput)
}

// The object ID of the user.
func (o GetUsersUserOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The value used to associate an on-premises Active Directory user account with their Azure AD user object.
func (o GetUsersUserOutput) OnpremisesImmutableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.OnpremisesImmutableId }).(pulumi.StringOutput)
}

// The on-premise SAM account name of the user.
func (o GetUsersUserOutput) OnpremisesSamAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.OnpremisesSamAccountName }).(pulumi.StringOutput)
}

// The on-premise user principal name of the user.
func (o GetUsersUserOutput) OnpremisesUserPrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.OnpremisesUserPrincipalName }).(pulumi.StringOutput)
}

// The usage location of the user.
func (o GetUsersUserOutput) UsageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UsageLocation }).(pulumi.StringOutput)
}

// The user principal name (UPN) of the user.
func (o GetUsersUserOutput) UserPrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserPrincipalName }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationApiInput)(nil)).Elem(), ApplicationApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationApiPtrInput)(nil)).Elem(), ApplicationApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationApiOauth2PermissionScopeInput)(nil)).Elem(), ApplicationApiOauth2PermissionScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationApiOauth2PermissionScopeArrayInput)(nil)).Elem(), ApplicationApiOauth2PermissionScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAppRoleInput)(nil)).Elem(), ApplicationAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAppRoleArrayInput)(nil)).Elem(), ApplicationAppRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationFeatureTagInput)(nil)).Elem(), ApplicationFeatureTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationFeatureTagArrayInput)(nil)).Elem(), ApplicationFeatureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsInput)(nil)).Elem(), ApplicationOptionalClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsPtrInput)(nil)).Elem(), ApplicationOptionalClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsAccessTokenInput)(nil)).Elem(), ApplicationOptionalClaimsAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsAccessTokenArrayInput)(nil)).Elem(), ApplicationOptionalClaimsAccessTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsIdTokenInput)(nil)).Elem(), ApplicationOptionalClaimsIdTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsIdTokenArrayInput)(nil)).Elem(), ApplicationOptionalClaimsIdTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsSaml2TokenInput)(nil)).Elem(), ApplicationOptionalClaimsSaml2TokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsSaml2TokenArrayInput)(nil)).Elem(), ApplicationOptionalClaimsSaml2TokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPublicClientInput)(nil)).Elem(), ApplicationPublicClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPublicClientPtrInput)(nil)).Elem(), ApplicationPublicClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationRequiredResourceAccessInput)(nil)).Elem(), ApplicationRequiredResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationRequiredResourceAccessArrayInput)(nil)).Elem(), ApplicationRequiredResourceAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationRequiredResourceAccessResourceAccessInput)(nil)).Elem(), ApplicationRequiredResourceAccessResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationRequiredResourceAccessResourceAccessArrayInput)(nil)).Elem(), ApplicationRequiredResourceAccessResourceAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSinglePageApplicationInput)(nil)).Elem(), ApplicationSinglePageApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSinglePageApplicationPtrInput)(nil)).Elem(), ApplicationSinglePageApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWebInput)(nil)).Elem(), ApplicationWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWebPtrInput)(nil)).Elem(), ApplicationWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWebImplicitGrantInput)(nil)).Elem(), ApplicationWebImplicitGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWebImplicitGrantPtrInput)(nil)).Elem(), ApplicationWebImplicitGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsInput)(nil)).Elem(), ConditionalAccessPolicyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsApplicationsInput)(nil)).Elem(), ConditionalAccessPolicyConditionsApplicationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsApplicationsPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsApplicationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsDevicesInput)(nil)).Elem(), ConditionalAccessPolicyConditionsDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsDevicesPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsDevicesFilterInput)(nil)).Elem(), ConditionalAccessPolicyConditionsDevicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsDevicesFilterPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsDevicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsLocationsInput)(nil)).Elem(), ConditionalAccessPolicyConditionsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsLocationsPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsPlatformsInput)(nil)).Elem(), ConditionalAccessPolicyConditionsPlatformsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsPlatformsPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsPlatformsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsUsersInput)(nil)).Elem(), ConditionalAccessPolicyConditionsUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyConditionsUsersPtrInput)(nil)).Elem(), ConditionalAccessPolicyConditionsUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyGrantControlsInput)(nil)).Elem(), ConditionalAccessPolicyGrantControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicyGrantControlsPtrInput)(nil)).Elem(), ConditionalAccessPolicyGrantControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicySessionControlsInput)(nil)).Elem(), ConditionalAccessPolicySessionControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionalAccessPolicySessionControlsPtrInput)(nil)).Elem(), ConditionalAccessPolicySessionControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDirectoryRolePermissionInput)(nil)).Elem(), CustomDirectoryRolePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDirectoryRolePermissionArrayInput)(nil)).Elem(), CustomDirectoryRolePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDynamicMembershipInput)(nil)).Elem(), GroupDynamicMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDynamicMembershipPtrInput)(nil)).Elem(), GroupDynamicMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationMessageInput)(nil)).Elem(), InvitationMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationMessagePtrInput)(nil)).Elem(), InvitationMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamedLocationCountryInput)(nil)).Elem(), NamedLocationCountryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamedLocationCountryPtrInput)(nil)).Elem(), NamedLocationCountryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamedLocationIpInput)(nil)).Elem(), NamedLocationIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamedLocationIpPtrInput)(nil)).Elem(), NamedLocationIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalAppRoleInput)(nil)).Elem(), ServicePrincipalAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalAppRoleArrayInput)(nil)).Elem(), ServicePrincipalAppRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFeatureInput)(nil)).Elem(), ServicePrincipalFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFeatureArrayInput)(nil)).Elem(), ServicePrincipalFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFeatureTagInput)(nil)).Elem(), ServicePrincipalFeatureTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalFeatureTagArrayInput)(nil)).Elem(), ServicePrincipalFeatureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalOauth2PermissionScopeInput)(nil)).Elem(), ServicePrincipalOauth2PermissionScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalOauth2PermissionScopeArrayInput)(nil)).Elem(), ServicePrincipalOauth2PermissionScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalSamlSingleSignOnInput)(nil)).Elem(), ServicePrincipalSamlSingleSignOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalSamlSingleSignOnPtrInput)(nil)).Elem(), ServicePrincipalSamlSingleSignOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationApiInput)(nil)).Elem(), GetApplicationApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationApiArrayInput)(nil)).Elem(), GetApplicationApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationApiOauth2PermissionScopeInput)(nil)).Elem(), GetApplicationApiOauth2PermissionScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationApiOauth2PermissionScopeArrayInput)(nil)).Elem(), GetApplicationApiOauth2PermissionScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationAppRoleInput)(nil)).Elem(), GetApplicationAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationAppRoleArrayInput)(nil)).Elem(), GetApplicationAppRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationFeatureTagInput)(nil)).Elem(), GetApplicationFeatureTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationFeatureTagArrayInput)(nil)).Elem(), GetApplicationFeatureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimInput)(nil)).Elem(), GetApplicationOptionalClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimArrayInput)(nil)).Elem(), GetApplicationOptionalClaimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimAccessTokenInput)(nil)).Elem(), GetApplicationOptionalClaimAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimAccessTokenArrayInput)(nil)).Elem(), GetApplicationOptionalClaimAccessTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimIdTokenInput)(nil)).Elem(), GetApplicationOptionalClaimIdTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimIdTokenArrayInput)(nil)).Elem(), GetApplicationOptionalClaimIdTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimSaml2TokenInput)(nil)).Elem(), GetApplicationOptionalClaimSaml2TokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationOptionalClaimSaml2TokenArrayInput)(nil)).Elem(), GetApplicationOptionalClaimSaml2TokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationPublicClientInput)(nil)).Elem(), GetApplicationPublicClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationPublicClientArrayInput)(nil)).Elem(), GetApplicationPublicClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationRequiredResourceAccessInput)(nil)).Elem(), GetApplicationRequiredResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationRequiredResourceAccessArrayInput)(nil)).Elem(), GetApplicationRequiredResourceAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationRequiredResourceAccessResourceAccessInput)(nil)).Elem(), GetApplicationRequiredResourceAccessResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationRequiredResourceAccessResourceAccessArrayInput)(nil)).Elem(), GetApplicationRequiredResourceAccessResourceAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSinglePageApplicationInput)(nil)).Elem(), GetApplicationSinglePageApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSinglePageApplicationArrayInput)(nil)).Elem(), GetApplicationSinglePageApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationWebInput)(nil)).Elem(), GetApplicationWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationWebArrayInput)(nil)).Elem(), GetApplicationWebArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationWebImplicitGrantInput)(nil)).Elem(), GetApplicationWebImplicitGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationWebImplicitGrantArrayInput)(nil)).Elem(), GetApplicationWebImplicitGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainInput)(nil)).Elem(), GetDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainArrayInput)(nil)).Elem(), GetDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupDynamicMembershipInput)(nil)).Elem(), GetGroupDynamicMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupDynamicMembershipArrayInput)(nil)).Elem(), GetGroupDynamicMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalAppRoleInput)(nil)).Elem(), GetServicePrincipalAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalAppRoleArrayInput)(nil)).Elem(), GetServicePrincipalAppRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalFeatureInput)(nil)).Elem(), GetServicePrincipalFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalFeatureArrayInput)(nil)).Elem(), GetServicePrincipalFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalFeatureTagInput)(nil)).Elem(), GetServicePrincipalFeatureTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalFeatureTagArrayInput)(nil)).Elem(), GetServicePrincipalFeatureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalOauth2PermissionScopeInput)(nil)).Elem(), GetServicePrincipalOauth2PermissionScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalOauth2PermissionScopeArrayInput)(nil)).Elem(), GetServicePrincipalOauth2PermissionScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalSamlSingleSignOnInput)(nil)).Elem(), GetServicePrincipalSamlSingleSignOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalSamlSingleSignOnArrayInput)(nil)).Elem(), GetServicePrincipalSamlSingleSignOnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalsServicePrincipalInput)(nil)).Elem(), GetServicePrincipalsServicePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicePrincipalsServicePrincipalArrayInput)(nil)).Elem(), GetServicePrincipalsServicePrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(ApplicationApiOutput{})
	pulumi.RegisterOutputType(ApplicationApiPtrOutput{})
	pulumi.RegisterOutputType(ApplicationApiOauth2PermissionScopeOutput{})
	pulumi.RegisterOutputType(ApplicationApiOauth2PermissionScopeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAppRoleOutput{})
	pulumi.RegisterOutputType(ApplicationAppRoleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationFeatureTagOutput{})
	pulumi.RegisterOutputType(ApplicationFeatureTagArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsAccessTokenOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsAccessTokenArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsIdTokenOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsIdTokenArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsSaml2TokenOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsSaml2TokenArrayOutput{})
	pulumi.RegisterOutputType(ApplicationPublicClientOutput{})
	pulumi.RegisterOutputType(ApplicationPublicClientPtrOutput{})
	pulumi.RegisterOutputType(ApplicationRequiredResourceAccessOutput{})
	pulumi.RegisterOutputType(ApplicationRequiredResourceAccessArrayOutput{})
	pulumi.RegisterOutputType(ApplicationRequiredResourceAccessResourceAccessOutput{})
	pulumi.RegisterOutputType(ApplicationRequiredResourceAccessResourceAccessArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSinglePageApplicationOutput{})
	pulumi.RegisterOutputType(ApplicationSinglePageApplicationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationWebOutput{})
	pulumi.RegisterOutputType(ApplicationWebPtrOutput{})
	pulumi.RegisterOutputType(ApplicationWebImplicitGrantOutput{})
	pulumi.RegisterOutputType(ApplicationWebImplicitGrantPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsApplicationsOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsApplicationsPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsDevicesOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsDevicesPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsDevicesFilterOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsDevicesFilterPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsLocationsOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsLocationsPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsPlatformsOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsPlatformsPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsUsersOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyConditionsUsersPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyGrantControlsOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicyGrantControlsPtrOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicySessionControlsOutput{})
	pulumi.RegisterOutputType(ConditionalAccessPolicySessionControlsPtrOutput{})
	pulumi.RegisterOutputType(CustomDirectoryRolePermissionOutput{})
	pulumi.RegisterOutputType(CustomDirectoryRolePermissionArrayOutput{})
	pulumi.RegisterOutputType(GroupDynamicMembershipOutput{})
	pulumi.RegisterOutputType(GroupDynamicMembershipPtrOutput{})
	pulumi.RegisterOutputType(InvitationMessageOutput{})
	pulumi.RegisterOutputType(InvitationMessagePtrOutput{})
	pulumi.RegisterOutputType(NamedLocationCountryOutput{})
	pulumi.RegisterOutputType(NamedLocationCountryPtrOutput{})
	pulumi.RegisterOutputType(NamedLocationIpOutput{})
	pulumi.RegisterOutputType(NamedLocationIpPtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalAppRoleOutput{})
	pulumi.RegisterOutputType(ServicePrincipalAppRoleArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalFeatureOutput{})
	pulumi.RegisterOutputType(ServicePrincipalFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalFeatureTagOutput{})
	pulumi.RegisterOutputType(ServicePrincipalFeatureTagArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalOauth2PermissionScopeOutput{})
	pulumi.RegisterOutputType(ServicePrincipalOauth2PermissionScopeArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalSamlSingleSignOnOutput{})
	pulumi.RegisterOutputType(ServicePrincipalSamlSingleSignOnPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationApiOutput{})
	pulumi.RegisterOutputType(GetApplicationApiArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationApiOauth2PermissionScopeOutput{})
	pulumi.RegisterOutputType(GetApplicationApiOauth2PermissionScopeArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationAppRoleOutput{})
	pulumi.RegisterOutputType(GetApplicationAppRoleArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationFeatureTagOutput{})
	pulumi.RegisterOutputType(GetApplicationFeatureTagArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimAccessTokenOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimAccessTokenArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimIdTokenOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimIdTokenArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimSaml2TokenOutput{})
	pulumi.RegisterOutputType(GetApplicationOptionalClaimSaml2TokenArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationPublicClientOutput{})
	pulumi.RegisterOutputType(GetApplicationPublicClientArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationRequiredResourceAccessOutput{})
	pulumi.RegisterOutputType(GetApplicationRequiredResourceAccessArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationRequiredResourceAccessResourceAccessOutput{})
	pulumi.RegisterOutputType(GetApplicationRequiredResourceAccessResourceAccessArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSinglePageApplicationOutput{})
	pulumi.RegisterOutputType(GetApplicationSinglePageApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationWebOutput{})
	pulumi.RegisterOutputType(GetApplicationWebArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationWebImplicitGrantOutput{})
	pulumi.RegisterOutputType(GetApplicationWebImplicitGrantArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetGroupDynamicMembershipOutput{})
	pulumi.RegisterOutputType(GetGroupDynamicMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalAppRoleOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalAppRoleArrayOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalFeatureOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalFeatureTagOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalFeatureTagArrayOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalOauth2PermissionScopeOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalOauth2PermissionScopeArrayOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalSamlSingleSignOnOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalSamlSingleSignOnArrayOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalsServicePrincipalOutput{})
	pulumi.RegisterOutputType(GetServicePrincipalsServicePrincipalArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
