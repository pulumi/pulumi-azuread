// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an access package catalog within Identity Governance in Azure Active Directory.
//
// ## API Permissions
//
// The following API permissions are required in order to use this resource.
//
// When authenticated with a service principal, this resource requires the following application role: `EntitlementManagement.ReadWrite.All`.
//
// When authenticated with a user principal, this resource requires one of the following directory roles: `Catalog owner`, `Catalog creator` or `Global Administrator`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := azuread.NewAccessPackageCatalog(ctx, "example", &azuread.AccessPackageCatalogArgs{
//				Description: pulumi.String("Example access package catalog"),
//				DisplayName: pulumi.String("example-access-package-catalog"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// An Access Package Catalog can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import azuread:index/accessPackageCatalog:AccessPackageCatalog example 00000000-0000-0000-0000-000000000000
//
// ```
type AccessPackageCatalog struct {
	pulumi.CustomResourceState

	// The description of the access package catalog.
	Description pulumi.StringOutput `pulumi:"description"`
	// The display name of the access package catalog.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Whether the access packages in this catalog can be requested by users outside the tenant.
	ExternallyVisible pulumi.BoolPtrOutput `pulumi:"externallyVisible"`
	// Whether the access packages in this catalog are available for management.
	Published pulumi.BoolPtrOutput `pulumi:"published"`
}

// NewAccessPackageCatalog registers a new resource with the given unique name, arguments, and options.
func NewAccessPackageCatalog(ctx *pulumi.Context,
	name string, args *AccessPackageCatalogArgs, opts ...pulumi.ResourceOption) (*AccessPackageCatalog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessPackageCatalog
	err := ctx.RegisterResource("azuread:index/accessPackageCatalog:AccessPackageCatalog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessPackageCatalog gets an existing AccessPackageCatalog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessPackageCatalog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessPackageCatalogState, opts ...pulumi.ResourceOption) (*AccessPackageCatalog, error) {
	var resource AccessPackageCatalog
	err := ctx.ReadResource("azuread:index/accessPackageCatalog:AccessPackageCatalog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessPackageCatalog resources.
type accessPackageCatalogState struct {
	// The description of the access package catalog.
	Description *string `pulumi:"description"`
	// The display name of the access package catalog.
	DisplayName *string `pulumi:"displayName"`
	// Whether the access packages in this catalog can be requested by users outside the tenant.
	ExternallyVisible *bool `pulumi:"externallyVisible"`
	// Whether the access packages in this catalog are available for management.
	Published *bool `pulumi:"published"`
}

type AccessPackageCatalogState struct {
	// The description of the access package catalog.
	Description pulumi.StringPtrInput
	// The display name of the access package catalog.
	DisplayName pulumi.StringPtrInput
	// Whether the access packages in this catalog can be requested by users outside the tenant.
	ExternallyVisible pulumi.BoolPtrInput
	// Whether the access packages in this catalog are available for management.
	Published pulumi.BoolPtrInput
}

func (AccessPackageCatalogState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPackageCatalogState)(nil)).Elem()
}

type accessPackageCatalogArgs struct {
	// The description of the access package catalog.
	Description string `pulumi:"description"`
	// The display name of the access package catalog.
	DisplayName string `pulumi:"displayName"`
	// Whether the access packages in this catalog can be requested by users outside the tenant.
	ExternallyVisible *bool `pulumi:"externallyVisible"`
	// Whether the access packages in this catalog are available for management.
	Published *bool `pulumi:"published"`
}

// The set of arguments for constructing a AccessPackageCatalog resource.
type AccessPackageCatalogArgs struct {
	// The description of the access package catalog.
	Description pulumi.StringInput
	// The display name of the access package catalog.
	DisplayName pulumi.StringInput
	// Whether the access packages in this catalog can be requested by users outside the tenant.
	ExternallyVisible pulumi.BoolPtrInput
	// Whether the access packages in this catalog are available for management.
	Published pulumi.BoolPtrInput
}

func (AccessPackageCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPackageCatalogArgs)(nil)).Elem()
}

type AccessPackageCatalogInput interface {
	pulumi.Input

	ToAccessPackageCatalogOutput() AccessPackageCatalogOutput
	ToAccessPackageCatalogOutputWithContext(ctx context.Context) AccessPackageCatalogOutput
}

func (*AccessPackageCatalog) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPackageCatalog)(nil)).Elem()
}

func (i *AccessPackageCatalog) ToAccessPackageCatalogOutput() AccessPackageCatalogOutput {
	return i.ToAccessPackageCatalogOutputWithContext(context.Background())
}

func (i *AccessPackageCatalog) ToAccessPackageCatalogOutputWithContext(ctx context.Context) AccessPackageCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPackageCatalogOutput)
}

// AccessPackageCatalogArrayInput is an input type that accepts AccessPackageCatalogArray and AccessPackageCatalogArrayOutput values.
// You can construct a concrete instance of `AccessPackageCatalogArrayInput` via:
//
//	AccessPackageCatalogArray{ AccessPackageCatalogArgs{...} }
type AccessPackageCatalogArrayInput interface {
	pulumi.Input

	ToAccessPackageCatalogArrayOutput() AccessPackageCatalogArrayOutput
	ToAccessPackageCatalogArrayOutputWithContext(context.Context) AccessPackageCatalogArrayOutput
}

type AccessPackageCatalogArray []AccessPackageCatalogInput

func (AccessPackageCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessPackageCatalog)(nil)).Elem()
}

func (i AccessPackageCatalogArray) ToAccessPackageCatalogArrayOutput() AccessPackageCatalogArrayOutput {
	return i.ToAccessPackageCatalogArrayOutputWithContext(context.Background())
}

func (i AccessPackageCatalogArray) ToAccessPackageCatalogArrayOutputWithContext(ctx context.Context) AccessPackageCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPackageCatalogArrayOutput)
}

// AccessPackageCatalogMapInput is an input type that accepts AccessPackageCatalogMap and AccessPackageCatalogMapOutput values.
// You can construct a concrete instance of `AccessPackageCatalogMapInput` via:
//
//	AccessPackageCatalogMap{ "key": AccessPackageCatalogArgs{...} }
type AccessPackageCatalogMapInput interface {
	pulumi.Input

	ToAccessPackageCatalogMapOutput() AccessPackageCatalogMapOutput
	ToAccessPackageCatalogMapOutputWithContext(context.Context) AccessPackageCatalogMapOutput
}

type AccessPackageCatalogMap map[string]AccessPackageCatalogInput

func (AccessPackageCatalogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessPackageCatalog)(nil)).Elem()
}

func (i AccessPackageCatalogMap) ToAccessPackageCatalogMapOutput() AccessPackageCatalogMapOutput {
	return i.ToAccessPackageCatalogMapOutputWithContext(context.Background())
}

func (i AccessPackageCatalogMap) ToAccessPackageCatalogMapOutputWithContext(ctx context.Context) AccessPackageCatalogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPackageCatalogMapOutput)
}

type AccessPackageCatalogOutput struct{ *pulumi.OutputState }

func (AccessPackageCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPackageCatalog)(nil)).Elem()
}

func (o AccessPackageCatalogOutput) ToAccessPackageCatalogOutput() AccessPackageCatalogOutput {
	return o
}

func (o AccessPackageCatalogOutput) ToAccessPackageCatalogOutputWithContext(ctx context.Context) AccessPackageCatalogOutput {
	return o
}

// The description of the access package catalog.
func (o AccessPackageCatalogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessPackageCatalog) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The display name of the access package catalog.
func (o AccessPackageCatalogOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessPackageCatalog) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Whether the access packages in this catalog can be requested by users outside the tenant.
func (o AccessPackageCatalogOutput) ExternallyVisible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPackageCatalog) pulumi.BoolPtrOutput { return v.ExternallyVisible }).(pulumi.BoolPtrOutput)
}

// Whether the access packages in this catalog are available for management.
func (o AccessPackageCatalogOutput) Published() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPackageCatalog) pulumi.BoolPtrOutput { return v.Published }).(pulumi.BoolPtrOutput)
}

type AccessPackageCatalogArrayOutput struct{ *pulumi.OutputState }

func (AccessPackageCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessPackageCatalog)(nil)).Elem()
}

func (o AccessPackageCatalogArrayOutput) ToAccessPackageCatalogArrayOutput() AccessPackageCatalogArrayOutput {
	return o
}

func (o AccessPackageCatalogArrayOutput) ToAccessPackageCatalogArrayOutputWithContext(ctx context.Context) AccessPackageCatalogArrayOutput {
	return o
}

func (o AccessPackageCatalogArrayOutput) Index(i pulumi.IntInput) AccessPackageCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessPackageCatalog {
		return vs[0].([]*AccessPackageCatalog)[vs[1].(int)]
	}).(AccessPackageCatalogOutput)
}

type AccessPackageCatalogMapOutput struct{ *pulumi.OutputState }

func (AccessPackageCatalogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessPackageCatalog)(nil)).Elem()
}

func (o AccessPackageCatalogMapOutput) ToAccessPackageCatalogMapOutput() AccessPackageCatalogMapOutput {
	return o
}

func (o AccessPackageCatalogMapOutput) ToAccessPackageCatalogMapOutputWithContext(ctx context.Context) AccessPackageCatalogMapOutput {
	return o
}

func (o AccessPackageCatalogMapOutput) MapIndex(k pulumi.StringInput) AccessPackageCatalogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessPackageCatalog {
		return vs[0].(map[string]*AccessPackageCatalog)[vs[1].(string)]
	}).(AccessPackageCatalogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPackageCatalogInput)(nil)).Elem(), &AccessPackageCatalog{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPackageCatalogArrayInput)(nil)).Elem(), AccessPackageCatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPackageCatalogMapInput)(nil)).Elem(), AccessPackageCatalogMap{})
	pulumi.RegisterOutputType(AccessPackageCatalogOutput{})
	pulumi.RegisterOutputType(AccessPackageCatalogArrayOutput{})
	pulumi.RegisterOutputType(AccessPackageCatalogMapOutput{})
}
