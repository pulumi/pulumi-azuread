// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Application struct {
	pulumi.CustomResourceState

	Api ApplicationApiPtrOutput `pulumi:"api"`
	// Mapping of app role names to UUIDs
	AppRoleIds pulumi.StringMapOutput        `pulumi:"appRoleIds"`
	AppRoles   ApplicationAppRoleArrayOutput `pulumi:"appRoles"`
	// The Application ID (also called Client ID)
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Description of the application as shown to end users
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether this application supports device authentication without a user.
	DeviceOnlyAuthEnabled pulumi.BoolPtrOutput `pulumi:"deviceOnlyAuthEnabled"`
	// Whether Microsoft has disabled the registered application
	DisabledByMicrosoft pulumi.StringOutput `pulumi:"disabledByMicrosoft"`
	// The display name for the application
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a
	// redirect URI
	FallbackPublicClientEnabled pulumi.BoolPtrOutput `pulumi:"fallbackPublicClientEnabled"`
	// Block of features to configure for this application using tags
	FeatureTags ApplicationFeatureTagArrayOutput `pulumi:"featureTags"`
	// Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects
	GroupMembershipClaims pulumi.StringArrayOutput `pulumi:"groupMembershipClaims"`
	// The user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom
	// domain if the application is multi-tenant
	IdentifierUris pulumi.StringArrayOutput `pulumi:"identifierUris"`
	// Base64 encoded logo image in gif, png or jpeg format
	LogoImage pulumi.StringPtrOutput `pulumi:"logoImage"`
	// CDN URL to the application's logo
	LogoUrl pulumi.StringOutput `pulumi:"logoUrl"`
	// URL of the application's marketing page
	MarketingUrl pulumi.StringPtrOutput `pulumi:"marketingUrl"`
	// User-specified notes relevant for the management of the application
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// Mapping of OAuth2.0 permission scope names to UUIDs
	Oauth2PermissionScopeIds pulumi.StringMapOutput `pulumi:"oauth2PermissionScopeIds"`
	// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests.
	Oauth2PostResponseRequired pulumi.BoolPtrOutput `pulumi:"oauth2PostResponseRequired"`
	// The application's object ID
	ObjectId       pulumi.StringOutput                `pulumi:"objectId"`
	OptionalClaims ApplicationOptionalClaimsPtrOutput `pulumi:"optionalClaims"`
	// A list of object IDs of principals that will be granted ownership of the application
	Owners pulumi.StringArrayOutput `pulumi:"owners"`
	// If `true`, will return an error if an existing application is found with the same name
	PreventDuplicateNames pulumi.BoolPtrOutput `pulumi:"preventDuplicateNames"`
	// URL of the application's privacy statement
	PrivacyStatementUrl pulumi.StringPtrOutput           `pulumi:"privacyStatementUrl"`
	PublicClient        ApplicationPublicClientPtrOutput `pulumi:"publicClient"`
	// The verified publisher domain for the application
	PublisherDomain          pulumi.StringOutput                          `pulumi:"publisherDomain"`
	RequiredResourceAccesses ApplicationRequiredResourceAccessArrayOutput `pulumi:"requiredResourceAccesses"`
	// References application or service contact information from a Service or Asset Management database
	ServiceManagementReference pulumi.StringPtrOutput `pulumi:"serviceManagementReference"`
	// The Microsoft account types that are supported for the current application
	SignInAudience        pulumi.StringPtrOutput                    `pulumi:"signInAudience"`
	SinglePageApplication ApplicationSinglePageApplicationPtrOutput `pulumi:"singlePageApplication"`
	// URL of the application's support page
	SupportUrl pulumi.StringPtrOutput `pulumi:"supportUrl"`
	// A set of tags to apply to the application
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unique ID of the application template from which this application is created
	TemplateId pulumi.StringOutput `pulumi:"templateId"`
	// URL of the application's terms of service statement
	TermsOfServiceUrl pulumi.StringPtrOutput  `pulumi:"termsOfServiceUrl"`
	Web               ApplicationWebPtrOutput `pulumi:"web"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource Application
	err := ctx.RegisterResource("azuread:index/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("azuread:index/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	Api *ApplicationApi `pulumi:"api"`
	// Mapping of app role names to UUIDs
	AppRoleIds map[string]string    `pulumi:"appRoleIds"`
	AppRoles   []ApplicationAppRole `pulumi:"appRoles"`
	// The Application ID (also called Client ID)
	ApplicationId *string `pulumi:"applicationId"`
	// Description of the application as shown to end users
	Description *string `pulumi:"description"`
	// Specifies whether this application supports device authentication without a user.
	DeviceOnlyAuthEnabled *bool `pulumi:"deviceOnlyAuthEnabled"`
	// Whether Microsoft has disabled the registered application
	DisabledByMicrosoft *string `pulumi:"disabledByMicrosoft"`
	// The display name for the application
	DisplayName *string `pulumi:"displayName"`
	// Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a
	// redirect URI
	FallbackPublicClientEnabled *bool `pulumi:"fallbackPublicClientEnabled"`
	// Block of features to configure for this application using tags
	FeatureTags []ApplicationFeatureTag `pulumi:"featureTags"`
	// Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects
	GroupMembershipClaims []string `pulumi:"groupMembershipClaims"`
	// The user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom
	// domain if the application is multi-tenant
	IdentifierUris []string `pulumi:"identifierUris"`
	// Base64 encoded logo image in gif, png or jpeg format
	LogoImage *string `pulumi:"logoImage"`
	// CDN URL to the application's logo
	LogoUrl *string `pulumi:"logoUrl"`
	// URL of the application's marketing page
	MarketingUrl *string `pulumi:"marketingUrl"`
	// User-specified notes relevant for the management of the application
	Notes *string `pulumi:"notes"`
	// Mapping of OAuth2.0 permission scope names to UUIDs
	Oauth2PermissionScopeIds map[string]string `pulumi:"oauth2PermissionScopeIds"`
	// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests.
	Oauth2PostResponseRequired *bool `pulumi:"oauth2PostResponseRequired"`
	// The application's object ID
	ObjectId       *string                    `pulumi:"objectId"`
	OptionalClaims *ApplicationOptionalClaims `pulumi:"optionalClaims"`
	// A list of object IDs of principals that will be granted ownership of the application
	Owners []string `pulumi:"owners"`
	// If `true`, will return an error if an existing application is found with the same name
	PreventDuplicateNames *bool `pulumi:"preventDuplicateNames"`
	// URL of the application's privacy statement
	PrivacyStatementUrl *string                  `pulumi:"privacyStatementUrl"`
	PublicClient        *ApplicationPublicClient `pulumi:"publicClient"`
	// The verified publisher domain for the application
	PublisherDomain          *string                             `pulumi:"publisherDomain"`
	RequiredResourceAccesses []ApplicationRequiredResourceAccess `pulumi:"requiredResourceAccesses"`
	// References application or service contact information from a Service or Asset Management database
	ServiceManagementReference *string `pulumi:"serviceManagementReference"`
	// The Microsoft account types that are supported for the current application
	SignInAudience        *string                           `pulumi:"signInAudience"`
	SinglePageApplication *ApplicationSinglePageApplication `pulumi:"singlePageApplication"`
	// URL of the application's support page
	SupportUrl *string `pulumi:"supportUrl"`
	// A set of tags to apply to the application
	Tags []string `pulumi:"tags"`
	// Unique ID of the application template from which this application is created
	TemplateId *string `pulumi:"templateId"`
	// URL of the application's terms of service statement
	TermsOfServiceUrl *string         `pulumi:"termsOfServiceUrl"`
	Web               *ApplicationWeb `pulumi:"web"`
}

type ApplicationState struct {
	Api ApplicationApiPtrInput
	// Mapping of app role names to UUIDs
	AppRoleIds pulumi.StringMapInput
	AppRoles   ApplicationAppRoleArrayInput
	// The Application ID (also called Client ID)
	ApplicationId pulumi.StringPtrInput
	// Description of the application as shown to end users
	Description pulumi.StringPtrInput
	// Specifies whether this application supports device authentication without a user.
	DeviceOnlyAuthEnabled pulumi.BoolPtrInput
	// Whether Microsoft has disabled the registered application
	DisabledByMicrosoft pulumi.StringPtrInput
	// The display name for the application
	DisplayName pulumi.StringPtrInput
	// Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a
	// redirect URI
	FallbackPublicClientEnabled pulumi.BoolPtrInput
	// Block of features to configure for this application using tags
	FeatureTags ApplicationFeatureTagArrayInput
	// Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects
	GroupMembershipClaims pulumi.StringArrayInput
	// The user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom
	// domain if the application is multi-tenant
	IdentifierUris pulumi.StringArrayInput
	// Base64 encoded logo image in gif, png or jpeg format
	LogoImage pulumi.StringPtrInput
	// CDN URL to the application's logo
	LogoUrl pulumi.StringPtrInput
	// URL of the application's marketing page
	MarketingUrl pulumi.StringPtrInput
	// User-specified notes relevant for the management of the application
	Notes pulumi.StringPtrInput
	// Mapping of OAuth2.0 permission scope names to UUIDs
	Oauth2PermissionScopeIds pulumi.StringMapInput
	// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests.
	Oauth2PostResponseRequired pulumi.BoolPtrInput
	// The application's object ID
	ObjectId       pulumi.StringPtrInput
	OptionalClaims ApplicationOptionalClaimsPtrInput
	// A list of object IDs of principals that will be granted ownership of the application
	Owners pulumi.StringArrayInput
	// If `true`, will return an error if an existing application is found with the same name
	PreventDuplicateNames pulumi.BoolPtrInput
	// URL of the application's privacy statement
	PrivacyStatementUrl pulumi.StringPtrInput
	PublicClient        ApplicationPublicClientPtrInput
	// The verified publisher domain for the application
	PublisherDomain          pulumi.StringPtrInput
	RequiredResourceAccesses ApplicationRequiredResourceAccessArrayInput
	// References application or service contact information from a Service or Asset Management database
	ServiceManagementReference pulumi.StringPtrInput
	// The Microsoft account types that are supported for the current application
	SignInAudience        pulumi.StringPtrInput
	SinglePageApplication ApplicationSinglePageApplicationPtrInput
	// URL of the application's support page
	SupportUrl pulumi.StringPtrInput
	// A set of tags to apply to the application
	Tags pulumi.StringArrayInput
	// Unique ID of the application template from which this application is created
	TemplateId pulumi.StringPtrInput
	// URL of the application's terms of service statement
	TermsOfServiceUrl pulumi.StringPtrInput
	Web               ApplicationWebPtrInput
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	Api      *ApplicationApi      `pulumi:"api"`
	AppRoles []ApplicationAppRole `pulumi:"appRoles"`
	// Description of the application as shown to end users
	Description *string `pulumi:"description"`
	// Specifies whether this application supports device authentication without a user.
	DeviceOnlyAuthEnabled *bool `pulumi:"deviceOnlyAuthEnabled"`
	// The display name for the application
	DisplayName string `pulumi:"displayName"`
	// Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a
	// redirect URI
	FallbackPublicClientEnabled *bool `pulumi:"fallbackPublicClientEnabled"`
	// Block of features to configure for this application using tags
	FeatureTags []ApplicationFeatureTag `pulumi:"featureTags"`
	// Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects
	GroupMembershipClaims []string `pulumi:"groupMembershipClaims"`
	// The user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom
	// domain if the application is multi-tenant
	IdentifierUris []string `pulumi:"identifierUris"`
	// Base64 encoded logo image in gif, png or jpeg format
	LogoImage *string `pulumi:"logoImage"`
	// URL of the application's marketing page
	MarketingUrl *string `pulumi:"marketingUrl"`
	// User-specified notes relevant for the management of the application
	Notes *string `pulumi:"notes"`
	// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests.
	Oauth2PostResponseRequired *bool                      `pulumi:"oauth2PostResponseRequired"`
	OptionalClaims             *ApplicationOptionalClaims `pulumi:"optionalClaims"`
	// A list of object IDs of principals that will be granted ownership of the application
	Owners []string `pulumi:"owners"`
	// If `true`, will return an error if an existing application is found with the same name
	PreventDuplicateNames *bool `pulumi:"preventDuplicateNames"`
	// URL of the application's privacy statement
	PrivacyStatementUrl      *string                             `pulumi:"privacyStatementUrl"`
	PublicClient             *ApplicationPublicClient            `pulumi:"publicClient"`
	RequiredResourceAccesses []ApplicationRequiredResourceAccess `pulumi:"requiredResourceAccesses"`
	// References application or service contact information from a Service or Asset Management database
	ServiceManagementReference *string `pulumi:"serviceManagementReference"`
	// The Microsoft account types that are supported for the current application
	SignInAudience        *string                           `pulumi:"signInAudience"`
	SinglePageApplication *ApplicationSinglePageApplication `pulumi:"singlePageApplication"`
	// URL of the application's support page
	SupportUrl *string `pulumi:"supportUrl"`
	// A set of tags to apply to the application
	Tags []string `pulumi:"tags"`
	// Unique ID of the application template from which this application is created
	TemplateId *string `pulumi:"templateId"`
	// URL of the application's terms of service statement
	TermsOfServiceUrl *string         `pulumi:"termsOfServiceUrl"`
	Web               *ApplicationWeb `pulumi:"web"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	Api      ApplicationApiPtrInput
	AppRoles ApplicationAppRoleArrayInput
	// Description of the application as shown to end users
	Description pulumi.StringPtrInput
	// Specifies whether this application supports device authentication without a user.
	DeviceOnlyAuthEnabled pulumi.BoolPtrInput
	// The display name for the application
	DisplayName pulumi.StringInput
	// Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a
	// redirect URI
	FallbackPublicClientEnabled pulumi.BoolPtrInput
	// Block of features to configure for this application using tags
	FeatureTags ApplicationFeatureTagArrayInput
	// Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects
	GroupMembershipClaims pulumi.StringArrayInput
	// The user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom
	// domain if the application is multi-tenant
	IdentifierUris pulumi.StringArrayInput
	// Base64 encoded logo image in gif, png or jpeg format
	LogoImage pulumi.StringPtrInput
	// URL of the application's marketing page
	MarketingUrl pulumi.StringPtrInput
	// User-specified notes relevant for the management of the application
	Notes pulumi.StringPtrInput
	// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests.
	Oauth2PostResponseRequired pulumi.BoolPtrInput
	OptionalClaims             ApplicationOptionalClaimsPtrInput
	// A list of object IDs of principals that will be granted ownership of the application
	Owners pulumi.StringArrayInput
	// If `true`, will return an error if an existing application is found with the same name
	PreventDuplicateNames pulumi.BoolPtrInput
	// URL of the application's privacy statement
	PrivacyStatementUrl      pulumi.StringPtrInput
	PublicClient             ApplicationPublicClientPtrInput
	RequiredResourceAccesses ApplicationRequiredResourceAccessArrayInput
	// References application or service contact information from a Service or Asset Management database
	ServiceManagementReference pulumi.StringPtrInput
	// The Microsoft account types that are supported for the current application
	SignInAudience        pulumi.StringPtrInput
	SinglePageApplication ApplicationSinglePageApplicationPtrInput
	// URL of the application's support page
	SupportUrl pulumi.StringPtrInput
	// A set of tags to apply to the application
	Tags pulumi.StringArrayInput
	// Unique ID of the application template from which this application is created
	TemplateId pulumi.StringPtrInput
	// URL of the application's terms of service statement
	TermsOfServiceUrl pulumi.StringPtrInput
	Web               ApplicationWebPtrInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

// ApplicationArrayInput is an input type that accepts ApplicationArray and ApplicationArrayOutput values.
// You can construct a concrete instance of `ApplicationArrayInput` via:
//
//	ApplicationArray{ ApplicationArgs{...} }
type ApplicationArrayInput interface {
	pulumi.Input

	ToApplicationArrayOutput() ApplicationArrayOutput
	ToApplicationArrayOutputWithContext(context.Context) ApplicationArrayOutput
}

type ApplicationArray []ApplicationInput

func (ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Application)(nil)).Elem()
}

func (i ApplicationArray) ToApplicationArrayOutput() ApplicationArrayOutput {
	return i.ToApplicationArrayOutputWithContext(context.Background())
}

func (i ApplicationArray) ToApplicationArrayOutputWithContext(ctx context.Context) ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArrayOutput)
}

// ApplicationMapInput is an input type that accepts ApplicationMap and ApplicationMapOutput values.
// You can construct a concrete instance of `ApplicationMapInput` via:
//
//	ApplicationMap{ "key": ApplicationArgs{...} }
type ApplicationMapInput interface {
	pulumi.Input

	ToApplicationMapOutput() ApplicationMapOutput
	ToApplicationMapOutputWithContext(context.Context) ApplicationMapOutput
}

type ApplicationMap map[string]ApplicationInput

func (ApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Application)(nil)).Elem()
}

func (i ApplicationMap) ToApplicationMapOutput() ApplicationMapOutput {
	return i.ToApplicationMapOutputWithContext(context.Background())
}

func (i ApplicationMap) ToApplicationMapOutputWithContext(ctx context.Context) ApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMapOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) Api() ApplicationApiPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationApiPtrOutput { return v.Api }).(ApplicationApiPtrOutput)
}

// Mapping of app role names to UUIDs
func (o ApplicationOutput) AppRoleIds() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Application) pulumi.StringMapOutput { return v.AppRoleIds }).(pulumi.StringMapOutput)
}

func (o ApplicationOutput) AppRoles() ApplicationAppRoleArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationAppRoleArrayOutput { return v.AppRoles }).(ApplicationAppRoleArrayOutput)
}

// The Application ID (also called Client ID)
func (o ApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Description of the application as shown to end users
func (o ApplicationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether this application supports device authentication without a user.
func (o ApplicationOutput) DeviceOnlyAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolPtrOutput { return v.DeviceOnlyAuthEnabled }).(pulumi.BoolPtrOutput)
}

// Whether Microsoft has disabled the registered application
func (o ApplicationOutput) DisabledByMicrosoft() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.DisabledByMicrosoft }).(pulumi.StringOutput)
}

// The display name for the application
func (o ApplicationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Specifies whether the application is a public client. Appropriate for apps using token grant flows that don't use a
// redirect URI
func (o ApplicationOutput) FallbackPublicClientEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolPtrOutput { return v.FallbackPublicClientEnabled }).(pulumi.BoolPtrOutput)
}

// Block of features to configure for this application using tags
func (o ApplicationOutput) FeatureTags() ApplicationFeatureTagArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationFeatureTagArrayOutput { return v.FeatureTags }).(ApplicationFeatureTagArrayOutput)
}

// Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects
func (o ApplicationOutput) GroupMembershipClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.GroupMembershipClaims }).(pulumi.StringArrayOutput)
}

// The user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom
// domain if the application is multi-tenant
func (o ApplicationOutput) IdentifierUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.IdentifierUris }).(pulumi.StringArrayOutput)
}

// Base64 encoded logo image in gif, png or jpeg format
func (o ApplicationOutput) LogoImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.LogoImage }).(pulumi.StringPtrOutput)
}

// CDN URL to the application's logo
func (o ApplicationOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.LogoUrl }).(pulumi.StringOutput)
}

// URL of the application's marketing page
func (o ApplicationOutput) MarketingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.MarketingUrl }).(pulumi.StringPtrOutput)
}

// User-specified notes relevant for the management of the application
func (o ApplicationOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// Mapping of OAuth2.0 permission scope names to UUIDs
func (o ApplicationOutput) Oauth2PermissionScopeIds() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Application) pulumi.StringMapOutput { return v.Oauth2PermissionScopeIds }).(pulumi.StringMapOutput)
}

// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests.
func (o ApplicationOutput) Oauth2PostResponseRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolPtrOutput { return v.Oauth2PostResponseRequired }).(pulumi.BoolPtrOutput)
}

// The application's object ID
func (o ApplicationOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ObjectId }).(pulumi.StringOutput)
}

func (o ApplicationOutput) OptionalClaims() ApplicationOptionalClaimsPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationOptionalClaimsPtrOutput { return v.OptionalClaims }).(ApplicationOptionalClaimsPtrOutput)
}

// A list of object IDs of principals that will be granted ownership of the application
func (o ApplicationOutput) Owners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.Owners }).(pulumi.StringArrayOutput)
}

// If `true`, will return an error if an existing application is found with the same name
func (o ApplicationOutput) PreventDuplicateNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolPtrOutput { return v.PreventDuplicateNames }).(pulumi.BoolPtrOutput)
}

// URL of the application's privacy statement
func (o ApplicationOutput) PrivacyStatementUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.PrivacyStatementUrl }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) PublicClient() ApplicationPublicClientPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationPublicClientPtrOutput { return v.PublicClient }).(ApplicationPublicClientPtrOutput)
}

// The verified publisher domain for the application
func (o ApplicationOutput) PublisherDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.PublisherDomain }).(pulumi.StringOutput)
}

func (o ApplicationOutput) RequiredResourceAccesses() ApplicationRequiredResourceAccessArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationRequiredResourceAccessArrayOutput { return v.RequiredResourceAccesses }).(ApplicationRequiredResourceAccessArrayOutput)
}

// References application or service contact information from a Service or Asset Management database
func (o ApplicationOutput) ServiceManagementReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.ServiceManagementReference }).(pulumi.StringPtrOutput)
}

// The Microsoft account types that are supported for the current application
func (o ApplicationOutput) SignInAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.SignInAudience }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) SinglePageApplication() ApplicationSinglePageApplicationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationSinglePageApplicationPtrOutput { return v.SinglePageApplication }).(ApplicationSinglePageApplicationPtrOutput)
}

// URL of the application's support page
func (o ApplicationOutput) SupportUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.SupportUrl }).(pulumi.StringPtrOutput)
}

// A set of tags to apply to the application
func (o ApplicationOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unique ID of the application template from which this application is created
func (o ApplicationOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.TemplateId }).(pulumi.StringOutput)
}

// URL of the application's terms of service statement
func (o ApplicationOutput) TermsOfServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.TermsOfServiceUrl }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) Web() ApplicationWebPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationWebPtrOutput { return v.Web }).(ApplicationWebPtrOutput)
}

type ApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Application)(nil)).Elem()
}

func (o ApplicationArrayOutput) ToApplicationArrayOutput() ApplicationArrayOutput {
	return o
}

func (o ApplicationArrayOutput) ToApplicationArrayOutputWithContext(ctx context.Context) ApplicationArrayOutput {
	return o
}

func (o ApplicationArrayOutput) Index(i pulumi.IntInput) ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Application {
		return vs[0].([]*Application)[vs[1].(int)]
	}).(ApplicationOutput)
}

type ApplicationMapOutput struct{ *pulumi.OutputState }

func (ApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Application)(nil)).Elem()
}

func (o ApplicationMapOutput) ToApplicationMapOutput() ApplicationMapOutput {
	return o
}

func (o ApplicationMapOutput) ToApplicationMapOutputWithContext(ctx context.Context) ApplicationMapOutput {
	return o
}

func (o ApplicationMapOutput) MapIndex(k pulumi.StringInput) ApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Application {
		return vs[0].(map[string]*Application)[vs[1].(string)]
	}).(ApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInput)(nil)).Elem(), &Application{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationArrayInput)(nil)).Elem(), ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMapInput)(nil)).Elem(), ApplicationMap{})
	pulumi.RegisterOutputType(ApplicationOutput{})
	pulumi.RegisterOutputType(ApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationMapOutput{})
}
