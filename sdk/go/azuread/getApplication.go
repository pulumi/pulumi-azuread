// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Application within Azure Active Directory.
//
// > **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all (or owned by) applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "My First AzureAD Application"
// 		example, err := azuread.LookupApplication(ctx, &azuread.LookupApplicationArgs{
// 			DisplayName: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("azureAdObjectId", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	var rv LookupApplicationResult
	err := ctx.Invoke("azuread:index/getApplication:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplication.
type LookupApplicationArgs struct {
	// Specifies the Application ID (also called Client ID).
	ApplicationId *string `pulumi:"applicationId"`
	// Specifies the display name of the application.
	DisplayName *string `pulumi:"displayName"`
	// The name of the optional claim.
	//
	// Deprecated: This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
	Name *string `pulumi:"name"`
	// (**Deprecated**) A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by a `oauth2Permission` block as documented below.
	//
	// Deprecated: [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
	Oauth2Permissions []GetApplicationOauth2Permission `pulumi:"oauth2Permissions"`
	// Specifies the Object ID of the application.
	ObjectId *string `pulumi:"objectId"`
	// A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
	OptionalClaims *GetApplicationOptionalClaims `pulumi:"optionalClaims"`
	// A `web` block as documented below.
	Web *GetApplicationWeb `pulumi:"web"`
}

// A collection of values returned by getApplication.
type LookupApplicationResult struct {
	// An `api` block as documented below.
	Apis []GetApplicationApi `pulumi:"apis"`
	// A collection of `appRole` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
	AppRoles []GetApplicationAppRoleType `pulumi:"appRoles"`
	// the Application ID (also called Client ID).
	ApplicationId string `pulumi:"applicationId"`
	// (**Deprecated**) Is this Azure AD Application available to other tenants?
	//
	// Deprecated: [NOTE] This attribute will be replaced by a new property `sign_in_audience` in version 2.0 of the AzureAD provider
	AvailableToOtherTenants bool `pulumi:"availableToOtherTenants"`
	// Display name for the app role that appears during app role assignment and in consent experiences.
	DisplayName string `pulumi:"displayName"`
	// The fallback application type as public client, such as an installed application running on a mobile device.
	FallbackPublicClientEnabled bool `pulumi:"fallbackPublicClientEnabled"`
	// The `groups` claim issued in a user or OAuth 2.0 access token that the app expects.
	GroupMembershipClaims string `pulumi:"groupMembershipClaims"`
	// (**Deprecated**) The URL to the application's home page. This property is deprecated and has been replaced by the `homepageUrl` property in the `web` block.
	//
	// Deprecated: [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
	Homepage string `pulumi:"homepage"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
	IdentifierUris []string `pulumi:"identifierUris"`
	// The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
	//
	// Deprecated: [NOTE] This attribute will be moved into the `web` block in version 2.0 of the AzureAD provider
	LogoutUrl string `pulumi:"logoutUrl"`
	// The name of the optional claim.
	//
	// Deprecated: This property has been renamed to `display_name` and will be removed in version 2.0 of the AzureAD provider
	Name string `pulumi:"name"`
	// (**Deprecated**) Does this Azure AD Application allow OAuth2.0 implicit flow tokens?
	//
	// Deprecated: [NOTE] This attribute will be moved to the `implicit_grant` block and renamed to `access_token_issuance_enabled` in version 2.0 of the AzureAD provider
	Oauth2AllowImplicitFlow bool `pulumi:"oauth2AllowImplicitFlow"`
	// (**Deprecated**) A collection of OAuth 2.0 permission scopes that the web API (resource) app exposes to client apps. Each permission is covered by a `oauth2Permission` block as documented below.
	//
	// Deprecated: [NOTE] The `oauth2_permissions` block has been renamed to `oauth2_permission_scopes` and moved to the `api` block. `oauth2_permissions` will be removed in version 2.0 of the AzureAD provider.
	Oauth2Permissions []GetApplicationOauth2Permission `pulumi:"oauth2Permissions"`
	// The application's Object ID.
	ObjectId string `pulumi:"objectId"`
	// A collection of `accessToken` or `idToken` blocks as documented below which list the optional claims configured for each token type. For more information see https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims
	OptionalClaims *GetApplicationOptionalClaims `pulumi:"optionalClaims"`
	// A list of Object IDs for principals that are assigned ownership of the application.
	Owners []string `pulumi:"owners"`
	// (**Deprecated**) A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. This property is deprecated and has been replaced by the `redirectUris` property in the `web` block.
	//
	// Deprecated: [NOTE] This attribute will be replaced by a new attribute `redirect_uris` in the `web` block in version 2.0 of the AzureAD provider
	ReplyUrls []string `pulumi:"replyUrls"`
	// A collection of `requiredResourceAccess` blocks as documented below.
	RequiredResourceAccesses []GetApplicationRequiredResourceAccess `pulumi:"requiredResourceAccesses"`
	// The Microsoft account types that are supported for the current application. One of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.
	SignInAudience string `pulumi:"signInAudience"`
	// Specifies whether the `id` property references an `OAuth2Permission` or an `AppRole`. Possible values are `Scope` or `Role`.
	//
	// Deprecated: [NOTE] This legacy property is deprecated and will be removed in version 2.0 of the AzureAD provider
	Type string `pulumi:"type"`
	// A `web` block as documented below.
	Web GetApplicationWeb `pulumi:"web"`
}
