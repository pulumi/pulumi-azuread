// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Application within Azure Active Directory.
//
// ## API Permissions
//
// The following API permissions are required in order to use this data source.
//
// When authenticated with a service principal, this data source requires one of the following application roles: `Application.Read.All` or `Directory.Read.All`
//
// When authenticated with a user principal, this data source does not require any additional roles.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azuread/sdk/v4/go/azuread"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "My First AzureAD Application"
// 		example, err := azuread.LookupApplication(ctx, &GetApplicationArgs{
// 			DisplayName: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("applicationObjectId", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	var rv LookupApplicationResult
	err := ctx.Invoke("azuread:index/getApplication:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplication.
type LookupApplicationArgs struct {
	// Specifies the Application ID (also called Client ID).
	ApplicationId *string `pulumi:"applicationId"`
	// Specifies the display name of the application.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the Object ID of the application.
	ObjectId *string `pulumi:"objectId"`
}

// A collection of values returned by getApplication.
type LookupApplicationResult struct {
	// An `api` block as documented below.
	Apis []GetApplicationApi `pulumi:"apis"`
	// A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.
	AppRoleIds map[string]string `pulumi:"appRoleIds"`
	// A collection of `appRole` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
	AppRoles []GetApplicationAppRole `pulumi:"appRoles"`
	// The Application ID (also called Client ID).
	ApplicationId string `pulumi:"applicationId"`
	// Specifies whether this application supports device authentication without a user.
	DeviceOnlyAuthEnabled bool `pulumi:"deviceOnlyAuthEnabled"`
	// Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. `DisabledDueToViolationOfServicesAgreement`
	DisabledByMicrosoft string `pulumi:"disabledByMicrosoft"`
	// Display name for the app role that appears during app role assignment and in consent experiences.
	DisplayName string `pulumi:"displayName"`
	// The fallback application type as public client, such as an installed application running on a mobile device.
	FallbackPublicClientEnabled bool `pulumi:"fallbackPublicClientEnabled"`
	// The `groups` claim issued in a user or OAuth 2.0 access token that the app expects.
	GroupMembershipClaims []string `pulumi:"groupMembershipClaims"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
	IdentifierUris []string `pulumi:"identifierUris"`
	// CDN URL to the application's logo.
	LogoUrl string `pulumi:"logoUrl"`
	// URL of the application's marketing page.
	MarketingUrl string `pulumi:"marketingUrl"`
	// A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.
	Oauth2PermissionScopeIds map[string]string `pulumi:"oauth2PermissionScopeIds"`
	// Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. When `false`, only GET requests are allowed.
	Oauth2PostResponseRequired bool `pulumi:"oauth2PostResponseRequired"`
	// The application's object ID.
	ObjectId string `pulumi:"objectId"`
	// An `optionalClaims` block as documented below.
	OptionalClaims []GetApplicationOptionalClaim `pulumi:"optionalClaims"`
	// A list of object IDs of principals that are assigned ownership of the application.
	Owners []string `pulumi:"owners"`
	// URL of the application's privacy statement.
	PrivacyStatementUrl string `pulumi:"privacyStatementUrl"`
	// A `publicClient` block as documented below.
	PublicClients []GetApplicationPublicClient `pulumi:"publicClients"`
	// The verified publisher domain for the application.
	PublisherDomain string `pulumi:"publisherDomain"`
	// A collection of `requiredResourceAccess` blocks as documented below.
	RequiredResourceAccesses []GetApplicationRequiredResourceAccess `pulumi:"requiredResourceAccesses"`
	// The Microsoft account types that are supported for the current application. One of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`.
	SignInAudience string `pulumi:"signInAudience"`
	// A `singlePageApplication` block as documented below.
	SinglePageApplications []GetApplicationSinglePageApplication `pulumi:"singlePageApplications"`
	// URL of the application's support page.
	SupportUrl string `pulumi:"supportUrl"`
	// URL of the application's terms of service statement.
	TermsOfServiceUrl string `pulumi:"termsOfServiceUrl"`
	// A `web` block as documented below.
	Webs []GetApplicationWeb `pulumi:"webs"`
}
