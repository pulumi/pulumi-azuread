// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The provider type for the azuread package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}
	if args.ClientCertificatePassword == nil {
		args.ClientCertificatePassword = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_CLIENT_CERTIFICATE_PASSWORD").(string))
	}
	if args.ClientCertificatePath == nil {
		args.ClientCertificatePath = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_CLIENT_CERTIFICATE_PATH").(string))
	}
	if args.ClientId == nil {
		args.ClientId = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_CLIENT_ID").(string))
	}
	if args.ClientSecret == nil {
		args.ClientSecret = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_CLIENT_SECRET").(string))
	}
	if args.Environment == nil {
		args.Environment = pulumi.StringPtr(getEnvOrDefault("public", nil, "ARM_ENVIRONMENT").(string))
	}
	if args.MsiEndpoint == nil {
		args.MsiEndpoint = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_MSI_ENDPOINT").(string))
	}
	if args.SubscriptionId == nil {
		args.SubscriptionId = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_SUBSCRIPTION_ID").(string))
	}
	if args.TenantId == nil {
		args.TenantId = pulumi.StringPtr(getEnvOrDefault("", nil, "ARM_TENANT_ID").(string))
	}
	if args.UseMsi == nil {
		args.UseMsi = pulumi.BoolPtr(getEnvOrDefault(false, parseEnvBool, "ARM_USE_MSI").(bool))
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:azuread", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	ClientCertificatePassword *string `pulumi:"clientCertificatePassword"`
	ClientCertificatePath     *string `pulumi:"clientCertificatePath"`
	ClientId                  *string `pulumi:"clientId"`
	ClientSecret              *string `pulumi:"clientSecret"`
	Environment               *string `pulumi:"environment"`
	MsiEndpoint               *string `pulumi:"msiEndpoint"`
	SubscriptionId            *string `pulumi:"subscriptionId"`
	TenantId                  *string `pulumi:"tenantId"`
	UseMsi                    *bool   `pulumi:"useMsi"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	ClientCertificatePassword pulumi.StringPtrInput
	ClientCertificatePath     pulumi.StringPtrInput
	ClientId                  pulumi.StringPtrInput
	ClientSecret              pulumi.StringPtrInput
	Environment               pulumi.StringPtrInput
	MsiEndpoint               pulumi.StringPtrInput
	SubscriptionId            pulumi.StringPtrInput
	TenantId                  pulumi.StringPtrInput
	UseMsi                    pulumi.BoolPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}
