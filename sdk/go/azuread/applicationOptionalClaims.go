// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuread

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApplicationRegistration, err := azuread.NewApplicationRegistration(ctx, "exampleApplicationRegistration", &azuread.ApplicationRegistrationArgs{
//				DisplayName: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuread.NewApplicationOptionalClaims(ctx, "exampleApplicationOptionalClaims", &azuread.ApplicationOptionalClaimsArgs{
//				ApplicationId: exampleApplicationRegistration.ID(),
//				AccessTokens: azuread.ApplicationOptionalClaimsAccessTokenArray{
//					&azuread.ApplicationOptionalClaimsAccessTokenArgs{
//						Name: pulumi.String("myclaim"),
//					},
//					&azuread.ApplicationOptionalClaimsAccessTokenArgs{
//						Name: pulumi.String("otherclaim"),
//					},
//				},
//				IdTokens: azuread.ApplicationOptionalClaimsIdTokenArray{
//					&azuread.ApplicationOptionalClaimsIdTokenArgs{
//						Name:      pulumi.String("userclaim"),
//						Source:    pulumi.String("user"),
//						Essential: pulumi.Bool(true),
//						AdditionalProperties: pulumi.StringArray{
//							pulumi.String("emit_as_roles"),
//						},
//					},
//				},
//				Saml2Tokens: azuread.ApplicationOptionalClaimsSaml2TokenArray{
//					&azuread.ApplicationOptionalClaimsSaml2TokenArgs{
//						Name: pulumi.String("samlexample"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Application Optional Claims can be imported using the object ID of the application, in the following format.
//
// ```sh
// $ pulumi import azuread:index/applicationOptionalClaims:ApplicationOptionalClaims example /applications/00000000-0000-0000-0000-000000000000
// ```
type ApplicationOptionalClaims struct {
	pulumi.CustomResourceState

	// One or more `accessToken` blocks as documented below.
	AccessTokens ApplicationOptionalClaimsAccessTokenArrayOutput `pulumi:"accessTokens"`
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// One or more `idToken` blocks as documented below.
	IdTokens ApplicationOptionalClaimsIdTokenArrayOutput `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	//
	// > At least one of `accessToken`, `idToken` or `saml2Token` must be specified
	Saml2Tokens ApplicationOptionalClaimsSaml2TokenArrayOutput `pulumi:"saml2Tokens"`
}

// NewApplicationOptionalClaims registers a new resource with the given unique name, arguments, and options.
func NewApplicationOptionalClaims(ctx *pulumi.Context,
	name string, args *ApplicationOptionalClaimsArgs, opts ...pulumi.ResourceOption) (*ApplicationOptionalClaims, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationOptionalClaims
	err := ctx.RegisterResource("azuread:index/applicationOptionalClaims:ApplicationOptionalClaims", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationOptionalClaims gets an existing ApplicationOptionalClaims resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationOptionalClaims(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationOptionalClaimsState, opts ...pulumi.ResourceOption) (*ApplicationOptionalClaims, error) {
	var resource ApplicationOptionalClaims
	err := ctx.ReadResource("azuread:index/applicationOptionalClaims:ApplicationOptionalClaims", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationOptionalClaims resources.
type applicationOptionalClaimsState struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens []ApplicationOptionalClaimsAccessToken `pulumi:"accessTokens"`
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId *string `pulumi:"applicationId"`
	// One or more `idToken` blocks as documented below.
	IdTokens []ApplicationOptionalClaimsIdToken `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	//
	// > At least one of `accessToken`, `idToken` or `saml2Token` must be specified
	Saml2Tokens []ApplicationOptionalClaimsSaml2Token `pulumi:"saml2Tokens"`
}

type ApplicationOptionalClaimsState struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens ApplicationOptionalClaimsAccessTokenArrayInput
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringPtrInput
	// One or more `idToken` blocks as documented below.
	IdTokens ApplicationOptionalClaimsIdTokenArrayInput
	// One or more `saml2Token` blocks as documented below.
	//
	// > At least one of `accessToken`, `idToken` or `saml2Token` must be specified
	Saml2Tokens ApplicationOptionalClaimsSaml2TokenArrayInput
}

func (ApplicationOptionalClaimsState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationOptionalClaimsState)(nil)).Elem()
}

type applicationOptionalClaimsArgs struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens []ApplicationOptionalClaimsAccessToken `pulumi:"accessTokens"`
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId string `pulumi:"applicationId"`
	// One or more `idToken` blocks as documented below.
	IdTokens []ApplicationOptionalClaimsIdToken `pulumi:"idTokens"`
	// One or more `saml2Token` blocks as documented below.
	//
	// > At least one of `accessToken`, `idToken` or `saml2Token` must be specified
	Saml2Tokens []ApplicationOptionalClaimsSaml2Token `pulumi:"saml2Tokens"`
}

// The set of arguments for constructing a ApplicationOptionalClaims resource.
type ApplicationOptionalClaimsArgs struct {
	// One or more `accessToken` blocks as documented below.
	AccessTokens ApplicationOptionalClaimsAccessTokenArrayInput
	// The resource ID of the application registration. Changing this forces a new resource to be created.
	ApplicationId pulumi.StringInput
	// One or more `idToken` blocks as documented below.
	IdTokens ApplicationOptionalClaimsIdTokenArrayInput
	// One or more `saml2Token` blocks as documented below.
	//
	// > At least one of `accessToken`, `idToken` or `saml2Token` must be specified
	Saml2Tokens ApplicationOptionalClaimsSaml2TokenArrayInput
}

func (ApplicationOptionalClaimsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationOptionalClaimsArgs)(nil)).Elem()
}

type ApplicationOptionalClaimsInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsOutput() ApplicationOptionalClaimsOutput
	ToApplicationOptionalClaimsOutputWithContext(ctx context.Context) ApplicationOptionalClaimsOutput
}

func (*ApplicationOptionalClaims) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOptionalClaims)(nil)).Elem()
}

func (i *ApplicationOptionalClaims) ToApplicationOptionalClaimsOutput() ApplicationOptionalClaimsOutput {
	return i.ToApplicationOptionalClaimsOutputWithContext(context.Background())
}

func (i *ApplicationOptionalClaims) ToApplicationOptionalClaimsOutputWithContext(ctx context.Context) ApplicationOptionalClaimsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsOutput)
}

// ApplicationOptionalClaimsArrayInput is an input type that accepts ApplicationOptionalClaimsArray and ApplicationOptionalClaimsArrayOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsArrayInput` via:
//
//	ApplicationOptionalClaimsArray{ ApplicationOptionalClaimsArgs{...} }
type ApplicationOptionalClaimsArrayInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsArrayOutput() ApplicationOptionalClaimsArrayOutput
	ToApplicationOptionalClaimsArrayOutputWithContext(context.Context) ApplicationOptionalClaimsArrayOutput
}

type ApplicationOptionalClaimsArray []ApplicationOptionalClaimsInput

func (ApplicationOptionalClaimsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationOptionalClaims)(nil)).Elem()
}

func (i ApplicationOptionalClaimsArray) ToApplicationOptionalClaimsArrayOutput() ApplicationOptionalClaimsArrayOutput {
	return i.ToApplicationOptionalClaimsArrayOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsArray) ToApplicationOptionalClaimsArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsArrayOutput)
}

// ApplicationOptionalClaimsMapInput is an input type that accepts ApplicationOptionalClaimsMap and ApplicationOptionalClaimsMapOutput values.
// You can construct a concrete instance of `ApplicationOptionalClaimsMapInput` via:
//
//	ApplicationOptionalClaimsMap{ "key": ApplicationOptionalClaimsArgs{...} }
type ApplicationOptionalClaimsMapInput interface {
	pulumi.Input

	ToApplicationOptionalClaimsMapOutput() ApplicationOptionalClaimsMapOutput
	ToApplicationOptionalClaimsMapOutputWithContext(context.Context) ApplicationOptionalClaimsMapOutput
}

type ApplicationOptionalClaimsMap map[string]ApplicationOptionalClaimsInput

func (ApplicationOptionalClaimsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationOptionalClaims)(nil)).Elem()
}

func (i ApplicationOptionalClaimsMap) ToApplicationOptionalClaimsMapOutput() ApplicationOptionalClaimsMapOutput {
	return i.ToApplicationOptionalClaimsMapOutputWithContext(context.Background())
}

func (i ApplicationOptionalClaimsMap) ToApplicationOptionalClaimsMapOutputWithContext(ctx context.Context) ApplicationOptionalClaimsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOptionalClaimsMapOutput)
}

type ApplicationOptionalClaimsOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOptionalClaims)(nil)).Elem()
}

func (o ApplicationOptionalClaimsOutput) ToApplicationOptionalClaimsOutput() ApplicationOptionalClaimsOutput {
	return o
}

func (o ApplicationOptionalClaimsOutput) ToApplicationOptionalClaimsOutputWithContext(ctx context.Context) ApplicationOptionalClaimsOutput {
	return o
}

// One or more `accessToken` blocks as documented below.
func (o ApplicationOptionalClaimsOutput) AccessTokens() ApplicationOptionalClaimsAccessTokenArrayOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) ApplicationOptionalClaimsAccessTokenArrayOutput {
		return v.AccessTokens
	}).(ApplicationOptionalClaimsAccessTokenArrayOutput)
}

// The resource ID of the application registration. Changing this forces a new resource to be created.
func (o ApplicationOptionalClaimsOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// One or more `idToken` blocks as documented below.
func (o ApplicationOptionalClaimsOutput) IdTokens() ApplicationOptionalClaimsIdTokenArrayOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) ApplicationOptionalClaimsIdTokenArrayOutput { return v.IdTokens }).(ApplicationOptionalClaimsIdTokenArrayOutput)
}

// One or more `saml2Token` blocks as documented below.
//
// > At least one of `accessToken`, `idToken` or `saml2Token` must be specified
func (o ApplicationOptionalClaimsOutput) Saml2Tokens() ApplicationOptionalClaimsSaml2TokenArrayOutput {
	return o.ApplyT(func(v *ApplicationOptionalClaims) ApplicationOptionalClaimsSaml2TokenArrayOutput {
		return v.Saml2Tokens
	}).(ApplicationOptionalClaimsSaml2TokenArrayOutput)
}

type ApplicationOptionalClaimsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationOptionalClaims)(nil)).Elem()
}

func (o ApplicationOptionalClaimsArrayOutput) ToApplicationOptionalClaimsArrayOutput() ApplicationOptionalClaimsArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsArrayOutput) ToApplicationOptionalClaimsArrayOutputWithContext(ctx context.Context) ApplicationOptionalClaimsArrayOutput {
	return o
}

func (o ApplicationOptionalClaimsArrayOutput) Index(i pulumi.IntInput) ApplicationOptionalClaimsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationOptionalClaims {
		return vs[0].([]*ApplicationOptionalClaims)[vs[1].(int)]
	}).(ApplicationOptionalClaimsOutput)
}

type ApplicationOptionalClaimsMapOutput struct{ *pulumi.OutputState }

func (ApplicationOptionalClaimsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationOptionalClaims)(nil)).Elem()
}

func (o ApplicationOptionalClaimsMapOutput) ToApplicationOptionalClaimsMapOutput() ApplicationOptionalClaimsMapOutput {
	return o
}

func (o ApplicationOptionalClaimsMapOutput) ToApplicationOptionalClaimsMapOutputWithContext(ctx context.Context) ApplicationOptionalClaimsMapOutput {
	return o
}

func (o ApplicationOptionalClaimsMapOutput) MapIndex(k pulumi.StringInput) ApplicationOptionalClaimsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationOptionalClaims {
		return vs[0].(map[string]*ApplicationOptionalClaims)[vs[1].(string)]
	}).(ApplicationOptionalClaimsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsInput)(nil)).Elem(), &ApplicationOptionalClaims{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsArrayInput)(nil)).Elem(), ApplicationOptionalClaimsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationOptionalClaimsMapInput)(nil)).Elem(), ApplicationOptionalClaimsMap{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationOptionalClaimsMapOutput{})
}
