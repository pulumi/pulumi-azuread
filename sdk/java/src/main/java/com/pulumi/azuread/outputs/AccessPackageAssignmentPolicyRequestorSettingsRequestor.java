// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessPackageAssignmentPolicyRequestorSettingsRequestor {
    /**
     * @return For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     * 
     */
    private @Nullable Boolean backup;
    /**
     * @return The object ID of the subject
     * 
     */
    private @Nullable String objectId;
    /**
     * @return Type of users
     * 
     */
    private String subjectType;

    private AccessPackageAssignmentPolicyRequestorSettingsRequestor() {}
    /**
     * @return For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     * 
     */
    public Optional<Boolean> backup() {
        return Optional.ofNullable(this.backup);
    }
    /**
     * @return The object ID of the subject
     * 
     */
    public Optional<String> objectId() {
        return Optional.ofNullable(this.objectId);
    }
    /**
     * @return Type of users
     * 
     */
    public String subjectType() {
        return this.subjectType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPackageAssignmentPolicyRequestorSettingsRequestor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean backup;
        private @Nullable String objectId;
        private String subjectType;
        public Builder() {}
        public Builder(AccessPackageAssignmentPolicyRequestorSettingsRequestor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backup = defaults.backup;
    	      this.objectId = defaults.objectId;
    	      this.subjectType = defaults.subjectType;
        }

        @CustomType.Setter
        public Builder backup(@Nullable Boolean backup) {

            this.backup = backup;
            return this;
        }
        @CustomType.Setter
        public Builder objectId(@Nullable String objectId) {

            this.objectId = objectId;
            return this;
        }
        @CustomType.Setter
        public Builder subjectType(String subjectType) {
            if (subjectType == null) {
              throw new MissingRequiredPropertyException("AccessPackageAssignmentPolicyRequestorSettingsRequestor", "subjectType");
            }
            this.subjectType = subjectType;
            return this;
        }
        public AccessPackageAssignmentPolicyRequestorSettingsRequestor build() {
            final var _resultValue = new AccessPackageAssignmentPolicyRequestorSettingsRequestor();
            _resultValue.backup = backup;
            _resultValue.objectId = objectId;
            _resultValue.subjectType = subjectType;
            return _resultValue;
        }
    }
}
