// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.GroupRoleManagementPolicyNotificationRulesActiveAssignmentsArgs;
import com.pulumi.azuread.inputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsArgs;
import com.pulumi.azuread.inputs.GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupRoleManagementPolicyNotificationRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupRoleManagementPolicyNotificationRulesArgs Empty = new GroupRoleManagementPolicyNotificationRulesArgs();

    /**
     * A `notificationTarget` block as defined below to configure notfications on active role assignments.
     * 
     */
    @Import(name="activeAssignments")
    private @Nullable Output<GroupRoleManagementPolicyNotificationRulesActiveAssignmentsArgs> activeAssignments;

    /**
     * @return A `notificationTarget` block as defined below to configure notfications on active role assignments.
     * 
     */
    public Optional<Output<GroupRoleManagementPolicyNotificationRulesActiveAssignmentsArgs>> activeAssignments() {
        return Optional.ofNullable(this.activeAssignments);
    }

    /**
     * A `notificationTarget` block as defined below for configuring notifications on activation of eligible role.
     * 
     */
    @Import(name="eligibleActivations")
    private @Nullable Output<GroupRoleManagementPolicyNotificationRulesEligibleActivationsArgs> eligibleActivations;

    /**
     * @return A `notificationTarget` block as defined below for configuring notifications on activation of eligible role.
     * 
     */
    public Optional<Output<GroupRoleManagementPolicyNotificationRulesEligibleActivationsArgs>> eligibleActivations() {
        return Optional.ofNullable(this.eligibleActivations);
    }

    /**
     * A `notificationTarget` block as defined below to configure notification on eligible role assignments.
     * 
     * At least one `notificationTarget` block must be provided.
     * 
     */
    @Import(name="eligibleAssignments")
    private @Nullable Output<GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsArgs> eligibleAssignments;

    /**
     * @return A `notificationTarget` block as defined below to configure notification on eligible role assignments.
     * 
     * At least one `notificationTarget` block must be provided.
     * 
     */
    public Optional<Output<GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsArgs>> eligibleAssignments() {
        return Optional.ofNullable(this.eligibleAssignments);
    }

    private GroupRoleManagementPolicyNotificationRulesArgs() {}

    private GroupRoleManagementPolicyNotificationRulesArgs(GroupRoleManagementPolicyNotificationRulesArgs $) {
        this.activeAssignments = $.activeAssignments;
        this.eligibleActivations = $.eligibleActivations;
        this.eligibleAssignments = $.eligibleAssignments;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupRoleManagementPolicyNotificationRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupRoleManagementPolicyNotificationRulesArgs $;

        public Builder() {
            $ = new GroupRoleManagementPolicyNotificationRulesArgs();
        }

        public Builder(GroupRoleManagementPolicyNotificationRulesArgs defaults) {
            $ = new GroupRoleManagementPolicyNotificationRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeAssignments A `notificationTarget` block as defined below to configure notfications on active role assignments.
         * 
         * @return builder
         * 
         */
        public Builder activeAssignments(@Nullable Output<GroupRoleManagementPolicyNotificationRulesActiveAssignmentsArgs> activeAssignments) {
            $.activeAssignments = activeAssignments;
            return this;
        }

        /**
         * @param activeAssignments A `notificationTarget` block as defined below to configure notfications on active role assignments.
         * 
         * @return builder
         * 
         */
        public Builder activeAssignments(GroupRoleManagementPolicyNotificationRulesActiveAssignmentsArgs activeAssignments) {
            return activeAssignments(Output.of(activeAssignments));
        }

        /**
         * @param eligibleActivations A `notificationTarget` block as defined below for configuring notifications on activation of eligible role.
         * 
         * @return builder
         * 
         */
        public Builder eligibleActivations(@Nullable Output<GroupRoleManagementPolicyNotificationRulesEligibleActivationsArgs> eligibleActivations) {
            $.eligibleActivations = eligibleActivations;
            return this;
        }

        /**
         * @param eligibleActivations A `notificationTarget` block as defined below for configuring notifications on activation of eligible role.
         * 
         * @return builder
         * 
         */
        public Builder eligibleActivations(GroupRoleManagementPolicyNotificationRulesEligibleActivationsArgs eligibleActivations) {
            return eligibleActivations(Output.of(eligibleActivations));
        }

        /**
         * @param eligibleAssignments A `notificationTarget` block as defined below to configure notification on eligible role assignments.
         * 
         * At least one `notificationTarget` block must be provided.
         * 
         * @return builder
         * 
         */
        public Builder eligibleAssignments(@Nullable Output<GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsArgs> eligibleAssignments) {
            $.eligibleAssignments = eligibleAssignments;
            return this;
        }

        /**
         * @param eligibleAssignments A `notificationTarget` block as defined below to configure notification on eligible role assignments.
         * 
         * At least one `notificationTarget` block must be provided.
         * 
         * @return builder
         * 
         */
        public Builder eligibleAssignments(GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsArgs eligibleAssignments) {
            return eligibleAssignments(Output.of(eligibleAssignments));
        }

        public GroupRoleManagementPolicyNotificationRulesArgs build() {
            return $;
        }
    }

}
