// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServicePrincipalArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServicePrincipalArgs Empty = new GetServicePrincipalArgs();

    /**
     * The client ID of the application associated with this service principal.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return The client ID of the application associated with this service principal.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The display name of the application associated with this service principal.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of the application associated with this service principal.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The object ID of the service principal.
     * 
     * &gt; One of `clientId`, `displayName` or `objectId` must be specified.
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return The object ID of the service principal.
     * 
     * &gt; One of `clientId`, `displayName` or `objectId` must be specified.
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    private GetServicePrincipalArgs() {}

    private GetServicePrincipalArgs(GetServicePrincipalArgs $) {
        this.clientId = $.clientId;
        this.displayName = $.displayName;
        this.objectId = $.objectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServicePrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServicePrincipalArgs $;

        public Builder() {
            $ = new GetServicePrincipalArgs();
        }

        public Builder(GetServicePrincipalArgs defaults) {
            $ = new GetServicePrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId The client ID of the application associated with this service principal.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client ID of the application associated with this service principal.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param displayName The display name of the application associated with this service principal.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the application associated with this service principal.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param objectId The object ID of the service principal.
         * 
         * &gt; One of `clientId`, `displayName` or `objectId` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The object ID of the service principal.
         * 
         * &gt; One of `clientId`, `displayName` or `objectId` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        public GetServicePrincipalArgs build() {
            return $;
        }
    }

}
