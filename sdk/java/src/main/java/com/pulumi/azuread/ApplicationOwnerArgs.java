// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ApplicationOwnerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationOwnerArgs Empty = new ApplicationOwnerArgs();

    /**
     * The resource ID of the application registration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    /**
     * @return The resource ID of the application registration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }

    /**
     * The object ID of the owner to assign to the application, typically a user or service principal. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="ownerObjectId", required=true)
    private Output<String> ownerObjectId;

    /**
     * @return The object ID of the owner to assign to the application, typically a user or service principal. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> ownerObjectId() {
        return this.ownerObjectId;
    }

    private ApplicationOwnerArgs() {}

    private ApplicationOwnerArgs(ApplicationOwnerArgs $) {
        this.applicationId = $.applicationId;
        this.ownerObjectId = $.ownerObjectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationOwnerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationOwnerArgs $;

        public Builder() {
            $ = new ApplicationOwnerArgs();
        }

        public Builder(ApplicationOwnerArgs defaults) {
            $ = new ApplicationOwnerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The resource ID of the application registration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The resource ID of the application registration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param ownerObjectId The object ID of the owner to assign to the application, typically a user or service principal. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ownerObjectId(Output<String> ownerObjectId) {
            $.ownerObjectId = ownerObjectId;
            return this;
        }

        /**
         * @param ownerObjectId The object ID of the owner to assign to the application, typically a user or service principal. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ownerObjectId(String ownerObjectId) {
            return ownerObjectId(Output.of(ownerObjectId));
        }

        public ApplicationOwnerArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("ApplicationOwnerArgs", "applicationId");
            }
            if ($.ownerObjectId == null) {
                throw new MissingRequiredPropertyException("ApplicationOwnerArgs", "ownerObjectId");
            }
            return $;
        }
    }

}
