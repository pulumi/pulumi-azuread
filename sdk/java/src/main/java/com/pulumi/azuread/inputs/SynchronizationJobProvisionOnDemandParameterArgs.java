// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.SynchronizationJobProvisionOnDemandParameterSubjectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SynchronizationJobProvisionOnDemandParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SynchronizationJobProvisionOnDemandParameterArgs Empty = new SynchronizationJobProvisionOnDemandParameterArgs();

    /**
     * The identifier of the synchronization rule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
     * 
     */
    @Import(name="ruleId", required=true)
    private Output<String> ruleId;

    /**
     * @return The identifier of the synchronization rule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
     * 
     */
    public Output<String> ruleId() {
        return this.ruleId;
    }

    /**
     * One or more `subject` blocks as documented below.
     * 
     */
    @Import(name="subjects", required=true)
    private Output<List<SynchronizationJobProvisionOnDemandParameterSubjectArgs>> subjects;

    /**
     * @return One or more `subject` blocks as documented below.
     * 
     */
    public Output<List<SynchronizationJobProvisionOnDemandParameterSubjectArgs>> subjects() {
        return this.subjects;
    }

    private SynchronizationJobProvisionOnDemandParameterArgs() {}

    private SynchronizationJobProvisionOnDemandParameterArgs(SynchronizationJobProvisionOnDemandParameterArgs $) {
        this.ruleId = $.ruleId;
        this.subjects = $.subjects;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SynchronizationJobProvisionOnDemandParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SynchronizationJobProvisionOnDemandParameterArgs $;

        public Builder() {
            $ = new SynchronizationJobProvisionOnDemandParameterArgs();
        }

        public Builder(SynchronizationJobProvisionOnDemandParameterArgs defaults) {
            $ = new SynchronizationJobProvisionOnDemandParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ruleId The identifier of the synchronization rule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId The identifier of the synchronization rule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param subjects One or more `subject` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjects(Output<List<SynchronizationJobProvisionOnDemandParameterSubjectArgs>> subjects) {
            $.subjects = subjects;
            return this;
        }

        /**
         * @param subjects One or more `subject` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjects(List<SynchronizationJobProvisionOnDemandParameterSubjectArgs> subjects) {
            return subjects(Output.of(subjects));
        }

        /**
         * @param subjects One or more `subject` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjects(SynchronizationJobProvisionOnDemandParameterSubjectArgs... subjects) {
            return subjects(List.of(subjects));
        }

        public SynchronizationJobProvisionOnDemandParameterArgs build() {
            if ($.ruleId == null) {
                throw new MissingRequiredPropertyException("SynchronizationJobProvisionOnDemandParameterArgs", "ruleId");
            }
            if ($.subjects == null) {
                throw new MissingRequiredPropertyException("SynchronizationJobProvisionOnDemandParameterArgs", "subjects");
            }
            return $;
        }
    }

}
