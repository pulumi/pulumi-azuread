// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.azuread.outputs.GetApplicationWebImplicitGrant;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationWeb {
    /**
     * @return Home page or landing page of the application.
     * 
     */
    private String homepageUrl;
    /**
     * @return An `implicit_grant` block as documented above.
     * 
     */
    private List<GetApplicationWebImplicitGrant> implicitGrants;
    /**
     * @return The URL that will be used by Microsoft&#39;s authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
     * 
     */
    private String logoutUrl;
    /**
     * @return A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
     * 
     */
    private List<String> redirectUris;

    private GetApplicationWeb() {}
    /**
     * @return Home page or landing page of the application.
     * 
     */
    public String homepageUrl() {
        return this.homepageUrl;
    }
    /**
     * @return An `implicit_grant` block as documented above.
     * 
     */
    public List<GetApplicationWebImplicitGrant> implicitGrants() {
        return this.implicitGrants;
    }
    /**
     * @return The URL that will be used by Microsoft&#39;s authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
     * 
     */
    public String logoutUrl() {
        return this.logoutUrl;
    }
    /**
     * @return A list of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
     * 
     */
    public List<String> redirectUris() {
        return this.redirectUris;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationWeb defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String homepageUrl;
        private List<GetApplicationWebImplicitGrant> implicitGrants;
        private String logoutUrl;
        private List<String> redirectUris;
        public Builder() {}
        public Builder(GetApplicationWeb defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.homepageUrl = defaults.homepageUrl;
    	      this.implicitGrants = defaults.implicitGrants;
    	      this.logoutUrl = defaults.logoutUrl;
    	      this.redirectUris = defaults.redirectUris;
        }

        @CustomType.Setter
        public Builder homepageUrl(String homepageUrl) {
            this.homepageUrl = Objects.requireNonNull(homepageUrl);
            return this;
        }
        @CustomType.Setter
        public Builder implicitGrants(List<GetApplicationWebImplicitGrant> implicitGrants) {
            this.implicitGrants = Objects.requireNonNull(implicitGrants);
            return this;
        }
        public Builder implicitGrants(GetApplicationWebImplicitGrant... implicitGrants) {
            return implicitGrants(List.of(implicitGrants));
        }
        @CustomType.Setter
        public Builder logoutUrl(String logoutUrl) {
            this.logoutUrl = Objects.requireNonNull(logoutUrl);
            return this;
        }
        @CustomType.Setter
        public Builder redirectUris(List<String> redirectUris) {
            this.redirectUris = Objects.requireNonNull(redirectUris);
            return this;
        }
        public Builder redirectUris(String... redirectUris) {
            return redirectUris(List.of(redirectUris));
        }
        public GetApplicationWeb build() {
            final var o = new GetApplicationWeb();
            o.homepageUrl = homepageUrl;
            o.implicitGrants = implicitGrants;
            o.logoutUrl = logoutUrl;
            o.redirectUris = redirectUris;
            return o;
        }
    }
}
