// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SynchronizationJobProvisionOnDemandParameterSubjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final SynchronizationJobProvisionOnDemandParameterSubjectArgs Empty = new SynchronizationJobProvisionOnDemandParameterSubjectArgs();

    /**
     * The identifier of an object to which a synchronization job is to be applied. Can be one of the following: (1) An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD. (2) The user ID for synchronization from Azure AD to a third-party. (3) The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.
     * 
     */
    @Import(name="objectId", required=true)
    private Output<String> objectId;

    /**
     * @return The identifier of an object to which a synchronization job is to be applied. Can be one of the following: (1) An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD. (2) The user ID for synchronization from Azure AD to a third-party. (3) The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }

    /**
     * The type of the object to which a synchronization job is to be applied. Can be one of the following: `user` for synchronizing between Active Directory and Azure AD, `User` for synchronizing a user between Azure AD and a third-party application, `Worker` for synchronization a user between Workday and either Active Directory or Azure AD, `Group` for synchronizing a group between Azure AD and a third-party application.
     * 
     */
    @Import(name="objectTypeName", required=true)
    private Output<String> objectTypeName;

    /**
     * @return The type of the object to which a synchronization job is to be applied. Can be one of the following: `user` for synchronizing between Active Directory and Azure AD, `User` for synchronizing a user between Azure AD and a third-party application, `Worker` for synchronization a user between Workday and either Active Directory or Azure AD, `Group` for synchronizing a group between Azure AD and a third-party application.
     * 
     */
    public Output<String> objectTypeName() {
        return this.objectTypeName;
    }

    private SynchronizationJobProvisionOnDemandParameterSubjectArgs() {}

    private SynchronizationJobProvisionOnDemandParameterSubjectArgs(SynchronizationJobProvisionOnDemandParameterSubjectArgs $) {
        this.objectId = $.objectId;
        this.objectTypeName = $.objectTypeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SynchronizationJobProvisionOnDemandParameterSubjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SynchronizationJobProvisionOnDemandParameterSubjectArgs $;

        public Builder() {
            $ = new SynchronizationJobProvisionOnDemandParameterSubjectArgs();
        }

        public Builder(SynchronizationJobProvisionOnDemandParameterSubjectArgs defaults) {
            $ = new SynchronizationJobProvisionOnDemandParameterSubjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectId The identifier of an object to which a synchronization job is to be applied. Can be one of the following: (1) An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD. (2) The user ID for synchronization from Azure AD to a third-party. (3) The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.
         * 
         * @return builder
         * 
         */
        public Builder objectId(Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The identifier of an object to which a synchronization job is to be applied. Can be one of the following: (1) An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD. (2) The user ID for synchronization from Azure AD to a third-party. (3) The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param objectTypeName The type of the object to which a synchronization job is to be applied. Can be one of the following: `user` for synchronizing between Active Directory and Azure AD, `User` for synchronizing a user between Azure AD and a third-party application, `Worker` for synchronization a user between Workday and either Active Directory or Azure AD, `Group` for synchronizing a group between Azure AD and a third-party application.
         * 
         * @return builder
         * 
         */
        public Builder objectTypeName(Output<String> objectTypeName) {
            $.objectTypeName = objectTypeName;
            return this;
        }

        /**
         * @param objectTypeName The type of the object to which a synchronization job is to be applied. Can be one of the following: `user` for synchronizing between Active Directory and Azure AD, `User` for synchronizing a user between Azure AD and a third-party application, `Worker` for synchronization a user between Workday and either Active Directory or Azure AD, `Group` for synchronizing a group between Azure AD and a third-party application.
         * 
         * @return builder
         * 
         */
        public Builder objectTypeName(String objectTypeName) {
            return objectTypeName(Output.of(objectTypeName));
        }

        public SynchronizationJobProvisionOnDemandParameterSubjectArgs build() {
            if ($.objectId == null) {
                throw new MissingRequiredPropertyException("SynchronizationJobProvisionOnDemandParameterSubjectArgs", "objectId");
            }
            if ($.objectTypeName == null) {
                throw new MissingRequiredPropertyException("SynchronizationJobProvisionOnDemandParameterSubjectArgs", "objectTypeName");
            }
            return $;
        }
    }

}
