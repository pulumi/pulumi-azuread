// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.azuread.outputs.GetUsersUser;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUsersResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean ignoreMissing;
    /**
     * @return The email aliases of the users.
     * 
     */
    private List<String> mailNicknames;
    /**
     * @return The object IDs of the users.
     * 
     */
    private List<String> objectIds;
    private @Nullable Boolean returnAll;
    /**
     * @return The user principal names (UPNs) of the users.
     * 
     */
    private List<String> userPrincipalNames;
    /**
     * @return A list of users. Each `user` object provides the attributes documented below.
     * 
     */
    private List<GetUsersUser> users;

    private GetUsersResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> ignoreMissing() {
        return Optional.ofNullable(this.ignoreMissing);
    }
    /**
     * @return The email aliases of the users.
     * 
     */
    public List<String> mailNicknames() {
        return this.mailNicknames;
    }
    /**
     * @return The object IDs of the users.
     * 
     */
    public List<String> objectIds() {
        return this.objectIds;
    }
    public Optional<Boolean> returnAll() {
        return Optional.ofNullable(this.returnAll);
    }
    /**
     * @return The user principal names (UPNs) of the users.
     * 
     */
    public List<String> userPrincipalNames() {
        return this.userPrincipalNames;
    }
    /**
     * @return A list of users. Each `user` object provides the attributes documented below.
     * 
     */
    public List<GetUsersUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Boolean ignoreMissing;
        private List<String> mailNicknames;
        private List<String> objectIds;
        private @Nullable Boolean returnAll;
        private List<String> userPrincipalNames;
        private List<GetUsersUser> users;
        public Builder() {}
        public Builder(GetUsersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ignoreMissing = defaults.ignoreMissing;
    	      this.mailNicknames = defaults.mailNicknames;
    	      this.objectIds = defaults.objectIds;
    	      this.returnAll = defaults.returnAll;
    	      this.userPrincipalNames = defaults.userPrincipalNames;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ignoreMissing(@Nullable Boolean ignoreMissing) {
            this.ignoreMissing = ignoreMissing;
            return this;
        }
        @CustomType.Setter
        public Builder mailNicknames(List<String> mailNicknames) {
            this.mailNicknames = Objects.requireNonNull(mailNicknames);
            return this;
        }
        public Builder mailNicknames(String... mailNicknames) {
            return mailNicknames(List.of(mailNicknames));
        }
        @CustomType.Setter
        public Builder objectIds(List<String> objectIds) {
            this.objectIds = Objects.requireNonNull(objectIds);
            return this;
        }
        public Builder objectIds(String... objectIds) {
            return objectIds(List.of(objectIds));
        }
        @CustomType.Setter
        public Builder returnAll(@Nullable Boolean returnAll) {
            this.returnAll = returnAll;
            return this;
        }
        @CustomType.Setter
        public Builder userPrincipalNames(List<String> userPrincipalNames) {
            this.userPrincipalNames = Objects.requireNonNull(userPrincipalNames);
            return this;
        }
        public Builder userPrincipalNames(String... userPrincipalNames) {
            return userPrincipalNames(List.of(userPrincipalNames));
        }
        @CustomType.Setter
        public Builder users(List<GetUsersUser> users) {
            this.users = Objects.requireNonNull(users);
            return this;
        }
        public Builder users(GetUsersUser... users) {
            return users(List.of(users));
        }
        public GetUsersResult build() {
            final var o = new GetUsersResult();
            o.id = id;
            o.ignoreMissing = ignoreMissing;
            o.mailNicknames = mailNicknames;
            o.objectIds = objectIds;
            o.returnAll = returnAll;
            o.userPrincipalNames = userPrincipalNames;
            o.users = users;
            return o;
        }
    }
}
