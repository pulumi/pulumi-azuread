// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.azuread.outputs.ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser {
    /**
     * @return An `external_tenants` block as documented below, which specifies external tenants in a policy scope.
     * 
     */
    private @Nullable List<ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant> externalTenants;
    /**
     * @return A list of guest or external user types. Possible values are: `b2bCollaborationGuest`, `b2bCollaborationMember`, `b2bDirectConnectUser`, `internalGuest`, `none`, `otherExternalUser`, `serviceProvider`, `unknownFutureValue`.
     * 
     */
    private List<String> guestOrExternalUserTypes;

    private ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser() {}
    /**
     * @return An `external_tenants` block as documented below, which specifies external tenants in a policy scope.
     * 
     */
    public List<ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant> externalTenants() {
        return this.externalTenants == null ? List.of() : this.externalTenants;
    }
    /**
     * @return A list of guest or external user types. Possible values are: `b2bCollaborationGuest`, `b2bCollaborationMember`, `b2bDirectConnectUser`, `internalGuest`, `none`, `otherExternalUser`, `serviceProvider`, `unknownFutureValue`.
     * 
     */
    public List<String> guestOrExternalUserTypes() {
        return this.guestOrExternalUserTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant> externalTenants;
        private List<String> guestOrExternalUserTypes;
        public Builder() {}
        public Builder(ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalTenants = defaults.externalTenants;
    	      this.guestOrExternalUserTypes = defaults.guestOrExternalUserTypes;
        }

        @CustomType.Setter
        public Builder externalTenants(@Nullable List<ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant> externalTenants) {
            this.externalTenants = externalTenants;
            return this;
        }
        public Builder externalTenants(ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant... externalTenants) {
            return externalTenants(List.of(externalTenants));
        }
        @CustomType.Setter
        public Builder guestOrExternalUserTypes(List<String> guestOrExternalUserTypes) {
            this.guestOrExternalUserTypes = Objects.requireNonNull(guestOrExternalUserTypes);
            return this;
        }
        public Builder guestOrExternalUserTypes(String... guestOrExternalUserTypes) {
            return guestOrExternalUserTypes(List.of(guestOrExternalUserTypes));
        }
        public ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser build() {
            final var o = new ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser();
            o.externalTenants = externalTenants;
            o.guestOrExternalUserTypes = guestOrExternalUserTypes;
            return o;
        }
    }
}
