// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPackageCatalogRoleAssignmentState extends com.pulumi.resources.ResourceArgs {

    public static final AccessPackageCatalogRoleAssignmentState Empty = new AccessPackageCatalogRoleAssignmentState();

    /**
     * The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    /**
     * @return The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    /**
     * The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalObjectId")
    private @Nullable Output<String> principalObjectId;

    /**
     * @return The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> principalObjectId() {
        return Optional.ofNullable(this.principalObjectId);
    }

    /**
     * The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="roleId")
    private @Nullable Output<String> roleId;

    /**
     * @return The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    private AccessPackageCatalogRoleAssignmentState() {}

    private AccessPackageCatalogRoleAssignmentState(AccessPackageCatalogRoleAssignmentState $) {
        this.catalogId = $.catalogId;
        this.principalObjectId = $.principalObjectId;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPackageCatalogRoleAssignmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPackageCatalogRoleAssignmentState $;

        public Builder() {
            $ = new AccessPackageCatalogRoleAssignmentState();
        }

        public Builder(AccessPackageCatalogRoleAssignmentState defaults) {
            $ = new AccessPackageCatalogRoleAssignmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param principalObjectId The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalObjectId(@Nullable Output<String> principalObjectId) {
            $.principalObjectId = principalObjectId;
            return this;
        }

        /**
         * @param principalObjectId The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalObjectId(String principalObjectId) {
            return principalObjectId(Output.of(principalObjectId));
        }

        /**
         * @param roleId The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder roleId(@Nullable Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public AccessPackageCatalogRoleAssignmentState build() {
            return $;
        }
    }

}
