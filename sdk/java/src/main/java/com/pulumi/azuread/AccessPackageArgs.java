// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPackageArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPackageArgs Empty = new AccessPackageArgs();

    /**
     * The ID of the Catalog this access package will be created in.
     * 
     */
    @Import(name="catalogId", required=true)
    private Output<String> catalogId;

    /**
     * @return The ID of the Catalog this access package will be created in.
     * 
     */
    public Output<String> catalogId() {
        return this.catalogId;
    }

    /**
     * The description of the access package.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the access package.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The display name of the access package.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of the access package.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Whether the access package is hidden from the requestor.
     * 
     */
    @Import(name="hidden")
    private @Nullable Output<Boolean> hidden;

    /**
     * @return Whether the access package is hidden from the requestor.
     * 
     */
    public Optional<Output<Boolean>> hidden() {
        return Optional.ofNullable(this.hidden);
    }

    private AccessPackageArgs() {}

    private AccessPackageArgs(AccessPackageArgs $) {
        this.catalogId = $.catalogId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.hidden = $.hidden;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPackageArgs $;

        public Builder() {
            $ = new AccessPackageArgs();
        }

        public Builder(AccessPackageArgs defaults) {
            $ = new AccessPackageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId The ID of the Catalog this access package will be created in.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId The ID of the Catalog this access package will be created in.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param description The description of the access package.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the access package.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the access package.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the access package.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param hidden Whether the access package is hidden from the requestor.
         * 
         * @return builder
         * 
         */
        public Builder hidden(@Nullable Output<Boolean> hidden) {
            $.hidden = hidden;
            return this;
        }

        /**
         * @param hidden Whether the access package is hidden from the requestor.
         * 
         * @return builder
         * 
         */
        public Builder hidden(Boolean hidden) {
            return hidden(Output.of(hidden));
        }

        public AccessPackageArgs build() {
            if ($.catalogId == null) {
                throw new MissingRequiredPropertyException("AccessPackageArgs", "catalogId");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("AccessPackageArgs", "description");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("AccessPackageArgs", "displayName");
            }
            return $;
        }
    }

}
