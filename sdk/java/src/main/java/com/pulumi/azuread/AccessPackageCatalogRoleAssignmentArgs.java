// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AccessPackageCatalogRoleAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPackageCatalogRoleAssignmentArgs Empty = new AccessPackageCatalogRoleAssignmentArgs();

    /**
     * The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="catalogId", required=true)
    private Output<String> catalogId;

    /**
     * @return The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> catalogId() {
        return this.catalogId;
    }

    /**
     * The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalObjectId", required=true)
    private Output<String> principalObjectId;

    /**
     * @return The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalObjectId() {
        return this.principalObjectId;
    }

    /**
     * The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="roleId", required=true)
    private Output<String> roleId;

    /**
     * @return The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }

    private AccessPackageCatalogRoleAssignmentArgs() {}

    private AccessPackageCatalogRoleAssignmentArgs(AccessPackageCatalogRoleAssignmentArgs $) {
        this.catalogId = $.catalogId;
        this.principalObjectId = $.principalObjectId;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPackageCatalogRoleAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPackageCatalogRoleAssignmentArgs $;

        public Builder() {
            $ = new AccessPackageCatalogRoleAssignmentArgs();
        }

        public Builder(AccessPackageCatalogRoleAssignmentArgs defaults) {
            $ = new AccessPackageCatalogRoleAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param principalObjectId The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalObjectId(Output<String> principalObjectId) {
            $.principalObjectId = principalObjectId;
            return this;
        }

        /**
         * @param principalObjectId The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalObjectId(String principalObjectId) {
            return principalObjectId(Output.of(principalObjectId));
        }

        /**
         * @param roleId The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder roleId(Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public AccessPackageCatalogRoleAssignmentArgs build() {
            if ($.catalogId == null) {
                throw new MissingRequiredPropertyException("AccessPackageCatalogRoleAssignmentArgs", "catalogId");
            }
            if ($.principalObjectId == null) {
                throw new MissingRequiredPropertyException("AccessPackageCatalogRoleAssignmentArgs", "principalObjectId");
            }
            if ($.roleId == null) {
                throw new MissingRequiredPropertyException("AccessPackageCatalogRoleAssignmentArgs", "roleId");
            }
            return $;
        }
    }

}
