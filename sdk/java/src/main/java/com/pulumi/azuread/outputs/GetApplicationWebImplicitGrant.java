// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetApplicationWebImplicitGrant {
    /**
     * @return Whether this web application can request an access token using OAuth 2.0 implicit flow.
     * 
     */
    private Boolean accessTokenIssuanceEnabled;
    /**
     * @return Whether this web application can request an ID token using OAuth 2.0 implicit flow.
     * 
     */
    private Boolean idTokenIssuanceEnabled;

    private GetApplicationWebImplicitGrant() {}
    /**
     * @return Whether this web application can request an access token using OAuth 2.0 implicit flow.
     * 
     */
    public Boolean accessTokenIssuanceEnabled() {
        return this.accessTokenIssuanceEnabled;
    }
    /**
     * @return Whether this web application can request an ID token using OAuth 2.0 implicit flow.
     * 
     */
    public Boolean idTokenIssuanceEnabled() {
        return this.idTokenIssuanceEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationWebImplicitGrant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean accessTokenIssuanceEnabled;
        private Boolean idTokenIssuanceEnabled;
        public Builder() {}
        public Builder(GetApplicationWebImplicitGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTokenIssuanceEnabled = defaults.accessTokenIssuanceEnabled;
    	      this.idTokenIssuanceEnabled = defaults.idTokenIssuanceEnabled;
        }

        @CustomType.Setter
        public Builder accessTokenIssuanceEnabled(Boolean accessTokenIssuanceEnabled) {
            this.accessTokenIssuanceEnabled = Objects.requireNonNull(accessTokenIssuanceEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder idTokenIssuanceEnabled(Boolean idTokenIssuanceEnabled) {
            this.idTokenIssuanceEnabled = Objects.requireNonNull(idTokenIssuanceEnabled);
            return this;
        }
        public GetApplicationWebImplicitGrant build() {
            final var o = new GetApplicationWebImplicitGrant();
            o.accessTokenIssuanceEnabled = accessTokenIssuanceEnabled;
            o.idTokenIssuanceEnabled = idTokenIssuanceEnabled;
            return o;
        }
    }
}
