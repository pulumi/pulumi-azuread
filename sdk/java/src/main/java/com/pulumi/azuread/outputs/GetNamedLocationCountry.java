// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNamedLocationCountry {
    private List<String> countriesAndRegions;
    private Boolean includeUnknownCountriesAndRegions;

    private GetNamedLocationCountry() {}
    public List<String> countriesAndRegions() {
        return this.countriesAndRegions;
    }
    public Boolean includeUnknownCountriesAndRegions() {
        return this.includeUnknownCountriesAndRegions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamedLocationCountry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> countriesAndRegions;
        private Boolean includeUnknownCountriesAndRegions;
        public Builder() {}
        public Builder(GetNamedLocationCountry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.countriesAndRegions = defaults.countriesAndRegions;
    	      this.includeUnknownCountriesAndRegions = defaults.includeUnknownCountriesAndRegions;
        }

        @CustomType.Setter
        public Builder countriesAndRegions(List<String> countriesAndRegions) {
            this.countriesAndRegions = Objects.requireNonNull(countriesAndRegions);
            return this;
        }
        public Builder countriesAndRegions(String... countriesAndRegions) {
            return countriesAndRegions(List.of(countriesAndRegions));
        }
        @CustomType.Setter
        public Builder includeUnknownCountriesAndRegions(Boolean includeUnknownCountriesAndRegions) {
            this.includeUnknownCountriesAndRegions = Objects.requireNonNull(includeUnknownCountriesAndRegions);
            return this;
        }
        public GetNamedLocationCountry build() {
            final var _resultValue = new GetNamedLocationCountry();
            _resultValue.countriesAndRegions = countriesAndRegions;
            _resultValue.includeUnknownCountriesAndRegions = includeUnknownCountriesAndRegions;
            return _resultValue;
        }
    }
}
