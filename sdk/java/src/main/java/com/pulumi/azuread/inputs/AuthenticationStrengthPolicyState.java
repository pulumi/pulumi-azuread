// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthenticationStrengthPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final AuthenticationStrengthPolicyState Empty = new AuthenticationStrengthPolicyState();

    /**
     * List of allowed authentication methods for this authentication strength policy.
     * 
     */
    @Import(name="allowedCombinations")
    private @Nullable Output<List<String>> allowedCombinations;

    /**
     * @return List of allowed authentication methods for this authentication strength policy.
     * 
     */
    public Optional<Output<List<String>>> allowedCombinations() {
        return Optional.ofNullable(this.allowedCombinations);
    }

    /**
     * The description for this authentication strength policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for this authentication strength policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The friendly name for this authentication strength policy.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The friendly name for this authentication strength policy.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    private AuthenticationStrengthPolicyState() {}

    private AuthenticationStrengthPolicyState(AuthenticationStrengthPolicyState $) {
        this.allowedCombinations = $.allowedCombinations;
        this.description = $.description;
        this.displayName = $.displayName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthenticationStrengthPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthenticationStrengthPolicyState $;

        public Builder() {
            $ = new AuthenticationStrengthPolicyState();
        }

        public Builder(AuthenticationStrengthPolicyState defaults) {
            $ = new AuthenticationStrengthPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedCombinations List of allowed authentication methods for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedCombinations(@Nullable Output<List<String>> allowedCombinations) {
            $.allowedCombinations = allowedCombinations;
            return this;
        }

        /**
         * @param allowedCombinations List of allowed authentication methods for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedCombinations(List<String> allowedCombinations) {
            return allowedCombinations(Output.of(allowedCombinations));
        }

        /**
         * @param allowedCombinations List of allowed authentication methods for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedCombinations(String... allowedCombinations) {
            return allowedCombinations(List.of(allowedCombinations));
        }

        /**
         * @param description The description for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The friendly name for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The friendly name for this authentication strength policy.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public AuthenticationStrengthPolicyState build() {
            return $;
        }
    }

}
