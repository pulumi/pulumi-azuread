// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.azuread.DirectoryRoleAssignmentArgs;
import com.pulumi.azuread.Utilities;
import com.pulumi.azuread.inputs.DirectoryRoleAssignmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a single directory role assignment within Azure Active Directory.
 * 
 * ## API Permissions
 * 
 * The following API permissions are required in order to use this resource.
 * 
 * When authenticated with a service principal, this resource requires one of the following application roles: `RoleManagement.ReadWrite.Directory` or `Directory.ReadWrite.All`
 * 
 * When authenticated with a user principal, this resource requires one of the following directory roles: `Privileged Role Administrator` or `Global Administrator`
 * 
 * ## Example Usage
 * 
 * *Assignment for a built-in role*
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleUser = Output.of(AzureadFunctions.getUser(GetUserArgs.builder()
 *             .userPrincipalName(&#34;jdoe@hashicorp.com&#34;)
 *             .build()));
 * 
 *         var exampleDirectoryRole = new DirectoryRole(&#34;exampleDirectoryRole&#34;, DirectoryRoleArgs.builder()        
 *             .displayName(&#34;Security administrator&#34;)
 *             .build());
 * 
 *         var exampleDirectoryRoleAssignment = new DirectoryRoleAssignment(&#34;exampleDirectoryRoleAssignment&#34;, DirectoryRoleAssignmentArgs.builder()        
 *             .roleId(exampleDirectoryRole.getTemplateId())
 *             .principalObjectId(exampleUser.apply(getUserResult -&gt; getUserResult.getObjectId()))
 *             .build());
 * 
 *         }
 * }
 * ```
 * 
 * &gt; Note the use of the `template_id` attribute when referencing built-in roles.
 * 
 * *Assignment for a custom role*
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleUser = Output.of(AzureadFunctions.getUser(GetUserArgs.builder()
 *             .userPrincipalName(&#34;jdoe@hashicorp.com&#34;)
 *             .build()));
 * 
 *         var exampleCustomDirectoryRole = new CustomDirectoryRole(&#34;exampleCustomDirectoryRole&#34;, CustomDirectoryRoleArgs.builder()        
 *             .displayName(&#34;My Custom Role&#34;)
 *             .enabled(true)
 *             .version(&#34;1.0&#34;)
 *             .permissions(CustomDirectoryRolePermission.builder()
 *                 .allowedResourceActions(                
 *                     &#34;microsoft.directory/applications/basic/update&#34;,
 *                     &#34;microsoft.directory/applications/standard/read&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleDirectoryRoleAssignment = new DirectoryRoleAssignment(&#34;exampleDirectoryRoleAssignment&#34;, DirectoryRoleAssignmentArgs.builder()        
 *             .roleId(exampleCustomDirectoryRole.getObjectId())
 *             .principalObjectId(exampleUser.apply(getUserResult -&gt; getUserResult.getObjectId()))
 *             .build());
 * 
 *         }
 * }
 * ```
 * 
 * ## Import
 * 
 * Directory role assignments can be imported using the ID of the assignment, e.g.
 * 
 * ```sh
 *  $ pulumi import azuread:index/directoryRoleAssignment:DirectoryRoleAssignment test ePROZI_iKE653D_d6aoLHyr-lKgHI8ZGiIdz8CLVcng-1
 * ```
 * 
 */
@ResourceType(type="azuread:index/directoryRoleAssignment:DirectoryRoleAssignment")
public class DirectoryRoleAssignment extends com.pulumi.resources.CustomResource {
    /**
     * Identifier of the app-specific scope when the assignment scope is app-specific. Cannot be used with `directory_scope_object_id`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="appScopeObjectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> appScopeObjectId;

    /**
     * @return Identifier of the app-specific scope when the assignment scope is app-specific. Cannot be used with `directory_scope_object_id`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> appScopeObjectId() {
        return Codegen.optional(this.appScopeObjectId);
    }
    /**
     * The object ID of a directory object representing the scope of the assignment. Cannot be used with `app_scope_object_id`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="directoryScopeObjectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> directoryScopeObjectId;

    /**
     * @return The object ID of a directory object representing the scope of the assignment. Cannot be used with `app_scope_object_id`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> directoryScopeObjectId() {
        return Codegen.optional(this.directoryScopeObjectId);
    }
    /**
     * The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="principalObjectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> principalObjectId;

    /**
     * @return The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> principalObjectId() {
        return Codegen.optional(this.principalObjectId);
    }
    /**
     * The template ID (in the case of built-in roles) or object ID (in the case of custom roles) of the directory role you want to assign. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="roleId", type=String.class, parameters={})
    private Output</* @Nullable */ String> roleId;

    /**
     * @return The template ID (in the case of built-in roles) or object ID (in the case of custom roles) of the directory role you want to assign. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> roleId() {
        return Codegen.optional(this.roleId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DirectoryRoleAssignment(String name) {
        this(name, DirectoryRoleAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DirectoryRoleAssignment(String name, @Nullable DirectoryRoleAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DirectoryRoleAssignment(String name, @Nullable DirectoryRoleAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/directoryRoleAssignment:DirectoryRoleAssignment", name, args == null ? DirectoryRoleAssignmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DirectoryRoleAssignment(String name, Output<String> id, @Nullable DirectoryRoleAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/directoryRoleAssignment:DirectoryRoleAssignment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DirectoryRoleAssignment get(String name, Output<String> id, @Nullable DirectoryRoleAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DirectoryRoleAssignment(name, id, state, options);
    }
}
