// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.azuread.ApplicationPreAuthorizedArgs;
import com.pulumi.azuread.Utilities;
import com.pulumi.azuread.inputs.ApplicationPreAuthorizedState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuread.ApplicationRegistration;
 * import com.pulumi.azuread.ApplicationRegistrationArgs;
 * import com.pulumi.azuread.Application;
 * import com.pulumi.azuread.ApplicationArgs;
 * import com.pulumi.azuread.inputs.ApplicationApiArgs;
 * import com.pulumi.azuread.ApplicationPreAuthorized;
 * import com.pulumi.azuread.ApplicationPreAuthorizedArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var authorized = new ApplicationRegistration("authorized", ApplicationRegistrationArgs.builder()
 *             .displayName("example-authorized-app")
 *             .build());
 * 
 *         var authorizer = new Application("authorizer", ApplicationArgs.builder()
 *             .displayName("example-authorizing-app")
 *             .api(ApplicationApiArgs.builder()
 *                 .oauth2PermissionScopes(                
 *                     ApplicationApiOauth2PermissionScopeArgs.builder()
 *                         .adminConsentDescription("Administer the application")
 *                         .adminConsentDisplayName("Administer")
 *                         .enabled(true)
 *                         .id("00000000-0000-0000-0000-000000000000")
 *                         .type("Admin")
 *                         .value("administer")
 *                         .build(),
 *                     ApplicationApiOauth2PermissionScopeArgs.builder()
 *                         .adminConsentDescription("Access the application")
 *                         .adminConsentDisplayName("Access")
 *                         .enabled(true)
 *                         .id("11111111-1111-1111-1111-111111111111")
 *                         .type("User")
 *                         .userConsentDescription("Access the application")
 *                         .userConsentDisplayName("Access")
 *                         .value("user_impersonation")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         var example = new ApplicationPreAuthorized("example", ApplicationPreAuthorizedArgs.builder()
 *             .applicationId(authorizer.id())
 *             .authorizedClientId(authorized.clientId())
 *             .permissionIds(            
 *                 "00000000-0000-0000-0000-000000000000",
 *                 "11111111-1111-1111-1111-111111111111")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Pre-authorized applications can be imported using the object ID of the authorizing application and the application ID of the application being authorized, e.g.
 * 
 * ```sh
 * $ pulumi import azuread:index/applicationPreAuthorized:ApplicationPreAuthorized example 00000000-0000-0000-0000-000000000000/preAuthorizedApplication/11111111-1111-1111-1111-111111111111
 * ```
 * 
 * -&gt; This ID format is unique to Terraform and is composed of the authorizing application&#39;s object ID, the string &#34;preAuthorizedApplication&#34; and the authorized application&#39;s application ID (client ID) in the format `{ObjectId}/preAuthorizedApplication/{ApplicationId}`.
 * 
 */
@ResourceType(type="azuread:index/applicationPreAuthorized:ApplicationPreAuthorized")
public class ApplicationPreAuthorized extends com.pulumi.resources.CustomResource {
    /**
     * The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Export(name="applicationId", refs={String.class}, tree="[0]")
    private Output<String> applicationId;

    /**
     * @return The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }
    /**
     * The object ID of the application to which this pre-authorized application should be added
     * 
     * @deprecated
     * The `application_object_id` property has been replaced with the `application_id` property and will be removed in version 3.0 of the AzureAD provider
     * 
     */
    @Deprecated /* The `application_object_id` property has been replaced with the `application_id` property and will be removed in version 3.0 of the AzureAD provider */
    @Export(name="applicationObjectId", refs={String.class}, tree="[0]")
    private Output<String> applicationObjectId;

    /**
     * @return The object ID of the application to which this pre-authorized application should be added
     * 
     */
    public Output<String> applicationObjectId() {
        return this.applicationObjectId;
    }
    /**
     * The application ID of the pre-authorized application
     * 
     * @deprecated
     * The `authorized_app_id` property has been replaced with the `authorized_client_id` property and will be removed in version 3.0 of the AzureAD provider
     * 
     */
    @Deprecated /* The `authorized_app_id` property has been replaced with the `authorized_client_id` property and will be removed in version 3.0 of the AzureAD provider */
    @Export(name="authorizedAppId", refs={String.class}, tree="[0]")
    private Output<String> authorizedAppId;

    /**
     * @return The application ID of the pre-authorized application
     * 
     */
    public Output<String> authorizedAppId() {
        return this.authorizedAppId;
    }
    /**
     * The client ID of the application being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Export(name="authorizedClientId", refs={String.class}, tree="[0]")
    private Output<String> authorizedClientId;

    /**
     * @return The client ID of the application being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Output<String> authorizedClientId() {
        return this.authorizedClientId;
    }
    /**
     * A set of permission scope IDs required by the authorized application.
     * 
     */
    @Export(name="permissionIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> permissionIds;

    /**
     * @return A set of permission scope IDs required by the authorized application.
     * 
     */
    public Output<List<String>> permissionIds() {
        return this.permissionIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationPreAuthorized(String name) {
        this(name, ApplicationPreAuthorizedArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationPreAuthorized(String name, ApplicationPreAuthorizedArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationPreAuthorized(String name, ApplicationPreAuthorizedArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized", name, args == null ? ApplicationPreAuthorizedArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApplicationPreAuthorized(String name, Output<String> id, @Nullable ApplicationPreAuthorizedState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationPreAuthorized get(String name, Output<String> id, @Nullable ApplicationPreAuthorizedState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationPreAuthorized(name, id, state, options);
    }
}
