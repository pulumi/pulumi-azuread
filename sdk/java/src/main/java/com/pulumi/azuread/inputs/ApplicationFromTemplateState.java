// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationFromTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationFromTemplateState Empty = new ApplicationFromTemplateState();

    /**
     * The resource ID for the application.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The resource ID for the application.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * The object ID for the application.
     * 
     */
    @Import(name="applicationObjectId")
    private @Nullable Output<String> applicationObjectId;

    /**
     * @return The object ID for the application.
     * 
     */
    public Optional<Output<String>> applicationObjectId() {
        return Optional.ofNullable(this.applicationObjectId);
    }

    /**
     * The display name for the application.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name for the application.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The resource ID for the service principal.
     * 
     */
    @Import(name="servicePrincipalId")
    private @Nullable Output<String> servicePrincipalId;

    /**
     * @return The resource ID for the service principal.
     * 
     */
    public Optional<Output<String>> servicePrincipalId() {
        return Optional.ofNullable(this.servicePrincipalId);
    }

    /**
     * The object ID for the service principal.
     * 
     */
    @Import(name="servicePrincipalObjectId")
    private @Nullable Output<String> servicePrincipalObjectId;

    /**
     * @return The object ID for the service principal.
     * 
     */
    public Optional<Output<String>> servicePrincipalObjectId() {
        return Optional.ofNullable(this.servicePrincipalObjectId);
    }

    /**
     * Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="templateId")
    private @Nullable Output<String> templateId;

    /**
     * @return Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> templateId() {
        return Optional.ofNullable(this.templateId);
    }

    private ApplicationFromTemplateState() {}

    private ApplicationFromTemplateState(ApplicationFromTemplateState $) {
        this.applicationId = $.applicationId;
        this.applicationObjectId = $.applicationObjectId;
        this.displayName = $.displayName;
        this.servicePrincipalId = $.servicePrincipalId;
        this.servicePrincipalObjectId = $.servicePrincipalObjectId;
        this.templateId = $.templateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationFromTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationFromTemplateState $;

        public Builder() {
            $ = new ApplicationFromTemplateState();
        }

        public Builder(ApplicationFromTemplateState defaults) {
            $ = new ApplicationFromTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The resource ID for the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The resource ID for the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param applicationObjectId The object ID for the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationObjectId(@Nullable Output<String> applicationObjectId) {
            $.applicationObjectId = applicationObjectId;
            return this;
        }

        /**
         * @param applicationObjectId The object ID for the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationObjectId(String applicationObjectId) {
            return applicationObjectId(Output.of(applicationObjectId));
        }

        /**
         * @param displayName The display name for the application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name for the application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param servicePrincipalId The resource ID for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalId(@Nullable Output<String> servicePrincipalId) {
            $.servicePrincipalId = servicePrincipalId;
            return this;
        }

        /**
         * @param servicePrincipalId The resource ID for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalId(String servicePrincipalId) {
            return servicePrincipalId(Output.of(servicePrincipalId));
        }

        /**
         * @param servicePrincipalObjectId The object ID for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalObjectId(@Nullable Output<String> servicePrincipalObjectId) {
            $.servicePrincipalObjectId = servicePrincipalObjectId;
            return this;
        }

        /**
         * @param servicePrincipalObjectId The object ID for the service principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalObjectId(String servicePrincipalObjectId) {
            return servicePrincipalObjectId(Output.of(servicePrincipalObjectId));
        }

        /**
         * @param templateId Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder templateId(@Nullable Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        public ApplicationFromTemplateState build() {
            return $;
        }
    }

}
