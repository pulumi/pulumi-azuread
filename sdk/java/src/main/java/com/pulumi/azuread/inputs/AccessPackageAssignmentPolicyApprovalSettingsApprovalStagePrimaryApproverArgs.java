// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs Empty = new AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs();

    /**
     * For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     * 
     */
    @Import(name="backup")
    private @Nullable Output<Boolean> backup;

    /**
     * @return For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     * 
     */
    public Optional<Output<Boolean>> backup() {
        return Optional.ofNullable(this.backup);
    }

    /**
     * The object ID of the subject
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return The object ID of the subject
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * Type of users
     * 
     */
    @Import(name="subjectType", required=true)
    private Output<String> subjectType;

    /**
     * @return Type of users
     * 
     */
    public Output<String> subjectType() {
        return this.subjectType;
    }

    private AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs() {}

    private AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs(AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs $) {
        this.backup = $.backup;
        this.objectId = $.objectId;
        this.subjectType = $.subjectType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs $;

        public Builder() {
            $ = new AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs();
        }

        public Builder(AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs defaults) {
            $ = new AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backup For a user in an approval stage, this property indicates whether the user is a backup fallback approver
         * 
         * @return builder
         * 
         */
        public Builder backup(@Nullable Output<Boolean> backup) {
            $.backup = backup;
            return this;
        }

        /**
         * @param backup For a user in an approval stage, this property indicates whether the user is a backup fallback approver
         * 
         * @return builder
         * 
         */
        public Builder backup(Boolean backup) {
            return backup(Output.of(backup));
        }

        /**
         * @param objectId The object ID of the subject
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The object ID of the subject
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param subjectType Type of users
         * 
         * @return builder
         * 
         */
        public Builder subjectType(Output<String> subjectType) {
            $.subjectType = subjectType;
            return this;
        }

        /**
         * @param subjectType Type of users
         * 
         * @return builder
         * 
         */
        public Builder subjectType(String subjectType) {
            return subjectType(Output.of(subjectType));
        }

        public AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs build() {
            if ($.subjectType == null) {
                throw new MissingRequiredPropertyException("AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApproverArgs", "subjectType");
            }
            return $;
        }
    }

}
