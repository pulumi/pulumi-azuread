// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ApplicationPreAuthorizedArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPreAuthorizedArgs Empty = new ApplicationPreAuthorizedArgs();

    /**
     * The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    /**
     * @return The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }

    /**
     * The client ID of the application being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Import(name="authorizedClientId", required=true)
    private Output<String> authorizedClientId;

    /**
     * @return The client ID of the application being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Output<String> authorizedClientId() {
        return this.authorizedClientId;
    }

    /**
     * A set of permission scope IDs required by the authorized application.
     * 
     */
    @Import(name="permissionIds", required=true)
    private Output<List<String>> permissionIds;

    /**
     * @return A set of permission scope IDs required by the authorized application.
     * 
     */
    public Output<List<String>> permissionIds() {
        return this.permissionIds;
    }

    private ApplicationPreAuthorizedArgs() {}

    private ApplicationPreAuthorizedArgs(ApplicationPreAuthorizedArgs $) {
        this.applicationId = $.applicationId;
        this.authorizedClientId = $.authorizedClientId;
        this.permissionIds = $.permissionIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPreAuthorizedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPreAuthorizedArgs $;

        public Builder() {
            $ = new ApplicationPreAuthorizedArgs();
        }

        public Builder(ApplicationPreAuthorizedArgs defaults) {
            $ = new ApplicationPreAuthorizedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param authorizedClientId The client ID of the application being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder authorizedClientId(Output<String> authorizedClientId) {
            $.authorizedClientId = authorizedClientId;
            return this;
        }

        /**
         * @param authorizedClientId The client ID of the application being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder authorizedClientId(String authorizedClientId) {
            return authorizedClientId(Output.of(authorizedClientId));
        }

        /**
         * @param permissionIds A set of permission scope IDs required by the authorized application.
         * 
         * @return builder
         * 
         */
        public Builder permissionIds(Output<List<String>> permissionIds) {
            $.permissionIds = permissionIds;
            return this;
        }

        /**
         * @param permissionIds A set of permission scope IDs required by the authorized application.
         * 
         * @return builder
         * 
         */
        public Builder permissionIds(List<String> permissionIds) {
            return permissionIds(Output.of(permissionIds));
        }

        /**
         * @param permissionIds A set of permission scope IDs required by the authorized application.
         * 
         * @return builder
         * 
         */
        public Builder permissionIds(String... permissionIds) {
            return permissionIds(List.of(permissionIds));
        }

        public ApplicationPreAuthorizedArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("ApplicationPreAuthorizedArgs", "applicationId");
            }
            if ($.authorizedClientId == null) {
                throw new MissingRequiredPropertyException("ApplicationPreAuthorizedArgs", "authorizedClientId");
            }
            if ($.permissionIds == null) {
                throw new MissingRequiredPropertyException("ApplicationPreAuthorizedArgs", "permissionIds");
            }
            return $;
        }
    }

}
