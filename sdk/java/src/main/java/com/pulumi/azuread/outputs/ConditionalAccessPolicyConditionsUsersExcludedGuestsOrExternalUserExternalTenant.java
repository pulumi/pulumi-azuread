// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant {
    /**
     * @return A list tenant IDs. Can only be specified if `membershipKind` is `enumerated`.
     * 
     */
    private @Nullable List<String> members;
    /**
     * @return The external tenant membership kind. Possible values are: `all`, `enumerated`, `unknownFutureValue`.
     * 
     */
    private String membershipKind;

    private ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant() {}
    /**
     * @return A list tenant IDs. Can only be specified if `membershipKind` is `enumerated`.
     * 
     */
    public List<String> members() {
        return this.members == null ? List.of() : this.members;
    }
    /**
     * @return The external tenant membership kind. Possible values are: `all`, `enumerated`, `unknownFutureValue`.
     * 
     */
    public String membershipKind() {
        return this.membershipKind;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> members;
        private String membershipKind;
        public Builder() {}
        public Builder(ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.members = defaults.members;
    	      this.membershipKind = defaults.membershipKind;
        }

        @CustomType.Setter
        public Builder members(@Nullable List<String> members) {

            this.members = members;
            return this;
        }
        public Builder members(String... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder membershipKind(String membershipKind) {
            if (membershipKind == null) {
              throw new MissingRequiredPropertyException("ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant", "membershipKind");
            }
            this.membershipKind = membershipKind;
            return this;
        }
        public ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant build() {
            final var _resultValue = new ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant();
            _resultValue.members = members;
            _resultValue.membershipKind = membershipKind;
            return _resultValue;
        }
    }
}
