// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPreAuthorizedState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPreAuthorizedState Empty = new ApplicationPreAuthorizedState();

    /**
     * The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * The client ID of the application being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Import(name="authorizedClientId")
    private @Nullable Output<String> authorizedClientId;

    /**
     * @return The client ID of the application being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> authorizedClientId() {
        return Optional.ofNullable(this.authorizedClientId);
    }

    /**
     * A set of permission scope IDs required by the authorized application.
     * 
     */
    @Import(name="permissionIds")
    private @Nullable Output<List<String>> permissionIds;

    /**
     * @return A set of permission scope IDs required by the authorized application.
     * 
     */
    public Optional<Output<List<String>>> permissionIds() {
        return Optional.ofNullable(this.permissionIds);
    }

    private ApplicationPreAuthorizedState() {}

    private ApplicationPreAuthorizedState(ApplicationPreAuthorizedState $) {
        this.applicationId = $.applicationId;
        this.authorizedClientId = $.authorizedClientId;
        this.permissionIds = $.permissionIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPreAuthorizedState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPreAuthorizedState $;

        public Builder() {
            $ = new ApplicationPreAuthorizedState();
        }

        public Builder(ApplicationPreAuthorizedState defaults) {
            $ = new ApplicationPreAuthorizedState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param authorizedClientId The client ID of the application being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder authorizedClientId(@Nullable Output<String> authorizedClientId) {
            $.authorizedClientId = authorizedClientId;
            return this;
        }

        /**
         * @param authorizedClientId The client ID of the application being authorized. Changing this field forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder authorizedClientId(String authorizedClientId) {
            return authorizedClientId(Output.of(authorizedClientId));
        }

        /**
         * @param permissionIds A set of permission scope IDs required by the authorized application.
         * 
         * @return builder
         * 
         */
        public Builder permissionIds(@Nullable Output<List<String>> permissionIds) {
            $.permissionIds = permissionIds;
            return this;
        }

        /**
         * @param permissionIds A set of permission scope IDs required by the authorized application.
         * 
         * @return builder
         * 
         */
        public Builder permissionIds(List<String> permissionIds) {
            return permissionIds(Output.of(permissionIds));
        }

        /**
         * @param permissionIds A set of permission scope IDs required by the authorized application.
         * 
         * @return builder
         * 
         */
        public Builder permissionIds(String... permissionIds) {
            return permissionIds(List.of(permissionIds));
        }

        public ApplicationPreAuthorizedState build() {
            return $;
        }
    }

}
