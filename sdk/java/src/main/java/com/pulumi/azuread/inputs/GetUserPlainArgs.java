// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUserPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserPlainArgs Empty = new GetUserPlainArgs();

    /**
     * The employee identifier assigned to the user by the organisation.
     * 
     */
    @Import(name="employeeId")
    private @Nullable String employeeId;

    /**
     * @return The employee identifier assigned to the user by the organisation.
     * 
     */
    public Optional<String> employeeId() {
        return Optional.ofNullable(this.employeeId);
    }

    /**
     * The SMTP address for the user.
     * 
     */
    @Import(name="mail")
    private @Nullable String mail;

    /**
     * @return The SMTP address for the user.
     * 
     */
    public Optional<String> mail() {
        return Optional.ofNullable(this.mail);
    }

    /**
     * The email alias of the user.
     * 
     */
    @Import(name="mailNickname")
    private @Nullable String mailNickname;

    /**
     * @return The email alias of the user.
     * 
     */
    public Optional<String> mailNickname() {
        return Optional.ofNullable(this.mailNickname);
    }

    /**
     * The object ID of the user.
     * 
     */
    @Import(name="objectId")
    private @Nullable String objectId;

    /**
     * @return The object ID of the user.
     * 
     */
    public Optional<String> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The user principal name (UPN) of the user.
     * 
     * &gt; One of `user_principal_name`, `object_id`, `mail`, `mail_nickname` or `employee_id` must be specified.
     * 
     */
    @Import(name="userPrincipalName")
    private @Nullable String userPrincipalName;

    /**
     * @return The user principal name (UPN) of the user.
     * 
     * &gt; One of `user_principal_name`, `object_id`, `mail`, `mail_nickname` or `employee_id` must be specified.
     * 
     */
    public Optional<String> userPrincipalName() {
        return Optional.ofNullable(this.userPrincipalName);
    }

    private GetUserPlainArgs() {}

    private GetUserPlainArgs(GetUserPlainArgs $) {
        this.employeeId = $.employeeId;
        this.mail = $.mail;
        this.mailNickname = $.mailNickname;
        this.objectId = $.objectId;
        this.userPrincipalName = $.userPrincipalName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserPlainArgs $;

        public Builder() {
            $ = new GetUserPlainArgs();
        }

        public Builder(GetUserPlainArgs defaults) {
            $ = new GetUserPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param employeeId The employee identifier assigned to the user by the organisation.
         * 
         * @return builder
         * 
         */
        public Builder employeeId(@Nullable String employeeId) {
            $.employeeId = employeeId;
            return this;
        }

        /**
         * @param mail The SMTP address for the user.
         * 
         * @return builder
         * 
         */
        public Builder mail(@Nullable String mail) {
            $.mail = mail;
            return this;
        }

        /**
         * @param mailNickname The email alias of the user.
         * 
         * @return builder
         * 
         */
        public Builder mailNickname(@Nullable String mailNickname) {
            $.mailNickname = mailNickname;
            return this;
        }

        /**
         * @param objectId The object ID of the user.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable String objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param userPrincipalName The user principal name (UPN) of the user.
         * 
         * &gt; One of `user_principal_name`, `object_id`, `mail`, `mail_nickname` or `employee_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder userPrincipalName(@Nullable String userPrincipalName) {
            $.userPrincipalName = userPrincipalName;
            return this;
        }

        public GetUserPlainArgs build() {
            return $;
        }
    }

}
