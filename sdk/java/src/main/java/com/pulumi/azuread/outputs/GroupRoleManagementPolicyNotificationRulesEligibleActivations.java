// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.outputs;

import com.pulumi.azuread.outputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications;
import com.pulumi.azuread.outputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications;
import com.pulumi.azuread.outputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GroupRoleManagementPolicyNotificationRulesEligibleActivations {
    /**
     * @return Admin notification settings
     * 
     */
    private @Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications adminNotifications;
    /**
     * @return Approver notification settings
     * 
     */
    private @Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications approverNotifications;
    /**
     * @return Assignee notification settings
     * 
     */
    private @Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications assigneeNotifications;

    private GroupRoleManagementPolicyNotificationRulesEligibleActivations() {}
    /**
     * @return Admin notification settings
     * 
     */
    public Optional<GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications> adminNotifications() {
        return Optional.ofNullable(this.adminNotifications);
    }
    /**
     * @return Approver notification settings
     * 
     */
    public Optional<GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications> approverNotifications() {
        return Optional.ofNullable(this.approverNotifications);
    }
    /**
     * @return Assignee notification settings
     * 
     */
    public Optional<GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications> assigneeNotifications() {
        return Optional.ofNullable(this.assigneeNotifications);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupRoleManagementPolicyNotificationRulesEligibleActivations defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications adminNotifications;
        private @Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications approverNotifications;
        private @Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications assigneeNotifications;
        public Builder() {}
        public Builder(GroupRoleManagementPolicyNotificationRulesEligibleActivations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminNotifications = defaults.adminNotifications;
    	      this.approverNotifications = defaults.approverNotifications;
    	      this.assigneeNotifications = defaults.assigneeNotifications;
        }

        @CustomType.Setter
        public Builder adminNotifications(@Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications adminNotifications) {

            this.adminNotifications = adminNotifications;
            return this;
        }
        @CustomType.Setter
        public Builder approverNotifications(@Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications approverNotifications) {

            this.approverNotifications = approverNotifications;
            return this;
        }
        @CustomType.Setter
        public Builder assigneeNotifications(@Nullable GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications assigneeNotifications) {

            this.assigneeNotifications = assigneeNotifications;
            return this;
        }
        public GroupRoleManagementPolicyNotificationRulesEligibleActivations build() {
            final var _resultValue = new GroupRoleManagementPolicyNotificationRulesEligibleActivations();
            _resultValue.adminNotifications = adminNotifications;
            _resultValue.approverNotifications = approverNotifications;
            _resultValue.assigneeNotifications = assigneeNotifications;
            return _resultValue;
        }
    }
}
